{"version":3,"sources":["../../src/_core/defineprop.js"],"names":["errorAccessor","defineProp","object","key","noAccessor","def","defs","get","props","propDef","value","mediator","bindings","getter","setter","isSeempleArray","Object","defineProperty","configurable","enumerable","set","v","fromSetter"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA,SAASA,aAAT,GAAyB;AACvB,QAAM,8BAAa,wBAAb,CAAN;AACD,C,CAED;;;AACe,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,UAAjC,EAA6C;AAC1D,MAAMC,GAAG,GAAGC,iBAAKC,GAAL,CAASL,MAAT,CAAZ,CAD0D,CAG1D;;;AACA,MAAI,CAACG,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AAED,MAAI,CAACA,GAAG,CAACG,KAAJ,CAAUL,GAAV,CAAL,EAAqB;AACnB,QAAMM,OAAO,GAAGJ,GAAG,CAACG,KAAJ,CAAUL,GAAV,IAAiB;AAC/BO,MAAAA,KAAK,EAAER,MAAM,CAACC,GAAD,CADkB;AAE/BQ,MAAAA,QAAQ,EAAE,IAFqB;AAG/BC,MAAAA,QAAQ,EAAE;AAHqB,KAAjC;AAKA,QAAIC,MAAJ;AACA,QAAIC,MAAJ,CAPmB,CASnB;AACA;;AACA,QAAIX,GAAG,KAAK,SAAR,IAAsBD,MAAM,CAACa,cAAP,IAAyBZ,GAAG,KAAK,WAA3D,EAAyE;AACvEU,MAAAA,MAAM,GAAGC,MAAM,GAAGd,aAAlB;AACD;;AAED,QAAI,CAACI,UAAL,EAAiB;AACfY,MAAAA,MAAM,CAACC,cAAP,CAAsBf,MAAtB,EAA8BC,GAA9B,EAAmC;AACjCe,QAAAA,YAAY,EAAE,IADmB;AAEjCC,QAAAA,UAAU,EAAE,IAFqB;AAGjCZ,QAAAA,GAHiC,iBAG3B;AACJ,iBAAOM,MAAM,GAAGA,MAAM,EAAT,GAAcJ,OAAO,CAACC,KAAnC;AACD,SALgC;AAMjCU,QAAAA,GANiC,eAM7BC,CAN6B,EAM1B;AACL,iBAAOP,MAAM,GAAGA,MAAM,EAAT,GAAc,sBAAIZ,MAAJ,EAAYC,GAAZ,EAAiBkB,CAAjB,EAAoB;AAC7CC,YAAAA,UAAU,EAAE;AADiC,WAApB,CAA3B;AAGD;AAVgC,OAAnC;AAYD;AACF;;AAED,SAAOjB,GAAG,CAACG,KAAJ,CAAUL,GAAV,CAAP;AACD","sourcesContent":["import defs from './defs';\nimport set from '../set';\nimport seempleError from '../_helpers/seempleerror';\n\nfunction errorAccessor() {\n  throw seempleError('common:use_magic_props');\n}\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key, noAccessor) {\n  const def = defs.get(object);\n\n  // if no object definition do nothing\n  if (!def) {\n    return null;\n  }\n\n  if (!def.props[key]) {\n    const propDef = def.props[key] = {\n      value: object[key],\n      mediator: null,\n      bindings: null\n    };\n    let getter;\n    let setter;\n\n    // make possible to throw an error on get and on set if sandbox (for all objects)\n    // or container (for Seemple.Array instances) are used\n    if (key === 'sandbox' || (object.isSeempleArray && key === 'container')) {\n      getter = setter = errorAccessor;\n    }\n\n    if (!noAccessor) {\n      Object.defineProperty(object, key, {\n        configurable: true,\n        enumerable: true,\n        get() {\n          return getter ? getter() : propDef.value;\n        },\n        set(v) {\n          return setter ? setter() : set(object, key, v, {\n            fromSetter: true\n          });\n        }\n      });\n    }\n  }\n\n  return def.props[key];\n}\n"],"file":"defineprop.js"}