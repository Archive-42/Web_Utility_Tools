{"version":3,"sources":["../../../src/_dom/mq/off.js"],"names":["splitBySpaceReg","splitByDotReg","off","namesStr","selector","handler","names","split","i","length","name","namespace","j","node","k","keys","Object","data","allEvents","events","l","event","nodeID","b$","removeEventListener","delegate","splice"],"mappings":"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","sourcesContent":["import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\n\n// removes event handler from a set of elements\nexport default function off(namesStr, selector, handler) {\n  if (typeof selector === 'function') {\n    handler = selector; // eslint-disable-line no-param-reassign\n    selector = null; // eslint-disable-line no-param-reassign\n  }\n\n  const names = namesStr.split(splitBySpaceReg);\n\n  for (let i = 0; i < names.length; i++) {\n    const [name, namespace] = names[i].split(splitByDotReg);\n\n    for (let j = 0; j < this.length; j++) {\n      const node = this[j];\n\n      if (!name && namespace) {\n        for (let k = 0, keys = Object.keys(data.allEvents); k < keys.length; k++) {\n          const events = data.allEvents[keys[k]];\n\n          for (let l = 0; l < events.length; l++) {\n            const event = events[i];\n            if (event.namespace === namespace && event.nodeID === node.b$) {\n              node.removeEventListener(event.name, event.delegate || event.handler);\n              events.splice(l, 1);\n              l -= 1;\n            }\n          }\n        }\n\n        continue;\n      }\n\n      const events = data.allEvents[name + node.b$];\n      if (events) {\n        for (let k = 0; k < events.length; k++) {\n          const event = events[k];\n          if (\n            (!handler || handler === event.handler || handler === event.delegate)\n                        && (!namespace || namespace === event.namespace)\n                        && (!selector || selector === event.selector)\n          ) {\n            node.removeEventListener(name, event.delegate || event.handler);\n            events.splice(k, 1);\n            k -= 1;\n          }\n        }\n      } else if (!namespace && !selector) {\n        node.removeEventListener(name, handler);\n      }\n    }\n  }\n\n  return this;\n}\n"],"file":"off.js"}