{"version":3,"sources":["../../../src/array/_processrendering/processunshift.js"],"names":["processUnshift","self","selfDef","eventOptions","container","added","silent","i","length","item","node","itemEventOptions","firstChild","insertBefore","appendChild"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACe,SAASA,cAAT,OAKZ;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,SACC,QADDA,SACC;AAAA,MACOC,KADP,GACyBF,YADzB,CACOE,KADP;AAAA,MACcC,MADd,GACyBH,YADzB,CACcG,MADd,EAGD;;AACA,OAAK,IAAIC,CAAC,GAAGF,KAAK,CAACG,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,QAAME,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAlB;;AACA,QAAIE,IAAI,IAAI,yBAAOA,IAAP,MAAgB,QAA5B,EAAsC;AACpC;AACA,4CAAqB;AACnBA,QAAAA,IAAI,EAAJA,IADmB;AAEnBP,QAAAA,OAAO,EAAPA;AAFmB,OAArB;;AAFoC,4BAOD,gCAAe;AAChDA,QAAAA,OAAO,EAAPA,OADgD;AAEhDD,QAAAA,IAAI,EAAJA,IAFgD;AAGhDQ,QAAAA,IAAI,EAAJA,IAHgD;AAIhDN,QAAAA,YAAY,EAAZA;AAJgD,OAAf,CAPC;AAAA,UAO5BO,IAP4B,mBAO5BA,IAP4B;AAAA,UAOtBC,gBAPsB,mBAOtBA,gBAPsB;;AAcpC,UAAID,IAAJ,EAAU;AACR,YAAIN,SAAS,CAACQ,UAAd,EAA0B;AACxBR,UAAAA,SAAS,CAACS,YAAV,CAAuBH,IAAvB,EAA6BN,SAAS,CAACQ,UAAvC;AACD,SAFD,MAEO;AACLR,UAAAA,SAAS,CAACU,WAAV,CAAsBJ,IAAtB;AACD;;AAED,YAAI,CAACJ,MAAL,EAAa;AACX,sCAAWG,IAAX,EAAiB,aAAjB,EAAgCE,gBAAhC;AACD;AACF;AACF;AACF;AACF","sourcesContent":["import renderItemNode from './renderitemnode';\nimport triggerOne from '../../trigger/_triggerone';\nimport checkAlreadyRendered from './checkalreadyrendered';\n\n// this function renders inserted items if possible when unshift or push method is called\nexport default function processUnshift({\n  self,\n  selfDef,\n  eventOptions,\n  container\n}) {\n  const { added, silent } = eventOptions;\n\n  // iterate over all added items in opposite order\n  for (let i = added.length - 1; i + 1; i--) {\n    const item = added[i];\n    if (item && typeof item === 'object') {\n      // if a node of an item is already rendered then throw an error\n      checkAlreadyRendered({\n        item,\n        selfDef\n      });\n\n      const { node, itemEventOptions } = renderItemNode({\n        selfDef,\n        self,\n        item,\n        eventOptions\n      });\n\n      if (node) {\n        if (container.firstChild) {\n          container.insertBefore(node, container.firstChild);\n        } else {\n          container.appendChild(node);\n        }\n\n        if (!silent) {\n          triggerOne(item, 'afterrender', itemEventOptions);\n        }\n      }\n    }\n  }\n}\n"],"file":"processunshift.js"}