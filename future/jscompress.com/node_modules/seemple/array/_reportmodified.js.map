{"version":3,"sources":["../../src/array/_reportmodified.js"],"names":["reportModified","self","eventOptions","added","removed","silent","method","dontRender","addedLength","length","removedLength","modified","defs","get","events","renderIfPossible","asteriskAddEvtName","asteriskRemoveEvtName","add","addone","i","addedItem","remove","removeone","removedItem","modify"],"mappings":"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","sourcesContent":["import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport processRendering from './_processrendering';\n\n// fires events and triggers rendering logic\nexport default function reportModified(self, eventOptions) {\n  const {\n    added,\n    removed,\n    silent,\n    method,\n    dontRender\n  } = eventOptions;\n  const addedLength = added.length;\n  const removedLength = removed.length;\n  const modified = addedLength || removedLength || method === 'sort' || method === 'reverse';\n  const { events } = defs.get(self);\n  const { renderIfPossible = true } = self;\n  const asteriskAddEvtName = '_asterisk:add';\n  const asteriskRemoveEvtName = '_asterisk:remove';\n\n  // if something is added and an array has delegated \"asterisk\" events\n  // then attatch delegated event handlers to newly added items\n  if (addedLength && events[asteriskAddEvtName]) {\n    triggerOne(self, asteriskAddEvtName, eventOptions);\n  }\n\n  // if something is removed and an array has delegated \"asterisk\" events\n  // then remove delegated event handlers from removed items\n  if (removedLength && events[asteriskRemoveEvtName]) {\n    triggerOne(self, asteriskRemoveEvtName, eventOptions);\n  }\n\n  if (!silent) {\n    // fire additional event name (like \"push\")\n    if (events[method]) {\n      triggerOne(self, method, eventOptions);\n    }\n\n    // if something is added then fire add and addone events\n    if (addedLength) {\n      if (events.add) {\n        triggerOne(self, 'add', eventOptions);\n      }\n\n      if (events.addone) {\n        for (let i = 0; i < addedLength; i++) {\n          triggerOne(self, 'addone', {\n            self,\n            addedItem: added[i]\n          });\n        }\n      }\n    }\n\n    // if something is removed then fire add and addone events\n    if (removedLength) {\n      if (events.remove) {\n        triggerOne(self, 'remove', eventOptions);\n      }\n\n      if (events.removeone) {\n        for (let i = 0; i < removedLength; i++) {\n          triggerOne(self, 'removeone', {\n            self,\n            removedItem: removed[i]\n          });\n        }\n      }\n    }\n\n    // modify event says that something is added or removed\n    if (events.modify) {\n      triggerOne(self, 'modify', eventOptions);\n    }\n  }\n\n  // trigger rendering logic if possible\n  if (modified && !dontRender && renderIfPossible) {\n    processRendering({\n      self,\n      eventOptions\n    });\n  }\n}\n"],"file":"_reportmodified.js"}