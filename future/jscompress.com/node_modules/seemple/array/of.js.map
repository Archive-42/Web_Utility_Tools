{"version":3,"sources":["../../src/array/of.js"],"names":["of","ParentClass","require","result","newItems","Array","arguments","length","item","index"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;AACA;AACe,SAASA,EAAT,GAAc;AAAA;AAC3B;AACA;AACA,MAAMC,WAAW,GAAG,OAAO,IAAP,KAAgB,UAAhB,GAA6B,IAA7B,GAAoCC,OAAO,CAAC,IAAD,CAAP,WAAxD;AAEA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,EAAf;AACA,MAAMG,QAAQ,GAAGC,KAAK,CAACC,SAAS,CAACC,MAAX,CAAtB;AAEA,2BAAQD,SAAR,EAAmB,UAACE,IAAD,EAAOC,KAAP,EAAiB;AAClCL,IAAAA,QAAQ,CAACK,KAAD,CAAR,GAAkBH,UAAS,CAACG,KAAD,CAA3B;AACD,GAFD;AAIA,SAAO,+BAAcN,MAAd,EAAsBC,QAAtB,CAAP;AACD","sourcesContent":["import cheapRecreate from './_cheaprecreate';\nimport forEach from '../_helpers/foreach';\n\n// creates a new Seemple.Array instance with a variable number of arguments,\n// regardless of number or type of the arguments\nexport default function of() {\n  // allow to inherit this method by child classes\n  // require('./') fixes circular ref issue\n  const ParentClass = typeof this === 'function' ? this : require('./').default;\n\n  const result = new ParentClass();\n  const newItems = Array(arguments.length);\n\n  forEach(arguments, (item, index) => {\n    newItems[index] = arguments[index];\n  });\n\n  return cheapRecreate(result, newItems);\n}\n"],"file":"of.js"}