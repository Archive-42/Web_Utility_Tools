{"version":3,"sources":["../../src/binders/select.js"],"names":["select","multiple","on","getValue","options","result","i","length","selected","push","value","setValue","givenValue","indexOf"],"mappings":";;;;;;;AAAA;AACe,SAASA,MAAT,CAAgBC,QAAhB,EAA0B;AACvC,MAAIA,QAAJ,EAAc;AACZ,WAAO;AACLC,MAAAA,EAAE,EAAE,QADC;AAELC,MAAAA,QAFK,sBAEM;AAAA,YACDC,OADC,GACW,IADX,CACDA,OADC;AAET,YAAMC,MAAM,GAAG,EAAf;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBF,OAAO,CAACG,MAAR,GAAiBD,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACvC,cAAIF,OAAO,CAACE,CAAD,CAAP,CAAWE,QAAf,EAAyB;AACvBH,YAAAA,MAAM,CAACI,IAAP,CAAYL,OAAO,CAACE,CAAD,CAAP,CAAWI,KAAvB;AACD;AACF;;AAED,eAAOL,MAAP;AACD,OAbI;AAcLM,MAAAA,QAdK,oBAcIC,UAdJ,EAcgB;AAAA,YACXR,OADW,GACC,IADD,CACXA,OADW;AAEnB,YAAMM,KAAK,GAAG,OAAOE,UAAP,KAAsB,QAAtB,GAAiC,CAACA,UAAD,CAAjC,GAAgDA,UAA9D;;AACA,aAAK,IAAIN,CAAC,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAA9B,EAAiCD,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC5CF,UAAAA,OAAO,CAACE,CAAD,CAAP,CAAWE,QAAX,GAAsB,CAACE,KAAK,CAACG,OAAN,CAAcT,OAAO,CAACE,CAAD,CAAP,CAAWI,KAAzB,CAAvB;AACD;AACF;AApBI,KAAP;AAsBD;;AAED,SAAO;AACLR,IAAAA,EAAE,EAAE,QADC;AAELC,IAAAA,QAFK,sBAEM;AACT,aAAO,KAAKO,KAAZ;AACD,KAJI;AAKLC,IAAAA,QALK,oBAKID,KALJ,EAKW;AACd,WAAKA,KAAL,GAAaA,KAAb;;AAEA,UAAI,CAACA,KAAL,EAAY;AAAA,YACFN,OADE,GACU,IADV,CACFA,OADE;;AAEV,aAAK,IAAIE,CAAC,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAA9B,EAAiCD,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC5C,cAAI,CAACF,OAAO,CAACE,CAAD,CAAP,CAAWI,KAAhB,EAAuB;AACrBN,YAAAA,OAAO,CAACE,CAAD,CAAP,CAAWE,QAAX,GAAsB,IAAtB;AACA;AACD;AACF;AACF;AACF;AAjBI,GAAP;AAmBD","sourcesContent":["// returns a binder for select element\nexport default function select(multiple) {\n  if (multiple) {\n    return {\n      on: 'change',\n      getValue() {\n        const { options } = this;\n        const result = [];\n\n        for (let i = 0; options.length > i; i++) {\n          if (options[i].selected) {\n            result.push(options[i].value);\n          }\n        }\n\n        return result;\n      },\n      setValue(givenValue) {\n        const { options } = this;\n        const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n        for (let i = options.length - 1; i >= 0; i--) {\n          options[i].selected = ~value.indexOf(options[i].value);\n        }\n      }\n    };\n  }\n\n  return {\n    on: 'change',\n    getValue() {\n      return this.value;\n    },\n    setValue(value) {\n      this.value = value;\n\n      if (!value) {\n        const { options } = this;\n        for (let i = options.length - 1; i >= 0; i--) {\n          if (!options[i].value) {\n            options[i].selected = true;\n            break;\n          }\n        }\n      }\n    }\n  };\n}\n"],"file":"select.js"}