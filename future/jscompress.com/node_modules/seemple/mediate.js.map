{"version":3,"sources":["../src/mediate.js"],"names":["createMediator","object","propDef","key","mediator","propMediator","value","call","mediate","givenKeys","isSeemple","isKeysArray","Array","objVal","objKey","keys","fromMediator"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA,SAASA,cAAT,OAKG;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,GAEC,QAFDA,GAEC;AAAA,MADDC,QACC,QADDA,QACC;AACD,SAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC;AACA,WAAOF,QAAQ,CAACG,IAAT,CAAcN,MAAd,EAAsBK,KAAtB,EAA6BJ,OAAO,CAACI,KAArC,EAA4CH,GAA5C,EAAiDF,MAAjD,CAAP;AACD,GAHD;AAID,C,CAED;;;AACe,SAASO,OAAT,CAAiBP,MAAjB,EAAyBQ,SAAzB,EAAoCL,QAApC,EAA8C;AAC3D,MAAI,yBAAO,IAAP,MAAgB,QAAhB,IAA4B,KAAKM,SAArC,EAAgD;AAC9C;;AACA;AACAN,IAAAA,QAAQ,GAAGK,SAAX;AACAA,IAAAA,SAAS,GAAGR,MAAZ;AACAA,IAAAA,MAAM,GAAG,IAAT;AACA;AACD,GAPD,MAOO;AACL;AACA,qCAAgBA,MAAhB,EAAwB,SAAxB;AACD;;AAED,MAAMU,WAAW,GAAGF,SAAS,YAAYG,KAAzC,CAb2D,CAe3D;;AACA,MAAI,yBAAOH,SAAP,MAAqB,QAArB,IAAiC,CAACE,WAAtC,EAAmD;AACjD,4BAAOF,SAAP,EAAkB,UAACI,MAAD,EAASC,MAAT;AAAA,aAAoBN,OAAO,CAACP,MAAD,EAASa,MAAT,EAAiBD,MAAjB,CAA3B;AAAA,KAAlB;AACA,WAAOZ,MAAP;AACD;;AAED,wBAAYA,MAAZ,EArB2D,CAuB3D;;AACA,MAAMc,IAAI,GAAGJ,WAAW,GAAGF,SAAH,GAAe,CAACA,SAAD,CAAvC;AAEA,2BAAQM,IAAR,EAAc,UAACZ,GAAD,EAAS;AACrB;AACA,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,YAAM,8BAAa,kBAAb,EAAiC;AAAEA,QAAAA,GAAG,EAAHA;AAAF,OAAjC,CAAN;AACD;;AAED,QAAMD,OAAO,GAAG,4BAAWD,MAAX,EAAmBE,GAAnB,CAAhB;AAEA,QAAME,YAAY,GAAGH,OAAO,CAACE,QAAR,GAAmBJ,cAAc,CAAC;AACrDC,MAAAA,MAAM,EAANA,MADqD;AAErDC,MAAAA,OAAO,EAAPA,OAFqD;AAGrDC,MAAAA,GAAG,EAAHA,GAHqD;AAIrDC,MAAAA,QAAQ,EAARA;AAJqD,KAAD,CAAtD,CARqB,CAerB;;AACA,yBAAIH,MAAJ,EAAYE,GAAZ,EAAiBE,YAAY,CAACH,OAAO,CAACI,KAAT,CAA7B,EAA8C;AAC5CU,MAAAA,YAAY,EAAE;AAD8B,KAA9C;AAGD,GAnBD;AAqBA,SAAOf,MAAP;AACD","sourcesContent":["import initSeemple from './_core/init';\nimport defineProp from './_core/defineprop';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport forEach from './_helpers/foreach';\nimport set from './set';\nimport seempleError from './_helpers/seempleerror';\nimport forOwn from './_helpers/forown';\n\n// creates property mediator\nfunction createMediator({\n  object,\n  propDef,\n  key,\n  mediator\n}) {\n  return function propMediator(value) {\n    // args: value, previousValue, key, object itself\n    return mediator.call(object, value, propDef.value, key, object);\n  };\n}\n\n// transforms property value on its changing\nexport default function mediate(object, givenKeys, mediator) {\n  if (typeof this === 'object' && this.isSeemple) {\n    // when context is Seemple instance, use this as an object and shift other args\n    /* eslint-disable no-param-reassign */\n    mediator = givenKeys;\n    givenKeys = object;\n    object = this;\n    /* eslint-enable no-param-reassign */\n  } else {\n    // throw error when object type is wrong\n    checkObjectType(object, 'mediate');\n  }\n\n  const isKeysArray = givenKeys instanceof Array;\n\n  // allow to use key-mediator object as another method variation\n  if (typeof givenKeys === 'object' && !isKeysArray) {\n    forOwn(givenKeys, (objVal, objKey) => mediate(object, objKey, objVal));\n    return object;\n  }\n\n  initSeemple(object);\n\n  // allow to use both single key and an array of keys\n  const keys = isKeysArray ? givenKeys : [givenKeys];\n\n  forEach(keys, (key) => {\n    // if non-string is passed as a key\n    if (typeof key !== 'string') {\n      throw seempleError('mediate:key_type', { key });\n    }\n\n    const propDef = defineProp(object, key);\n\n    const propMediator = propDef.mediator = createMediator({\n      object,\n      propDef,\n      key,\n      mediator\n    });\n\n    // set new value\n    set(object, key, propMediator(propDef.value), {\n      fromMediator: true\n    });\n  });\n\n  return object;\n}\n"],"file":"mediate.js"}