{"version":3,"sources":["../../src/object/_afterinit.js"],"names":["changeDelegatedHandler","eventOptions","key","def","defs","get","keys","deleteDelegatedHandler","changeHandler","silent","deleteHandler","afterSeempleObjectInit","afterSeempleInit","call"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA,SAASA,sBAAT,GAAmD;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAAA,MACzCC,GADyC,GACjCD,YADiC,CACzCC,GADyC;;AAEjD,MAAMC,GAAG,GAAGC,iBAAKC,GAAL,CAAS,IAAT,CAAZ;;AAEA,MAAIH,GAAG,IAAIA,GAAG,IAAIC,GAAG,CAACG,IAAtB,EAA4B;AAC1B,gCAAW,IAAX,EAAiB,eAAjB,EAAkCL,YAAlC;AACD;AACF,C,CAED;AACA;;;AACA,SAASM,sBAAT,GAAmD;AAAA,MAAnBN,YAAmB,uEAAJ,EAAI;AAAA,MACzCC,GADyC,GACjCD,YADiC,CACzCC,GADyC;;AAEjD,MAAMC,GAAG,GAAGC,iBAAKC,GAAL,CAAS,IAAT,CAAZ;;AAEA,MAAIH,GAAG,IAAIA,GAAG,IAAIC,GAAG,CAACG,IAAtB,EAA4B;AAC1B,gCAAW,IAAX,EAAiB,kBAAjB,EAAqCL,YAArC;AACD;AACF,C,CAED;AACA;;;AACA,SAASO,aAAT,GAA0C;AAAA,MAAnBP,YAAmB,uEAAJ,EAAI;AAAA,MAChCC,GADgC,GAChBD,YADgB,CAChCC,GADgC;AAAA,MAC3BO,MAD2B,GAChBR,YADgB,CAC3BQ,MAD2B;;AAExC,MAAMN,GAAG,GAAGC,iBAAKC,GAAL,CAAS,IAAT,CAAZ;;AAEA,MAAIH,GAAG,IAAIA,GAAG,IAAIC,GAAG,CAACG,IAAlB,IAA0B,CAACG,MAA/B,EAAuC;AACrC,gCAAW,IAAX,EAAiB,KAAjB,EAAwBR,YAAxB;AACA,gCAAW,IAAX,EAAiB,QAAjB,EAA2BA,YAA3B;AACD;AACF,C,CAED;AACA;;;AACA,SAASS,aAAT,GAA0C;AAAA,MAAnBT,YAAmB,uEAAJ,EAAI;AAAA,MAChCC,GADgC,GAChBD,YADgB,CAChCC,GADgC;AAAA,MAC3BO,MAD2B,GAChBR,YADgB,CAC3BQ,MAD2B;;AAExC,MAAMN,GAAG,GAAGC,iBAAKC,GAAL,CAAS,IAAT,CAAZ;;AAEA,MAAIH,GAAG,IAAIA,GAAG,IAAIC,GAAG,CAACG,IAAtB,EAA4B;AAC1B,WAAOH,GAAG,CAACG,IAAJ,CAASJ,GAAT,CAAP;;AAEA,QAAI,CAACO,MAAL,EAAa;AACX,kCAAW,IAAX,EAAiB,QAAjB,EAA2BR,YAA3B;AACA,kCAAW,IAAX,EAAiB,QAAjB,EAA2BA,YAA3B;AACD;AACF;AACF,C,CAED;;;AACe,SAASU,sBAAT,CAAgCR,GAAhC,EAAqC;AAClD;AACAS,wBAAiBC,IAAjB,CAAsB,IAAtB,EAFkD,CAGlD;;;AACAV,EAAAA,GAAG,CAACG,IAAJ,GAAW,EAAX,CAJkD,CAMlD;;AACA,+BAAY,IAAZ,EAAkB,mBAAlB,EAAuCN,sBAAvC,EAPkD,CASlD;;AACA,+BAAY,IAAZ,EAAkB,mBAAlB,EAAuCO,sBAAvC,EAVkD,CAYlD;;AACA,+BAAY,IAAZ,EAAkB,QAAlB,EAA4BC,aAA5B,EAbkD,CAelD;;AACA,+BAAY,IAAZ,EAAkB,QAAlB,EAA4BE,aAA5B;AACD","sourcesContent":["import afterSeempleInit from '../seemple/_afterinit';\nimport addListener from '../on/_addlistener';\nimport triggerOne from '../trigger/_triggerone';\nimport defs from '../_core/defs';\n\n// called on _change:delegated\n// tiggers asterisk events logic by triggering _asterisk:set\nfunction changeDelegatedHandler(eventOptions = {}) {\n  const { key } = eventOptions;\n  const def = defs.get(this);\n\n  if (key && key in def.keys) {\n    triggerOne(this, '_asterisk:set', eventOptions);\n  }\n}\n\n// called on _delete:delegated\n// removes asterisk events logic by triggering _asterisk:remove\nfunction deleteDelegatedHandler(eventOptions = {}) {\n  const { key } = eventOptions;\n  const def = defs.get(this);\n\n  if (key && key in def.keys) {\n    triggerOne(this, '_asterisk:remove', eventOptions);\n  }\n}\n\n// called on change\n// triggers set and modify if data keys are changed\nfunction changeHandler(eventOptions = {}) {\n  const { key, silent } = eventOptions;\n  const def = defs.get(this);\n\n  if (key && key in def.keys && !silent) {\n    triggerOne(this, 'set', eventOptions);\n    triggerOne(this, 'modify', eventOptions);\n  }\n}\n\n// called on delete\n// triggers remove and modify if data keys are removed\nfunction deleteHandler(eventOptions = {}) {\n  const { key, silent } = eventOptions;\n  const def = defs.get(this);\n\n  if (key && key in def.keys) {\n    delete def.keys[key];\n\n    if (!silent) {\n      triggerOne(this, 'remove', eventOptions);\n      triggerOne(this, 'modify', eventOptions);\n    }\n  }\n}\n\n// Seemple.Object initializer\nexport default function afterSeempleObjectInit(def) {\n  // Seemple initializer\n  afterSeempleInit.call(this);\n  // create a set of data keys\n  def.keys = {};\n\n  // trigger asterisk events\n  addListener(this, '_change:delegated', changeDelegatedHandler);\n\n  // trigger asterisk events removal\n  addListener(this, '_delete:delegated', deleteDelegatedHandler);\n\n  // fire \"modify\" and \"set\" events when data key is changed\n  addListener(this, 'change', changeHandler);\n\n  // fire \"modify\" and \"remove\" events when data key is removed\n  addListener(this, 'delete', deleteHandler);\n}\n"],"file":"_afterinit.js"}