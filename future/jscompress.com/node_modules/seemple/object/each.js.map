{"version":3,"sources":["../../src/object/each.js"],"names":["each","callback","thisArg","def","defs","get","ctx","keys","_","key","call"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;AACA;AACe,SAASA,IAAT,CAAcC,QAAd,EAAwBC,OAAxB,EAAiC;AAAA;;AAC9C,MAAMC,GAAG,GAAGC,iBAAKC,GAAL,CAAS,IAAT,CAAZ;;AACA,MAAMC,GAAG,GAAG,OAAOJ,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2C,IAAvD;AAEA;;AACA,MAAI,CAACC,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AAED,0BAAOA,GAAG,CAACI,IAAX,EAAiB,UAACC,CAAD,EAAIC,GAAJ,EAAY;AAC3BR,IAAAA,QAAQ,CAACS,IAAT,CAAcJ,GAAd,EAAmB,KAAI,CAACG,GAAD,CAAvB,EAA8BA,GAA9B,EAAmC,KAAnC;AACD,GAFD;AAIA,SAAO,IAAP;AACD","sourcesContent":["import defs from '../_core/defs';\nimport forOwn from '../_helpers/forown';\n\n// iterates over data keys and calls callback on every iteration\n// @IE for..of is preferable and the method will be removed in one of major versions\nexport default function each(callback, thisArg) {\n  const def = defs.get(this);\n  const ctx = typeof thisArg !== 'undefined' ? thisArg : this;\n\n  /* istanbul ignore if */\n  if (!def) {\n    return this;\n  }\n\n  forOwn(def.keys, (_, key) => {\n    callback.call(ctx, this[key], key, this);\n  });\n\n  return this;\n}\n"],"file":"each.js"}