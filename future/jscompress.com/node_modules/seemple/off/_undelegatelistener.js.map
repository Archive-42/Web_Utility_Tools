{"version":3,"sources":["../../src/off/_undelegatelistener.js"],"names":["detatchDelegatedLogic","delegatedEventName","pathStr","allEvents","retain","events","event","info","push","length","undelegateListener","object","givenPath","name","callback","context","def","defs","get","path","split","key","slice","join","isSeempleArray","delegatedAddEvtName","delegatedRemoveEvtName","item","isSeempleObject","delegatedSetEvtName","each","delegatedChangeEvtName"],"mappings":"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","sourcesContent":["import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport forEach from '../_helpers/foreach';\n\n// the function removes internally used events such as _asterisk:add\nfunction detatchDelegatedLogic({\n  delegatedEventName,\n  pathStr,\n  allEvents\n}) {\n  const retain = [];\n  const events = allEvents[delegatedEventName];\n\n  forEach(events, (event) => {\n    // pathStr is assigned to info in delegateListener\n    if (event.info.pathStr !== pathStr) {\n      retain.push(event);\n    }\n  });\n\n  if (retain.length) {\n    allEvents[delegatedEventName] = retain;\n  } else {\n    delete allEvents[delegatedEventName];\n  }\n}\n\n// removes delegated event listener from an object by given path\nexport default function undelegateListener(object, givenPath, name, callback, context, info = {}) {\n  const def = defs.get(object);\n\n  // if no definition do nothing\n  if (!def) {\n    return;\n  }\n\n  const { events: allEvents } = def;\n\n  let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n  if (!path || !path.length) {\n    // if no path then remove listener\n    removeListener(object, name, callback, context, info);\n  } else {\n    // else do all magic\n    const key = path[0];\n    let pathStr;\n\n    if (path.length > 1) {\n      path = path.slice(1);\n      pathStr = path.join('.');\n    } else {\n      path = [];\n      pathStr = path[0] || '';\n    }\n\n    if (key === '*') {\n      // remove asterisk events\n      if (object.isSeempleArray) {\n        const delegatedAddEvtName = '_asterisk:add';\n        if (allEvents[delegatedAddEvtName]) {\n          detatchDelegatedLogic({\n            delegatedEventName: delegatedAddEvtName,\n            pathStr,\n            allEvents\n          });\n        }\n\n        const delegatedRemoveEvtName = '_asterisk:remove';\n        if (allEvents[delegatedRemoveEvtName]) {\n          detatchDelegatedLogic({\n            delegatedEventName: delegatedRemoveEvtName,\n            pathStr,\n            allEvents\n          });\n        }\n\n        // undelegate asterisk events for existing items\n        if (object.length) {\n          forEach(object, (item) => {\n            if (item && typeof item === 'object') {\n              undelegateListener(item, path, name, callback, context, info);\n            }\n          });\n        }\n      } else if (object.isSeempleObject) {\n        const delegatedSetEvtName = '_asterisk:set';\n        if (allEvents[delegatedSetEvtName]) {\n          detatchDelegatedLogic({\n            delegatedEventName: delegatedSetEvtName,\n            pathStr,\n            allEvents\n          });\n        }\n\n        const delegatedRemoveEvtName = '_asterisk:remove';\n        if (allEvents[delegatedRemoveEvtName]) {\n          detatchDelegatedLogic({\n            delegatedEventName: delegatedRemoveEvtName,\n            pathStr,\n            allEvents\n          });\n        }\n\n        object.each((item) => {\n          if (item && typeof item === 'object') {\n            undelegateListener(item, path, name, callback, context, info);\n          }\n        });\n      }\n    } else {\n      // remove non-asterisk delegated events\n\n      const delegatedChangeEvtName = `_change:delegated:${key}`;\n      if (allEvents[delegatedChangeEvtName]) {\n        detatchDelegatedLogic({\n          delegatedEventName: delegatedChangeEvtName,\n          pathStr,\n          allEvents\n        });\n      }\n\n      if (typeof object[key] === 'object') {\n        undelegateListener(object[key], path, name, callback, context, info);\n      }\n    }\n  }\n}\n"],"file":"_undelegatelistener.js"}