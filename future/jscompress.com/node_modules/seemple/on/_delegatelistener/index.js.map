{"version":3,"sources":["../../../src/on/_delegatelistener/index.js"],"names":["delegateListener","object","givenPath","name","callback","context","info","path","split","length","key","pathStr","slice","join","delegatedData","isSeempleArray","arrayAddHandler","skipChecks","arrayRemoveHandler","added","isSeempleObject","def","defs","get","objectSetHandler","objectRemoveHandler","keys","_","defKey","item","changeHandler","value"],"mappings":"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","sourcesContent":["import addListener from '../_addlistener';\nimport defs from '../../_core/defs';\nimport arrayAddHandler from './arrayaddhandler';\nimport objectSetHandler from './objectsethandler';\nimport arrayRemoveHandler from './arrayremovehandler';\nimport objectRemoveHandler from './objectremovehandler';\nimport changeHandler from './changehandler';\nimport forOwn from '../../_helpers/forown';\n\n// adds delegated event listener to an object by given path\nexport default function delegateListener(object, givenPath, name, callback, context, info = {}) {\n  // if typeof path is string and path is not empty string then split it\n  let path = typeof givenPath === 'string' && givenPath !== '' ? givenPath.split('.') : givenPath;\n\n  if (!path || !path.length) {\n    // if no path then add simple listener\n    addListener(object, name, callback, context, info);\n  } else {\n    // else do all magic\n    const key = path[0];\n    let pathStr; // needed for undelegation\n\n    if (path.length > 1) {\n      path = path.slice(1);\n      pathStr = path.join('.');\n    } else {\n      path = [];\n      pathStr = path[0] || '';\n    }\n\n    const delegatedData = {\n      path,\n      name,\n      callback,\n      context,\n      info,\n      object\n    };\n\n    if (key === '*') {\n      // handling asterisk events\n      // { skipChecks: true } allows to use same event name and event handler few times\n      if (object.isSeempleArray) {\n        // the event is triggered when something is added to an array\n        addListener(object, '_asterisk:add', arrayAddHandler, null, {\n          delegatedData,\n          pathStr,\n          skipChecks: true\n        });\n\n        // the event is triggered when something is removed from an array\n        addListener(object, '_asterisk:remove', arrayRemoveHandler, null, {\n          delegatedData,\n          pathStr,\n          skipChecks: true\n        });\n\n        // call handler manually to delegate listener for currently existing data props\n        arrayAddHandler({\n          added: object\n        }, delegatedData);\n      } else if (object.isSeempleObject) {\n        const def = defs.get(object);\n\n        // the event is triggered when data prop is changed\n        addListener(object, '_asterisk:set', objectSetHandler, null, {\n          delegatedData,\n          pathStr,\n          skipChecks: true\n        });\n\n        // the event is triggered when data prop is removed\n        addListener(object, '_asterisk:remove', objectRemoveHandler, null, {\n          delegatedData,\n          pathStr,\n          skipChecks: true\n        });\n\n        // delegate listener for currently existing data props\n        forOwn(def.keys, (_, defKey) => {\n          const item = object[defKey];\n          if (item && typeof item === 'object') {\n            delegateListener(item, path, name, callback, context, info);\n          }\n        });\n      }\n    } else {\n      // handling non-asterisk delegated event\n\n      // the event is triggered by \"set\"\n      addListener(object, `_change:delegated:${key}`, changeHandler, null, {\n        delegatedData,\n        pathStr\n      });\n\n      // call handler manually\n      changeHandler({\n        value: object[key]\n      }, delegatedData);\n    }\n  }\n}\n"],"file":"index.js"}