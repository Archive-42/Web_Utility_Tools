"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _calc = _interopRequireDefault(require("../calc"));

var _parserbrackets = _interopRequireDefault(require("../parserbrackets"));

var parserData = {}; // since Seemple allows to change parser brackets via parserBrackets objects
// the parser needs to generate required regular expressions and escaped brackets every time
// when parseBindings is called
// to optimize this behavior parserData object is created
// it calculates needed data every time when parserBrackets are changed
// and when parseBindings function is called it uses previously generated regeps
// from parserData object

(0, _calc["default"])(parserData, {
  leftBracket: {
    source: {
      object: _parserbrackets["default"],
      key: 'left'
    }
  },
  rightBracket: {
    source: {
      object: _parserbrackets["default"],
      key: 'right'
    }
  },
  escLeftBracket: {
    source: 'leftBracket',
    handler: function handler(left) {
      return left.replace(/(\[|\(|\?)/g, '\\$1');
    }
  },
  escRightBracket: {
    source: 'rightBracket',
    handler: function handler(right) {
      return right.replace(/(]|\)|\?)/g, '\\$1');
    }
  },
  bindingReg: {
    source: ['escLeftBracket', 'escRightBracket'],
    handler: function handler(left, right) {
      return new RegExp("".concat(left, "\\s*(.+?)\\s*").concat(right), 'g');
    }
  },
  strictBindingReg: {
    source: ['escLeftBracket', 'escRightBracket'],
    handler: function handler(left, right) {
      return new RegExp("^".concat(left, "\\s*(.+?)\\s*").concat(right, "$"), 'g');
    }
  }
}, {
  debounceCalc: false // we need to get new regexps immediately when brackets are changed

});
var _default = parserData;
exports["default"] = _default;
//# sourceMappingURL=_parserdata.js.map