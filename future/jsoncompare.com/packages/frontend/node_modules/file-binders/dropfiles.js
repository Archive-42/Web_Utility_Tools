"use strict";

var getFileReaderMethodName = require('./_get-filereader-method-name');

var readFiles = require('./_read-files');

function createDropHandler(_ref) {
  var callback = _ref.callback,
      methodName = _ref.methodName;
  return function dropHandler(event) {
    event.preventDefault();
    var files = event.dataTransfer.files;
    readFiles(files, methodName, callback);
  };
}

function createDragoverHandler() {
  return function dragoverHandler(event) {
    event.preventDefault();

    if (event.dataTransfer) {
      event.dataTransfer.dropEffect = 'copy'; // eslint-disable-line no-param-reassign
    }
  };
}

module.exports = function dropFilesBinder(readAs) {
  var methodName = readAs ? getFileReaderMethodName(readAs) : null;
  var dropHandler;
  var dragoverHandler;
  return {
    on: function on(callback) {
      dropHandler = createDropHandler({
        callback: callback,
        methodName: methodName
      });
      dragoverHandler = createDragoverHandler();
      this.addEventListener('drop', dropHandler);
      this.addEventListener('dragover', dragoverHandler);
    },
    destroy: function destroy() {
      this.removeEventListener('drop', dropHandler);
      this.removeEventListener('dragover', dragoverHandler);
    },
    getValue: function getValue(_ref2) {
      var domEvent = _ref2.domEvent;
      return domEvent || [];
    },
    setValue: null
  };
};