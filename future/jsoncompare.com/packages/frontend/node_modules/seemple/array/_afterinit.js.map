{"version":3,"sources":["../../src/array/_afterinit.js"],"names":["modelItemMediator","item","index","Model","itemData","toJSON","changeModel","mediateItem","changeItemRendererHandler","eventOptions","forceRerender","rerender","afterSeempleArrayInit","hasModel","afterSeempleInit","call","skipChecks"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AAAA,MAC9BC,KAD8B,GACpB,IADoB,CAC9BA,KAD8B,EAGtC;;AACA,MAAIF,IAAI,YAAYE,KAApB,EAA2B;AACzB,WAAOF,IAAP;AACD;;AAED,MAAIG,QAAJ;;AAEA,MAAIH,IAAI,IAAI,OAAOA,IAAI,CAACI,MAAZ,KAAuB,UAAnC,EAA+C;AAC7C;AACA;AACAD,IAAAA,QAAQ,GAAGH,IAAI,CAACI,MAAL,CAAY,KAAZ,CAAX;AACD,GAJD,MAIO;AACL;AACAD,IAAAA,QAAQ,GAAGH,IAAX;AACD;;AAED,SAAO,IAAIE,KAAJ,CAAUC,QAAV,EAAoB,IAApB,EAA0BF,KAA1B,CAAP;AACD,C,CAED;;;AACA,SAASI,WAAT,GAAuB;AAAA,MACbH,KADa,GACH,IADG,CACbA,KADa,EAGrB;;AACA,MAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/B,UAAM,8BAAa,kBAAb,EAAiC;AAAEA,MAAAA,KAAK,EAALA;AAAF,KAAjC,CAAN;AACD,GANoB,CAQrB;;;AACA,OAAKI,WAAL,CAAiBP,iBAAjB;AACD,C,CAED;;;AACA,SAASQ,yBAAT,GAAsD;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAAA,8BACnBA,YADmB,CAC5CC,aAD4C;AAAA,MAC5CA,aAD4C,sCAC5B,IAD4B;AAEpD,OAAKC,QAAL,CAAc;AAAED,IAAAA,aAAa,EAAbA;AAAF,GAAd;AACD,C,CAED;;;AACe,SAASE,qBAAT,GAAiC;AAC9C;AACA,MAAMC,QAAQ,GAAG,WAAW,IAA5B,CAF8C,CAI9C;;AACAC,wBAAiBC,IAAjB,CAAsB,IAAtB;;AAEA,+BAAY,IAAZ,EAAkB,sBAAlB,EAA0CT,WAA1C,EAAuD,IAAvD,EAA6D;AAC3DU,IAAAA,UAAU,EAAE;AAD+C,GAA7D;AAIA,+BAAY,IAAZ,EAAkB,6BAAlB,EAAiDR,yBAAjD,EAA4E,IAA5E,EAAkF;AAChFQ,IAAAA,UAAU,EAAE;AADoE,GAAlF,EAX8C,CAe9C;AACA;;AACA,MAAIH,QAAJ,EAAc;AACZP,IAAAA,WAAW,CAACS,IAAZ,CAAiB,IAAjB;AACD;AACF","sourcesContent":["import afterSeempleInit from '../seemple/_afterinit';\nimport addListener from '../on/_addlistener';\nimport seempleError from '../_helpers/seempleerror';\n\n// the function returns array item converted to Model instance\nfunction modelItemMediator(item, index) {\n  const { Model } = this;\n\n  // if an item is already instance of Model\n  if (item instanceof Model) {\n    return item;\n  }\n\n  let itemData;\n\n  if (item && typeof item.toJSON === 'function') {\n    // if item is not falsy and if it has toJSON method\n    // then retrieve instance data by this method\n    itemData = item.toJSON(false);\n  } else {\n    // if not then use an item as its data\n    itemData = item;\n  }\n\n  return new Model(itemData, this, index);\n}\n\n// event handler to listen changes of Model property\nfunction changeModel() {\n  const { Model } = this;\n\n  // if model has wrong type then throw an error\n  if (typeof Model !== 'function') {\n    throw seempleError('array:model_type', { Model });\n  }\n\n  // attatch item mediator\n  this.mediateItem(modelItemMediator);\n}\n\n// event handler to listen changes of itemRenderer property\nfunction changeItemRendererHandler(eventOptions = {}) {\n  const { forceRerender = true } = eventOptions;\n  this.rerender({ forceRerender });\n}\n\n// Seemple.Array initializer\nexport default function afterSeempleArrayInit() {\n  // we need to calculate hasModel before change:Model is added\n  const hasModel = 'Model' in this;\n\n  // call Seemple initializer\n  afterSeempleInit.call(this);\n\n  addListener(this, '_change:common:Model', changeModel, this, {\n    skipChecks: true\n  });\n\n  addListener(this, '_change:common:itemRenderer', changeItemRendererHandler, this, {\n    skipChecks: true\n  });\n\n  // call changeModel handler immediately if model is present\n  // it will throw an error if Model is not a function\n  if (hasModel) {\n    changeModel.call(this);\n  }\n}\n"],"file":"_afterinit.js"}