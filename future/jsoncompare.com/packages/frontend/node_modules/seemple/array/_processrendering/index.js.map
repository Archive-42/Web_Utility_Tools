{"version":3,"sources":["../../../src/array/_processrendering/index.js"],"names":["processRendering","self","eventOptions","method","added","removed","container","nodes","sandbox","selfDef","defs","get","length"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACe,SAASA,gBAAT,OAGZ;AAAA,MAFDC,IAEC,QAFDA,IAEC;AAAA,MADDC,YACC,QADDA,YACC;AAAA,MACOC,MADP,GACkCD,YADlC,CACOC,MADP;AAAA,MACeC,KADf,GACkCF,YADlC,CACeE,KADf;AAAA,MACsBC,OADtB,GACkCH,YADlC,CACsBG,OADtB,EAED;;AACA,MAAMC,SAAS,GAAGL,IAAI,CAACM,KAAL,CAAWD,SAAX,IAAwBL,IAAI,CAACM,KAAL,CAAWC,OAArD;;AACA,MAAMC,OAAO,GAAGC,iBAAKC,GAAL,CAASV,IAAT,CAAhB;;AAEA,MAAI,CAACK,SAAL,EAAgB;AACd;AACD;;AAED,UAAQH,MAAR;AACE,SAAK,MAAL;AACA,SAAK,YAAL;AACE,YAAM,8BAAa,8BAAb,EAA6C;AAAEA,QAAAA,MAAM,EAANA;AAAF,OAA7C,CAAN;;AACF,SAAK,MAAL;AACE,mCAAY;AACVF,QAAAA,IAAI,EAAJA,IADU;AAEVQ,QAAAA,OAAO,EAAPA,OAFU;AAGVP,QAAAA,YAAY,EAAZA,YAHU;AAIVI,QAAAA,SAAS,EAATA;AAJU,OAAZ;AAMA;;AACF,SAAK,SAAL;AACE,sCAAe;AACbL,QAAAA,IAAI,EAAJA,IADa;AAEbQ,QAAAA,OAAO,EAAPA,OAFa;AAGbP,QAAAA,YAAY,EAAZA,YAHa;AAIbI,QAAAA,SAAS,EAATA;AAJa,OAAf;AAMA;;AACF,SAAK,MAAL;AACA,SAAK,KAAL;AACA,SAAK,OAAL;AACE,qCAAc;AACZL,QAAAA,IAAI,EAAJA,IADY;AAEZQ,QAAAA,OAAO,EAAPA,OAFY;AAGZP,QAAAA,YAAY,EAAZA,YAHY;AAIZI,QAAAA,SAAS,EAATA;AAJY,OAAd;AAMA;;AACF,SAAK,MAAL;AACA,SAAK,SAAL;AACE,mCAAY;AACVL,QAAAA,IAAI,EAAJA,IADU;AAEVQ,QAAAA,OAAO,EAAPA,OAFU;AAGVP,QAAAA,YAAY,EAAZA,YAHU;AAIVI,QAAAA,SAAS,EAATA;AAJU,OAAZ;AAMA;;AACF,SAAK,UAAL;AACE,uCAAgB;AACdL,QAAAA,IAAI,EAAJA,IADc;AAEdQ,QAAAA,OAAO,EAAPA,OAFc;AAGdP,QAAAA,YAAY,EAAZA,YAHc;AAIdI,QAAAA,SAAS,EAATA;AAJc,OAAhB;AAMA;;AACF,SAAK,UAAL;AACE,uCAAgB;AACdL,QAAAA,IAAI,EAAJA,IADc;AAEdQ,QAAAA,OAAO,EAAPA,OAFc;AAGdP,QAAAA,YAAY,EAAZA,YAHc;AAIdI,QAAAA,SAAS,EAATA;AAJc,OAAhB;AAMA;;AACF,SAAK,QAAL;AACE,UAAIF,KAAK,CAACQ,MAAV,EAAkB;AAChB,0CAAiB;AACfX,UAAAA,IAAI,EAAJA,IADe;AAEfQ,UAAAA,OAAO,EAAPA,OAFe;AAGfP,UAAAA,YAAY,EAAZA,YAHe;AAIfI,UAAAA,SAAS,EAATA;AAJe,SAAjB;AAMD;;AAED,UAAID,OAAO,CAACO,MAAZ,EAAoB;AAClB,uCAAc;AACZX,UAAAA,IAAI,EAAJA,IADY;AAEZQ,UAAAA,OAAO,EAAPA,OAFY;AAGZP,UAAAA,YAAY,EAAZA,YAHY;AAIZI,UAAAA,SAAS,EAATA;AAJY,SAAd;AAMD;;AAED;;AACF;AA3EF;AA6ED","sourcesContent":["import defs from '../../_core/defs';\nimport seempleError from '../../_helpers/seempleerror';\nimport processPush from './processpush';\nimport processUnshift from './processunshift';\nimport processRecreate from './processrecreate';\nimport processSort from './processsort';\nimport processRemove from './processremove';\nimport processRerender from './processrerender';\nimport processSpliceAdd from './processspliceadd';\n\n// makes possible to render array items based on a name of called method\nexport default function processRendering({\n  self,\n  eventOptions\n}) {\n  const { method, added, removed } = eventOptions;\n  // nodes object always exist at Seemple instances\n  const container = self.nodes.container || self.nodes.sandbox;\n  const selfDef = defs.get(self);\n\n  if (!container) {\n    return;\n  }\n\n  switch (method) {\n    case 'fill':\n    case 'copyWithin':\n      throw seempleError('array:method_compat_renderer', { method });\n    case 'push':\n      processPush({\n        self,\n        selfDef,\n        eventOptions,\n        container\n      });\n      break;\n    case 'unshift':\n      processUnshift({\n        self,\n        selfDef,\n        eventOptions,\n        container\n      });\n      break;\n    case 'pull':\n    case 'pop':\n    case 'shift':\n      processRemove({\n        self,\n        selfDef,\n        eventOptions,\n        container\n      });\n      break;\n    case 'sort':\n    case 'reverse':\n      processSort({\n        self,\n        selfDef,\n        eventOptions,\n        container\n      });\n      break;\n    case 'rerender':\n      processRerender({\n        self,\n        selfDef,\n        eventOptions,\n        container\n      });\n      break;\n    case 'recreate':\n      processRecreate({\n        self,\n        selfDef,\n        eventOptions,\n        container\n      });\n      break;\n    case 'splice':\n      if (added.length) {\n        processSpliceAdd({\n          self,\n          selfDef,\n          eventOptions,\n          container\n        });\n      }\n\n      if (removed.length) {\n        processRemove({\n          self,\n          selfDef,\n          eventOptions,\n          container\n        });\n      }\n\n      break;\n    default:\n  }\n}\n"],"file":"index.js"}