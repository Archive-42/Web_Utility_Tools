{"version":3,"sources":["../../../src/array/_pseudonativemethods/concat.js"],"names":["concat","SeempleArray","require","args","Array","arguments","length","arg","index","isSeempleArray","toJSON","nativeCallResult","prototype","result","item"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAGA;AACA;AACA;AACe,SAASA,MAAT,GAAkB;AAC/B;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,KAAD,CAAP,WAArB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,MAAX,CAAlB,CAJ+B,CAM/B;;AACA,2BAAQD,SAAR,EAAmB,UAACE,GAAD,EAAMC,KAAN,EAAgB;AACjC,QAAID,GAAG,IAAI,yBAAOA,GAAP,MAAe,QAAtB,IAAkCA,GAAG,CAACE,cAA1C,EAA0D;AACxDN,MAAAA,IAAI,CAACK,KAAD,CAAJ,GAAcD,GAAG,CAACG,MAAJ,CAAW,KAAX,CAAd;AACD,KAFD,MAEO;AACLP,MAAAA,IAAI,CAACK,KAAD,CAAJ,GAAcD,GAAd;AACD;AACF,GAND,EAP+B,CAe/B;;AACA,MAAMI,gBAAgB,GAAG,uBAAMP,KAAK,CAACQ,SAAN,CAAgBZ,MAAtB,EAA8B,KAAKU,MAAL,CAAY,KAAZ,CAA9B,EAAkDP,IAAlD,CAAzB,CAhB+B,CAkB/B;;AACA,MAAMU,MAAM,GAAG,IAAIZ,YAAJ,EAAf;AACA,2BAAQU,gBAAR,EAA0B,UAACG,IAAD,EAAON,KAAP,EAAiB;AACzCK,IAAAA,MAAM,CAACL,KAAD,CAAN,GAAgBM,IAAhB;AACD,GAFD;AAIAD,EAAAA,MAAM,CAACP,MAAP,GAAgBK,gBAAgB,CAACL,MAAjC;AAEA,SAAOO,MAAP;AACD","sourcesContent":["import apply from '../../_helpers/apply';\nimport forEach from '../../_helpers/foreach';\n\n\n// the method works just like Array.prototype.concat but\n// - flattens both Array and Seemple.Array\n// - returns Seemple.Array\nexport default function concat() {\n  // fix circular dependency issue\n  const SeempleArray = require('../').default;\n\n  const args = Array(arguments.length);\n\n  // convert all instances of Seemple.Array to Array\n  forEach(arguments, (arg, index) => {\n    if (arg && typeof arg === 'object' && arg.isSeempleArray) {\n      args[index] = arg.toJSON(false);\n    } else {\n      args[index] = arg;\n    }\n  });\n\n  // call original concat method\n  const nativeCallResult = apply(Array.prototype.concat, this.toJSON(false), args);\n\n  // convert returned value to Seemple.Array\n  const result = new SeempleArray();\n  forEach(nativeCallResult, (item, index) => {\n    result[index] = item;\n  });\n\n  result.length = nativeCallResult.length;\n\n  return result;\n}\n"],"file":"concat.js"}