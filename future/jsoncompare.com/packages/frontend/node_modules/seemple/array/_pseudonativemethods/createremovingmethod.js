"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createRemovingMethod;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _init = _interopRequireDefault(require("../../_core/init"));

var _reportmodified = _interopRequireDefault(require("../_reportmodified"));

var _assign = _interopRequireDefault(require("../../_helpers/assign"));

// creates removing method and returns it (pop, shift, pop_, shift_)
function createRemovingMethod(name, hasOptions) {
  return function pseudoNativeMethod(givenEventOptions) {
    if (!this.length) {
      return undefined;
    }

    (0, _init["default"])(this); // call original method

    var returns = Array.prototype[name].call(this);
    var eventOptions = {
      method: name,
      self: this,
      added: [],
      removed: [returns]
    }; // extend event options by custom event options if they are given

    if (hasOptions) {
      if (givenEventOptions && (0, _typeof2["default"])(givenEventOptions) === 'object') {
        (0, _assign["default"])(eventOptions, givenEventOptions);
      }
    }

    (0, _reportmodified["default"])(this, eventOptions);
    return returns;
  };
}
//# sourceMappingURL=createremovingmethod.js.map