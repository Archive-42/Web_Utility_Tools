{"version":3,"sources":["../../../src/array/_pseudonativemethods/index.js"],"names":["splitBySpaceReg","methods","concat","keys","values","entries","split","forEach","name"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,eAAe,GAAG,KAAxB;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAANA,kBADc;AACNC,EAAAA,IAAI,EAAJA,gBADM;AACAC,EAAAA,MAAM,EAANA,kBADA;AACQC,EAAAA,OAAO,EAAPA;AADR,CAAhB;AAIA,sKAEGC,KAFH,CAESN,eAFT,EAE0BO,OAF1B,CAEkC,UAACC,IAAD,EAAU;AACxCP,EAAAA,OAAO,CAACO,IAAD,CAAP,GAAgB,0CAAyBA,IAAzB,CAAhB;AACD,CAJH;AAMA,6DACGF,KADH,CACSN,eADT,EAC0BO,OAD1B,CACkC,UAACC,IAAD,EAAU;AACxCP,EAAAA,OAAO,WAAIO,IAAJ,OAAP,GAAsB,0CAAyBA,IAAzB,EAA+B,IAA/B,CAAtB;AACD,CAHH;eAKeP,O","sourcesContent":["import createPseudoNativeMethod from './createpseudonativemethod';\nimport concat from './concat';\nimport keys from './keys';\nimport values from './values';\nimport entries from './entries';\n\nconst splitBySpaceReg = /\\s+/;\nconst methods = {\n  concat, keys, values, entries\n};\n\n`push pop unshift shift sort reverse splice map filter slice every some reduce reduceRight\nforEach join indexOf lastIndexOf copyWithin fill includes find findIndex`\n  .split(splitBySpaceReg).forEach((name) => {\n    methods[name] = createPseudoNativeMethod(name);\n  });\n\n'push pop unshift shift sort reverse splice copyWithin fill'\n  .split(splitBySpaceReg).forEach((name) => {\n    methods[`${name}_`] = createPseudoNativeMethod(name, true);\n  });\n\nexport default methods;\n"],"file":"index.js"}