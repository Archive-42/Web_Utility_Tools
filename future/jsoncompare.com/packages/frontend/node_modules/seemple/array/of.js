"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = of;

var _cheaprecreate = _interopRequireDefault(require("./_cheaprecreate"));

var _foreach = _interopRequireDefault(require("../_helpers/foreach"));

// creates a new Seemple.Array instance with a variable number of arguments,
// regardless of number or type of the arguments
function of() {
  var _arguments = arguments;
  // allow to inherit this method by child classes
  // require('./') fixes circular ref issue
  var ParentClass = typeof this === 'function' ? this : require('./')["default"];
  var result = new ParentClass();
  var newItems = Array(arguments.length);
  (0, _foreach["default"])(arguments, function (item, index) {
    newItems[index] = _arguments[index];
  });
  return (0, _cheaprecreate["default"])(result, newItems);
}
//# sourceMappingURL=of.js.map