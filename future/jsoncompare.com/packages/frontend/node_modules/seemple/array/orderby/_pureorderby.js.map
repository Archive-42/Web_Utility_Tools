{"version":3,"sources":["../../../src/array/orderby/_pureorderby.js"],"names":["pureOrderBy","arr","givenKeys","orders","defaultOrder","commonOrder","Array","length","result","i","keys","sort","a","b","key","order"],"mappings":";;;;;;;;;;;AAAA;AACe,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6C;AAC1D,MAAI,YAAYF,GAAZ,IAAmB,yBAAOA,GAAP,MAAe,QAAtC,EAAgD;AAC9C,QAAMG,YAAY,GAAG,KAArB;AACA,QAAIC,WAAJ;;AAEA,QAAI,EAAEF,MAAM,YAAYG,KAApB,CAAJ,EAAgC;AAC9BD,MAAAA,WAAW,GAAGF,MAAM,IAAIC,YAAxB;AACD;;AAN6C,QAQtCG,MARsC,GAQ3BN,GAR2B,CAQtCM,MARsC;AAS9C,QAAMC,MAAM,GAAGF,KAAK,CAACC,MAAD,CAApB;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC/BD,MAAAA,MAAM,CAACC,CAAD,CAAN,GAAYR,GAAG,CAACQ,CAAD,CAAf;AACD;;AAED,QAAI,CAACP,SAAL,EAAgB;AACd,aAAOM,MAAP;AACD;;AAED,QAAME,IAAI,GAAGR,SAAS,YAAYI,KAArB,GAA6BJ,SAA7B,GAAyC,CAACA,SAAD,CAAtD;AAEA,WAAOM,MAAM,CAACG,IAAP,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3B,UAAID,CAAC,IAAIC,CAAT,EAAY;AACV,aAAK,IAAIJ,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGC,IAAI,CAACH,MAAzB,EAAiCE,EAAC,EAAlC,EAAsC;AACpC,cAAMK,GAAG,GAAGJ,IAAI,CAACD,EAAD,CAAhB;AACA,cAAMM,KAAK,GAAG,CAACV,WAAW,IAAIF,MAAM,CAACM,EAAD,CAAtB,MAA+B,MAA/B,GAAwC,CAAC,CAAzC,GAA6C,CAA3D;;AAEA,cAAIG,CAAC,CAACE,GAAD,CAAD,GAASD,CAAC,CAACC,GAAD,CAAd,EAAqB;AACnB,mBAAO,CAACC,KAAR;AACD;;AAAC,cAAIH,CAAC,CAACE,GAAD,CAAD,GAASD,CAAC,CAACC,GAAD,CAAd,EAAqB;AACrB,mBAAOC,KAAP;AACD;AACF;AACF;;AAED,aAAO,CAAP;AACD,KAfM,CAAP;AAgBD;;AAED,SAAO,EAAP;AACD","sourcesContent":["// the function orders by given order data any array-like object\nexport default function pureOrderBy(arr, givenKeys, orders) {\n  if ('length' in arr && typeof arr === 'object') {\n    const defaultOrder = 'asc';\n    let commonOrder;\n\n    if (!(orders instanceof Array)) {\n      commonOrder = orders || defaultOrder;\n    }\n\n    const { length } = arr;\n    const result = Array(length);\n\n    for (let i = 0; i < length; i++) {\n      result[i] = arr[i];\n    }\n\n    if (!givenKeys) {\n      return result;\n    }\n\n    const keys = givenKeys instanceof Array ? givenKeys : [givenKeys];\n\n    return result.sort((a, b) => {\n      if (a && b) {\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const order = (commonOrder || orders[i]) !== 'desc' ? -1 : 1;\n\n          if (a[key] > b[key]) {\n            return -order;\n          } if (a[key] < b[key]) {\n            return order;\n          }\n        }\n      }\n\n      return 0;\n    });\n  }\n\n  return [];\n}\n"],"file":"_pureorderby.js"}