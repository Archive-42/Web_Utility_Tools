{"version":3,"sources":["../../src/array/restore.js"],"names":["restore","selector","eventOptions","selfDef","Model","silent","newItems","nodes","container","sandbox","children","node","index","item","bindRenderedAsSandbox","itemDef","renderedInArrays","id","itemEventOptions","self","parentArray","onRender","onItemRender","call","push","recreate","dontRender"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA;AACe,SAASA,OAAT,CAAiBC,QAAjB,EAA8C;AAAA;;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAC3D,MAAMC,OAAO,GAAG,sBAAY,IAAZ,CAAhB;AAD2D,MAEnDC,KAFmD,GAEzC,IAFyC,CAEnDA,KAFmD;AAAA,MAGnDC,MAHmD,GAGxCH,YAHwC,CAGnDG,MAHmD;AAI3D,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,KAAJ;;AAEA,MAAI,OAAON,QAAP,KAAoB,QAAxB,EAAkC;AAChC;AACAM,IAAAA,KAAK,GAAG,0BAAS,IAAT,EAAeN,QAAf,CAAR;AACD,GAHD,MAGO;AACL;AACA,QAAMO,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAAX,IAAwB,KAAKD,KAAL,CAAWE,OAArD;;AAEA,QAAID,SAAJ,EAAe;AACbD,MAAAA,KAAK,GAAGC,SAAS,CAACE,QAAlB;AACD,KAFD,MAEO;AACL;AACA,YAAM,8BAAa,kBAAb,CAAN;AACD;AACF;;AAED,2BAAQH,KAAR,EAAe,UAACI,IAAD,EAAOC,KAAP,EAAiB;AAC9B,QAAMC,IAAI,GAAGT,KAAK,GAAG,IAAIA,KAAJ,CAAU,EAAV,EAAc,KAAd,EAAoBQ,KAApB,CAAH,GAAgC,EAAlD,CAD8B,CACwB;;AADxB,QAEtBE,qBAFsB,GAEID,IAFJ,CAEtBC,qBAFsB;AAG9B,QAAMC,OAAO,GAAG,sBAAYF,IAAZ,CAAhB;AAEAE,IAAAA,OAAO,CAACC,gBAAR,wCACGb,OAAO,CAACc,EADX,EACgBN,IADhB;;AAIA,QAAIG,qBAAqB,KAAK,KAA9B,EAAqC;AACnC,gCAASD,IAAT,EAAe,SAAf,EAA0BF,IAA1B,EAAgC,IAAhC,EAAsCT,YAAtC;AACD;;AAED,QAAI,CAACG,MAAL,EAAa;AACX;AACA,UAAMa,gBAAgB,GAAG;AACvBP,QAAAA,IAAI,EAAJA,IADuB;AAEvBQ,QAAAA,IAAI,EAAEN,IAFiB;AAGvBO,QAAAA,WAAW,EAAE;AAHU,OAAzB;AAFW,UAQHC,QARG,GAQUR,IARV,CAQHQ,QARG;AAAA,UASHC,YATG,GASc,KATd,CASHA,YATG;;AAWX,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACE,IAAT,CAAcV,IAAd,EAAoBK,gBAApB;AACD;;AAED,UAAII,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACC,IAAb,CAAkB,KAAlB,EAAwBV,IAAxB,EAA8BK,gBAA9B;AACD;;AAED,kCAAWL,IAAX,EAAiB,QAAjB,EAA2BK,gBAA3B,EAnBW,CAqBX;;AACA,kCAAWL,IAAX,EAAiB,aAAjB,EAAgCK,gBAAhC;AACD;;AAEDZ,IAAAA,QAAQ,CAACkB,IAAT,CAAcX,IAAd;AACD,GAvCD,EAtB2D,CA+D3D;;AACA,SAAO,KAAKY,QAAL,CAAcnB,QAAd;AACLoB,IAAAA,UAAU,EAAE;AADP,KAEFxB,YAFE,EAAP;AAID","sourcesContent":["import initSeemple from '../_core/init';\nimport seempleError from '../_helpers/seempleerror';\nimport forEach from '../_helpers/foreach';\nimport bindNode from '../bindnode';\nimport triggerOne from '../trigger/_triggerone';\nimport getNodes from '../bindnode/_getnodes';\n\n// restores Seemple.Array from external nodes\nexport default function restore(selector, eventOptions = {}) {\n  const selfDef = initSeemple(this);\n  const { Model } = this;\n  const { silent } = eventOptions;\n  const newItems = [];\n  let nodes;\n\n  if (typeof selector === 'string') {\n    // get nodes by selector\n    nodes = getNodes(this, selector);\n  } else {\n    // get nodes from rendering container\n    const container = this.nodes.container || this.nodes.sandbox;\n\n    if (container) {\n      nodes = container.children;\n    } else {\n      // no container is bound, throw an error\n      throw seempleError('restore:no_nodes');\n    }\n  }\n\n  forEach(nodes, (node, index) => {\n    const item = Model ? new Model({}, this, index) : {}; // create new item\n    const { bindRenderedAsSandbox } = item;\n    const itemDef = initSeemple(item);\n\n    itemDef.renderedInArrays = {\n      [selfDef.id]: node\n    };\n\n    if (bindRenderedAsSandbox !== false) {\n      bindNode(item, 'sandbox', node, null, eventOptions);\n    }\n\n    if (!silent) {\n      // trigger needed events\n      const itemEventOptions = {\n        node,\n        self: item,\n        parentArray: this\n      };\n\n      const { onRender } = item;\n      const { onItemRender } = this;\n\n      if (onRender) {\n        onRender.call(item, itemEventOptions);\n      }\n\n      if (onItemRender) {\n        onItemRender.call(this, item, itemEventOptions);\n      }\n\n      triggerOne(item, 'render', itemEventOptions);\n\n      // call afterrender immediately because a node already exists in DOM tree\n      triggerOne(item, 'afterrender', itemEventOptions);\n    }\n\n    newItems.push(item);\n  });\n\n  // recreate an array but don't render newly added items\n  return this.recreate(newItems, {\n    dontRender: true,\n    ...eventOptions\n  });\n}\n"],"file":"restore.js"}