{"version":3,"sources":["../../src/bindnode/_bindsinglenode.js"],"names":["spaceReg","bindSingleNode","object","givenBinder","binder","key","$nodes","node","eventOptions","propDef","silent","getValueOnBind","setValueOnBind","debounceSetValue","debounceGetValue","debounceSetValueOnBind","debounceGetValueOnBind","debounceSetValueDelay","debounceGetValueDelay","useExactBinder","bindings","value","bindingOptions","self","isUndefined","objectHandler","nodeHandler","length","isSeempleArray","foundBinder","getValue","setValue","on","initialize","call","syncNodeHandler","debouncedNodeHandler","split","evtName","addEventListener","syncObjectHandler","debouncedObjectHandler","skipChecks","push","extendedEventOptions"],"mappings":"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","sourcesContent":["import lookForBinder from '../lookforbinder';\nimport createNodeHandler from './_createnodehandler';\nimport createObjectHandler from './_createobjecthandler';\nimport triggerOne from '../trigger/_triggerone';\nimport addListener from '../on/_addlistener';\nimport debounce from '../_helpers/debounce';\nimport seempleError from '../_helpers/seempleerror';\nimport forEach from '../_helpers/foreach';\nimport assign from '../_helpers/assign';\n\nconst spaceReg = /\\s+/;\n\n// handles binding for single property & node\n// the function is used at bindNode\nexport default function bindSingleNode(object, {\n  binder: givenBinder,\n  key,\n  $nodes,\n  node,\n  eventOptions,\n  propDef\n}) {\n  const {\n    silent,\n    getValueOnBind,\n    setValueOnBind,\n    // TODO: We probably need some general flag to cancel or force debouncing\n    // ... which overrides the following flags (something like debounceBinding)\n    debounceSetValue = true,\n    debounceGetValue = true,\n    debounceSetValueOnBind = false,\n    debounceGetValueOnBind = false,\n    debounceSetValueDelay = 0,\n    debounceGetValueDelay = 0,\n    useExactBinder = false\n  } = eventOptions;\n    // create bindings array in property definition object\n  const bindings = propDef.bindings = propDef.bindings || [];\n  const { value } = propDef;\n  const bindingOptions = {\n    self: object,\n    key,\n    value,\n    $nodes,\n    node\n  };\n  let isUndefined = typeof value === 'undefined';\n  let binder;\n  let objectHandler;\n  let nodeHandler;\n\n  // do not allow to bind more than 2 nodes to \"sandbox\" (for all nodes)\n  // and \"container\" (for Seemple.Array)\n  if (\n    bindings.length\n        && (key === 'sandbox' || (object.isSeempleArray && key === 'container'))\n  ) {\n    throw seempleError('binding:magic_props_nodes_length');\n  }\n\n  // get actual binder\n  if (givenBinder !== null) {\n    // by default binder passed to bindNode is extended by default binder\n    // useExactBinder turns this behavior off\n    if (useExactBinder) {\n      binder = givenBinder;\n    } else {\n      // getting default binder\n      const foundBinder = lookForBinder(node);\n\n      // if default binder is found\n      if (foundBinder) {\n        // extend found binder by given binder\n        if (givenBinder) {\n          assign(foundBinder, givenBinder);\n        }\n\n        binder = foundBinder;\n      } else {\n        // default binder is not found\n        binder = givenBinder || {};\n      }\n    }\n  }\n\n  const {\n    getValue, setValue, on, initialize\n  } = binder;\n\n  // call binder.initialize\n  if (initialize) {\n    initialize.call(node, bindingOptions);\n  }\n\n  // add needed event handlers to given node when getValue is given\n  if (getValue) {\n    const syncNodeHandler = createNodeHandler({\n      object,\n      key,\n      node,\n      propDef,\n      binder,\n      bindingOptions\n    });\n\n    let debouncedNodeHandler;\n\n    if (debounceGetValue || debounceGetValueOnBind) {\n      debouncedNodeHandler = debounce(syncNodeHandler, debounceGetValueDelay);\n    }\n\n    if (debounceGetValue) {\n      nodeHandler = debouncedNodeHandler;\n    } else {\n      nodeHandler = syncNodeHandler;\n    }\n\n    // TODO: Throw error when \"on\" and maybe other binder properties has wrong type\n    if (typeof on === 'function') {\n      on.call(node, nodeHandler, bindingOptions);\n    } else if (typeof on === 'string') {\n      // addEventListener is faster than \"on\" method from any DOM library\n      forEach(\n        on.split(spaceReg),\n        (evtName) => node.addEventListener(evtName, nodeHandler)\n      );\n    }\n\n    if ((isUndefined && getValueOnBind !== false) || getValueOnBind === true) {\n      if (debounceGetValueOnBind) {\n        debouncedNodeHandler();\n      } else {\n        syncNodeHandler();\n      }\n    }\n\n    isUndefined = typeof propDef.value === 'undefined';\n  }\n\n  // add needed event handlers to the object when setValue is given\n  if (setValue) {\n    const syncObjectHandler = createObjectHandler({\n      node,\n      propDef,\n      binder,\n      bindingOptions,\n      eventOptions\n    });\n\n    let debouncedObjectHandler;\n\n    if (debounceSetValue || debounceSetValueOnBind) {\n      debouncedObjectHandler = debounce(syncObjectHandler, debounceSetValueDelay);\n    }\n\n    if (debounceSetValue) {\n      objectHandler = debouncedObjectHandler;\n    } else {\n      objectHandler = syncObjectHandler;\n    }\n\n    // TODO: Is it possible to get previous value of a property?\n    addListener(object, `_change:bindings:${key}`, objectHandler, null, { skipChecks: true });\n\n    if ((!isUndefined && setValueOnBind !== false) || setValueOnBind === true) {\n      if (debounceSetValueOnBind) {\n        debouncedObjectHandler();\n      } else {\n        syncObjectHandler();\n      }\n    }\n  }\n\n  // add binding data to bindings array\n  bindings.push({\n    on,\n    node,\n    binder,\n    objectHandler,\n    nodeHandler,\n    bindingOptions\n  });\n\n  // fire events\n  if (!silent) {\n    const extendedEventOptions = {\n      key,\n      node,\n      ...eventOptions\n    };\n\n    triggerOne(object, `bind:${key}`, extendedEventOptions);\n    triggerOne(object, 'bind', extendedEventOptions);\n  }\n}\n"],"file":"_bindsinglenode.js"}