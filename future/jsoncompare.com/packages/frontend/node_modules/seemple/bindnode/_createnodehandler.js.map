{"version":3,"sources":["../../src/bindnode/_createnodehandler.js"],"names":["createNodeHandler","object","key","node","propDef","binder","bindingOptions","nodeHandler","domEvent","disabled","previousValue","value","which","target","ctrlKey","altKey","getValue","call","originalEvent","preventDefault","stopPropagation","fromNode","changedNode","onChangeValue"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;AAEA;AACe,SAASA,iBAAT,OAOZ;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDC,GAKC,QALDA,GAKC;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,cACC,QADDA,cACC;AACD,SAAO,SAASC,WAAT,GAAoC;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AACzC;AACA;AACA;AACA,QAAID,WAAW,CAACE,QAAhB,EAA0B;AACxB;AACD;;AAED,QAAMC,aAAa,GAAGN,OAAO,CAACO,KAA9B;AARyC,QAUvCC,KAVuC,GAWrCJ,QAXqC,CAUvCI,KAVuC;AAAA,QAUhCC,MAVgC,GAWrCL,QAXqC,CAUhCK,MAVgC;AAAA,QAUxBC,OAVwB,GAWrCN,QAXqC,CAUxBM,OAVwB;AAAA,QAUfC,MAVe,GAWrCP,QAXqC,CAUfO,MAVe;AAAA,QAYjCC,QAZiC,GAYpBX,MAZoB,CAYjCW,QAZiC;AAazC,QAAML,KAAK,GAAGK,QAAQ,CAACC,IAAT,CAAcd,IAAd;AACZO,MAAAA,aAAa,EAAbA,aADY;AAEZF,MAAAA,QAAQ,EAARA,QAFY;AAGZU,MAAAA,aAAa,EAAEV,QAAQ,CAACU,aAAT,IAA0BV,QAH7B;AAGuC;AACnD;AACAW,MAAAA,cAAc,EAAE;AAAA,eAAMX,QAAQ,CAACW,cAAT,EAAN;AAAA,OALJ;AAMZ;AACAC,MAAAA,eAAe,EAAE;AAAA,eAAMZ,QAAQ,CAACY,eAAT,EAAN;AAAA,OAPL;AAQZR,MAAAA,KAAK,EAALA,KARY;AASZC,MAAAA,MAAM,EAANA,MATY;AAUZC,MAAAA,OAAO,EAAPA,OAVY;AAWZC,MAAAA,MAAM,EAANA;AAXY,OAYTT,cAZS,EAAd;;AAeA,QAAI,CAAC,oBAAGK,KAAH,EAAUD,aAAV,CAAL,EAA+B;AAC7B,2BAAIT,MAAJ,EAAYC,GAAZ,EAAiBS,KAAjB,EAAwB;AACtBU,QAAAA,QAAQ,EAAE,IADY;AAEtB;AACA;AACAC,QAAAA,WAAW,EAAEnB,IAJS;AAKtBoB,QAAAA,aAAa,EAAEZ,KALO;AAMtBN,QAAAA,MAAM,EAANA;AANsB,OAAxB;AAQD;AACF,GAtCD;AAuCD","sourcesContent":["import is from '../_helpers/is';\nimport set from '../set';\n\n// returns a function which called when bound node state is changed (eg DOM event is fired)\nexport default function createNodeHandler({\n  object,\n  key,\n  node,\n  propDef,\n  binder,\n  bindingOptions\n}) {\n  return function nodeHandler(domEvent = {}) {\n    // nodeHandler.disabled = true is set in unbindNode\n    // we cannot \"turn off\" binder.on when its value is a function\n    // developer needs to clean memory (\"turn off\" callback) manualy in binder.destroy\n    if (nodeHandler.disabled) {\n      return;\n    }\n\n    const previousValue = propDef.value;\n    const {\n      which, target, ctrlKey, altKey\n    } = domEvent;\n    const { getValue } = binder;\n    const value = getValue.call(node, {\n      previousValue,\n      domEvent,\n      originalEvent: domEvent.originalEvent || domEvent, // jQuery thing\n      // will throw \"preventDefault is not a function\" when domEvent is empty object\n      preventDefault: () => domEvent.preventDefault(),\n      // will throw \"stopPropagation is not a function\" when domEvent is empty object\n      stopPropagation: () => domEvent.stopPropagation(),\n      which,\n      target,\n      ctrlKey,\n      altKey,\n      ...bindingOptions\n    });\n\n    if (!is(value, previousValue)) {\n      set(object, key, value, {\n        fromNode: true,\n        // the following properties are needed to avoid circular changes\n        // they are used at objectHandler\n        changedNode: node,\n        onChangeValue: value,\n        binder\n      });\n    }\n  };\n}\n"],"file":"_createnodehandler.js"}