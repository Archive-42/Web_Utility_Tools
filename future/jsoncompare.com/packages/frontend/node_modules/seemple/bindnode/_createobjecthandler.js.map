{"version":3,"sources":["../../src/bindnode/_createobjecthandler.js"],"names":["createObjectHandler","node","propDef","binder","bindingOptions","objectHandler","eventOptions","value","onChangeValue","changedNode","evtBinder","setValue","dirtyHackValue","call"],"mappings":";;;;;;;;;;;;;;;AAAA;AACe,SAASA,mBAAT,OAKZ;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,cACC,QADDA,cACC;AACD,SAAO,SAASC,aAAT,GAA0C;AAAA,QAAnBC,YAAmB,uEAAJ,EAAI;AAAA,QACvCC,KADuC,GAC7BL,OAD6B,CACvCK,KADuC;AAAA,QAEvCC,aAFuC,GAEWF,YAFX,CAEvCE,aAFuC;AAAA,QAExBC,WAFwB,GAEWH,YAFX,CAExBG,WAFwB;AAAA,QAEHC,SAFG,GAEWJ,YAFX,CAEXH,MAFW;AAAA,QAGvCQ,QAHuC,GAG1BR,MAH0B,CAGvCQ,QAHuC,EAI/C;;AACA,QAAMC,cAAc,GAAGJ,aAAa,KAAK,QAAlB,IAA8B,OAAOD,KAAP,KAAiB,QAA/C,aAChBA,KADgB,IACNA,KADjB,CAL+C,CAQ/C;;AACA,QAAIE,WAAW,KAAKR,IAAhB,IAAwBO,aAAa,KAAKI,cAA1C,IAA4DF,SAAS,KAAKP,MAA9E,EAAsF;AACpF;AACD;;AAEDQ,IAAAA,QAAQ,CAACE,IAAT,CAAcZ,IAAd,EAAoBM,KAApB;AACEA,MAAAA,KAAK,EAALA;AADF,OAEKH,cAFL;AAID,GAjBD;AAkBD","sourcesContent":["// returns a function which is called when property value is changed\nexport default function createObjectHandler({\n  node,\n  propDef,\n  binder,\n  bindingOptions\n}) {\n  return function objectHandler(eventOptions = {}) {\n    const { value } = propDef;\n    const { onChangeValue, changedNode, binder: evtBinder } = eventOptions;\n    const { setValue } = binder;\n    // dirty hack for https://github.com/finom/seemple/issues/19\n    const dirtyHackValue = onChangeValue === 'string' && typeof value === 'number'\n      ? `${value}` : value;\n\n    // don't call setValue if a property is changed via getValue of the same binder\n    if (changedNode === node && onChangeValue === dirtyHackValue && evtBinder === binder) {\n      return;\n    }\n\n    setValue.call(node, value, {\n      value,\n      ...bindingOptions\n    });\n  };\n}\n"],"file":"_createobjecthandler.js"}