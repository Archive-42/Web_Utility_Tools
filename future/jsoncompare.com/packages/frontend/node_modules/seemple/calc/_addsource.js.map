{"version":3,"sources":["../../src/calc/_addsource.js"],"names":["addSource","calcHandler","allSources","sourceKey","sourceObject","eventOptions","exactKey","isDelegated","deepPath","split","length","push"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACe,SAASA,SAAT,OAMZ;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,YACC,QADDA,YACC;AAAA,8BAC0BA,YAD1B,CACKC,QADL;AAAA,MACKA,QADL,sCACgB,KADhB;AAED,MAAIC,WAAW,GAAG,KAAlB,CAFC,CAID;;AACA,MAAI,OAAOJ,SAAP,KAAqB,QAAzB,EAAmC;AACjC,UAAM,8BAAa,sBAAb,EAAqC;AAAEA,MAAAA,SAAS,EAATA;AAAF,KAArC,CAAN;AACD,GAPA,CASD;;;AACA,MAAI,CAACC,YAAD,IAAiB,yBAAOA,YAAP,MAAwB,QAA7C,EAAuD;AACrD,UAAM,8BAAa,yBAAb,EAAwC;AAAEA,MAAAA,YAAY,EAAZA;AAAF,KAAxC,CAAN;AACD;;AAED,MAAI,CAACE,QAAL,EAAe;AACb,QAAME,QAAQ,GAAGL,SAAS,CAACM,KAAV,CAAgB,GAAhB,CAAjB,CADa,CAGb;;AACA,QAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACvBH,MAAAA,WAAW,GAAG,IAAd,CADuB,CAEvB;AACA;;AACA,uCAAgBH,YAAhB,EAA8BI,QAA9B,EAAwCP,WAAxC;AACD,KALD,MAKO;AACLK,MAAAA,QAAQ,GAAG,IAAX;AACD;AACF;;AAGD,MAAIA,QAAJ,EAAc;AACZ;AACA,iCAAYF,YAAZ,yBAA0CD,SAA1C,GAAuDF,WAAvD;AACD;;AAEDC,EAAAA,UAAU,CAACS,IAAX,CAAgB;AACdR,IAAAA,SAAS,EAATA,SADc;AAEdC,IAAAA,YAAY,EAAZA,YAFc;AAGdG,IAAAA,WAAW,EAAXA;AAHc,GAAhB;AAKD","sourcesContent":["import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport seempleError from '../_helpers/seempleerror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n  calcHandler,\n  allSources,\n  sourceKey,\n  sourceObject,\n  eventOptions\n}) {\n  let { exactKey = false } = eventOptions;\n  let isDelegated = false;\n\n  // source key must be a string\n  if (typeof sourceKey !== 'string') {\n    throw seempleError('calc:source_key_type', { sourceKey });\n  }\n\n  // source object must be an object\n  if (!sourceObject || typeof sourceObject !== 'object') {\n    throw seempleError('calc:source_object_type', { sourceObject });\n  }\n\n  if (!exactKey) {\n    const deepPath = sourceKey.split('.');\n\n    // if something like a.b.c is used as a key\n    if (deepPath.length > 1) {\n      isDelegated = true;\n      // TODO: Avoid collisions with bindings by using another event name\n      // ... instead of _change:tree:xxx\n      addTreeListener(sourceObject, deepPath, calcHandler);\n    } else {\n      exactKey = true;\n    }\n  }\n\n\n  if (exactKey) {\n    // normal handler\n    addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n  }\n\n  allSources.push({\n    sourceKey,\n    sourceObject,\n    isDelegated\n  });\n}\n"],"file":"_addsource.js"}