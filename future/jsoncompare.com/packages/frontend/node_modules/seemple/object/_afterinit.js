"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = afterSeempleObjectInit;

var _afterinit = _interopRequireDefault(require("../seemple/_afterinit"));

var _addlistener = _interopRequireDefault(require("../on/_addlistener"));

var _triggerone = _interopRequireDefault(require("../trigger/_triggerone"));

var _defs = _interopRequireDefault(require("../_core/defs"));

// called on _change:delegated
// tiggers asterisk events logic by triggering _asterisk:set
function changeDelegatedHandler() {
  var eventOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var key = eventOptions.key;

  var def = _defs["default"].get(this);

  if (key && key in def.keys) {
    (0, _triggerone["default"])(this, '_asterisk:set', eventOptions);
  }
} // called on _delete:delegated
// removes asterisk events logic by triggering _asterisk:remove


function deleteDelegatedHandler() {
  var eventOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var key = eventOptions.key;

  var def = _defs["default"].get(this);

  if (key && key in def.keys) {
    (0, _triggerone["default"])(this, '_asterisk:remove', eventOptions);
  }
} // called on change
// triggers set and modify if data keys are changed


function changeHandler() {
  var eventOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var key = eventOptions.key,
      silent = eventOptions.silent;

  var def = _defs["default"].get(this);

  if (key && key in def.keys && !silent) {
    (0, _triggerone["default"])(this, 'set', eventOptions);
    (0, _triggerone["default"])(this, 'modify', eventOptions);
  }
} // called on delete
// triggers remove and modify if data keys are removed


function deleteHandler() {
  var eventOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var key = eventOptions.key,
      silent = eventOptions.silent;

  var def = _defs["default"].get(this);

  if (key && key in def.keys) {
    delete def.keys[key];

    if (!silent) {
      (0, _triggerone["default"])(this, 'remove', eventOptions);
      (0, _triggerone["default"])(this, 'modify', eventOptions);
    }
  }
} // Seemple.Object initializer


function afterSeempleObjectInit(def) {
  // Seemple initializer
  _afterinit["default"].call(this); // create a set of data keys


  def.keys = {}; // trigger asterisk events

  (0, _addlistener["default"])(this, '_change:delegated', changeDelegatedHandler); // trigger asterisk events removal

  (0, _addlistener["default"])(this, '_delete:delegated', deleteDelegatedHandler); // fire "modify" and "set" events when data key is changed

  (0, _addlistener["default"])(this, 'change', changeHandler); // fire "modify" and "remove" events when data key is removed

  (0, _addlistener["default"])(this, 'delete', deleteHandler);
}
//# sourceMappingURL=_afterinit.js.map