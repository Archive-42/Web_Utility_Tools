"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = changeHandler;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _undelegatelistener = _interopRequireDefault(require("../../off/_undelegatelistener"));

var _triggerone = _interopRequireDefault(require("../../trigger/_triggerone"));

// the function is called when some part of a path is changed
// it delegates event listener for new branch of an object and undelegates it for old one
// used for non-asterisk events
function changeHandler(_ref) {
  var previousValue = _ref.previousValue,
      value = _ref.value;

  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _triggerone["default"].latestEvent.info.delegatedData,
      path = _ref2.path,
      name = _ref2.name,
      callback = _ref2.callback,
      context = _ref2.context,
      info = _ref2.info;

  if (value && (0, _typeof2["default"])(value) === 'object') {
    var delegateListener = require('./')["default"]; // fixing circular ref


    delegateListener(value, path, name, callback, context, info);
  }

  if (previousValue && (0, _typeof2["default"])(previousValue) === 'object') {
    (0, _undelegatelistener["default"])(previousValue, path, name, callback, context, info);
  }
}
//# sourceMappingURL=changehandler.js.map