"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = once;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _on = _interopRequireDefault(require("./on"));

var _checkobjecttype = _interopRequireDefault(require("./_helpers/checkobjecttype"));

var _forown = _interopRequireDefault(require("./_helpers/forown"));

var _off = _interopRequireDefault(require("./off"));

var _apply = _interopRequireDefault(require("./_helpers/apply"));

// adds event listener which will be removed immediately after its first call
function once(object, names, givenCallback, context) {
  if ((0, _typeof2["default"])(this) === 'object' && this.isSeemple) {
    // when context is Seemple instance, use this as an object and shift other args

    /* eslint-disable no-param-reassign */
    context = givenCallback;
    givenCallback = names;
    names = object;
    object = this;
    /* eslint-enable no-param-reassign */
  } else {
    // throw error when object type is wrong
    (0, _checkobjecttype["default"])(object, 'once');
  }

  var isNamesVarArray = names instanceof Array; // allow to pass name-handler object

  if (names && (0, _typeof2["default"])(names) === 'object' && !isNamesVarArray) {
    (0, _forown["default"])(names, function (namesObjCallback, namesObjName) {
      return once(object, namesObjName, namesObjCallback, givenCallback);
    });
    return object;
  }

  var callback = function onceCallback() {
    (0, _apply["default"])(givenCallback, this, arguments); // remove event listener after its call

    (0, _off["default"])(object, names, onceCallback, context);
  }; // allow to remove event listener py passing original callback to "off"


  callback._callback = givenCallback;
  return (0, _on["default"])(object, names, callback, context);
}
//# sourceMappingURL=once.js.map