{"version":3,"sources":["../src/toseemple.js"],"names":["toSeemple","data","SeempleObject","require","SeempleArray","arrayItems","Array","length","item","index","recreate","object","value","key"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;AACe,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACtC;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,UAAD,CAAP,WAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,SAAD,CAAP,WAArB,CAHsC,CAKtC;;;AACA,MAAIF,IAAI,IAAI,yBAAOA,IAAP,MAAgB,QAA5B,EAAsC;AACpC,QAAI,YAAYA,IAAhB,EAAsB;AACpB;AACA,UAAMI,UAAU,GAAGC,KAAK,CAACL,IAAI,CAACM,MAAN,CAAxB;AAEA,+BAAQN,IAAR,EAAc,UAACO,IAAD,EAAOC,KAAP,EAAiB;AAC7BJ,QAAAA,UAAU,CAACI,KAAD,CAAV,GAAoBT,SAAS,CAACQ,IAAD,CAA7B;AACD,OAFD;AAIA,aAAO,IAAIJ,YAAJ,GAAmBM,QAAnB,CAA4BL,UAA5B,CAAP;AACD,KAVmC,CAYpC;;;AACA,QAAMM,MAAM,GAAG,EAAf;AAEA,4BAAOV,IAAP,EAAa,UAACW,KAAD,EAAQC,GAAR,EAAgB;AAC3BF,MAAAA,MAAM,CAACE,GAAD,CAAN,GAAcb,SAAS,CAACY,KAAD,CAAvB;AACD,KAFD;AAIA,WAAO,IAAIV,aAAJ,CAAkBS,MAAlB,CAAP;AACD,GA1BqC,CA4BtC;;;AACA,SAAOV,IAAP;AACD","sourcesContent":["import forEach from './_helpers/foreach';\nimport forOwn from './_helpers/forown';\n\n// recursively converts objects and arrays to Seemple.Object and Seemple.Array instances\nexport default function toSeemple(data) {\n  // fix circular ref issue\n  const SeempleObject = require('./object').default;\n  const SeempleArray = require('./array').default;\n\n  // convert only objects\n  if (data && typeof data === 'object') {\n    if ('length' in data) {\n      // if length is given convert it to Seemple.Array instance\n      const arrayItems = Array(data.length);\n\n      forEach(data, (item, index) => {\n        arrayItems[index] = toSeemple(item);\n      });\n\n      return new SeempleArray().recreate(arrayItems);\n    }\n\n    // if length is not given convert it to Seemple.Object instance\n    const object = {};\n\n    forOwn(data, (value, key) => {\n      object[key] = toSeemple(value);\n    });\n\n    return new SeempleObject(object);\n  }\n\n  // for all non-objects just return passed data\n  return data;\n}\n"],"file":"toseemple.js"}