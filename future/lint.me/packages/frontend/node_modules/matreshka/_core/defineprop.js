'use strict';

var defs = require('./defs');

var set = require('../set');

var matreshkaError = require('../_helpers/matreshkaerror');

function errorAccessor() {
    throw matreshkaError('common:use_magic_props');
}

// the function defines needed descriptor for given property
module.exports = defineProp;
function defineProp(object, key, noAccessor) {
    var def = defs.get(object);

    // if no object definition do nothing
    if (!def) {
        return null;
    }

    if (!def.props[key]) {
        (function () {
            var propDef = def.props[key] = {
                value: object[key],
                mediator: null,
                bindings: null
            };
            var getter = void 0;
            var setter = void 0;

            // make possible to throw an error on get and on set if sandbox (for all objects)
            // or container (for Matreshka.Array instances) are used
            if (key === 'sandbox' || object.isMatreshkaArray && key === 'container') {
                getter = setter = errorAccessor;
            }

            if (!noAccessor) {
                Object.defineProperty(object, key, {
                    configurable: true,
                    enumerable: true,
                    get: function () {
                        return getter ? getter() : propDef.value;
                    },
                    set: function (v) {
                        return setter ? setter() : set(object, key, v, {
                            fromSetter: true
                        });
                    }
                });
            }
        })();
    }

    return def.props[key];
}
//# sourceMappingURL=defineprop.js.map