{"version":3,"sources":["../../src/_core/defineprop.js"],"names":["errorAccessor","matreshkaError","defineProp","object","key","noAccessor","def","defs","get","props","propDef","value","mediator","bindings","getter","setter","isMatreshkaArray","Object","defineProperty","configurable","enumerable","set","v","fromSetter"],"mappings":";;mBAAiB,Q;;kBACD,Q;;6BACW,4B;;AAE3B,SAASA,aAAT,GAAyB;AACrB,UAAMC,eAAe,wBAAf,CAAN;AACH;;AAED;iBACwBC,U;AAAT,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,UAAjC,EAA6C;AACxD,QAAMC,MAAMC,KAAKC,GAAL,CAASL,MAAT,CAAZ;;AAEA;AACA,QAAI,CAACG,GAAL,EAAU;AACN,eAAO,IAAP;AACH;;AAED,QAAI,CAACA,IAAIG,KAAJ,CAAUL,GAAV,CAAL,EAAqB;AAAA;AACjB,gBAAMM,UAAUJ,IAAIG,KAAJ,CAAUL,GAAV,IAAiB;AAC7BO,uBAAOR,OAAOC,GAAP,CADsB;AAE7BQ,0BAAU,IAFmB;AAG7BC,0BAAU;AAHmB,aAAjC;AAKA,gBAAIC,eAAJ;AACA,gBAAIC,eAAJ;;AAEA;AACA;AACA,gBAAIX,QAAQ,SAAR,IAAsBD,OAAOa,gBAAP,IAA2BZ,QAAQ,WAA7D,EAA2E;AACvEU,yBAASC,SAASf,aAAlB;AACH;;AAED,gBAAI,CAACK,UAAL,EAAiB;AACbY,uBAAOC,cAAP,CAAsBf,MAAtB,EAA8BC,GAA9B,EAAmC;AAC/Be,kCAAc,IADiB;AAE/BC,gCAAY,IAFmB;AAG/BZ,uBAH+B,cAGzB;AACF,+BAAOM,SAASA,QAAT,GAAoBJ,QAAQC,KAAnC;AACH,qBAL8B;AAM/BU,uBAN+B,YAM3BC,CAN2B,EAMxB;AACH,+BAAOP,SAASA,QAAT,GAAoBM,IAAIlB,MAAJ,EAAYC,GAAZ,EAAiBkB,CAAjB,EAAoB;AAC3CC,wCAAY;AAD+B,yBAApB,CAA3B;AAGH;AAV8B,iBAAnC;AAYH;AA5BgB;AA6BpB;;AAED,WAAOjB,IAAIG,KAAJ,CAAUL,GAAV,CAAP;AACH","file":"defineprop.js","sourcesContent":["import defs from './defs';\nimport set from '../set';\nimport matreshkaError from '../_helpers/matreshkaerror';\n\nfunction errorAccessor() {\n    throw matreshkaError('common:use_magic_props');\n}\n\n// the function defines needed descriptor for given property\nexport default function defineProp(object, key, noAccessor) {\n    const def = defs.get(object);\n\n    // if no object definition do nothing\n    if (!def) {\n        return null;\n    }\n\n    if (!def.props[key]) {\n        const propDef = def.props[key] = {\n            value: object[key],\n            mediator: null,\n            bindings: null\n        };\n        let getter;\n        let setter;\n\n        // make possible to throw an error on get and on set if sandbox (for all objects)\n        // or container (for Matreshka.Array instances) are used\n        if (key === 'sandbox' || (object.isMatreshkaArray && key === 'container')) {\n            getter = setter = errorAccessor;\n        }\n\n        if (!noAccessor) {\n            Object.defineProperty(object, key, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return getter ? getter() : propDef.value;\n                },\n                set(v) {\n                    return setter ? setter() : set(object, key, v, {\n                        fromSetter: true\n                    });\n                }\n            });\n        }\n    }\n\n    return def.props[key];\n}\n"]}