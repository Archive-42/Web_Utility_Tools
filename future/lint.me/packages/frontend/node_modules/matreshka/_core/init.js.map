{"version":3,"sources":["../../src/_core/init.js"],"names":["objectId","initMK","object","def","defs","get","events","props","id","set","_afterInit"],"mappings":";;mBAAiB,Q;;AAEjB,IAAIA,WAAW,CAAf;;AAEA;iBACwBC,M;AAAT,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;AACnC,QAAIC,MAAMC,KAAKC,GAAL,CAASH,MAAT,CAAV;AACA,QAAI,CAACC,GAAL,EAAU;AACNA,cAAM;AACF;AACA;AACAG,oBAAQ;AACJ;;;;;;;AADI,aAHN;AAYF;AACAC,mBAAO;AACH;;;;;;;;;;;AADG,aAbL;AA0BFC,gBAAIR;AA1BF,SAAN;;AA6BAA,oBAAY,CAAZ;;AAEAI,aAAKK,GAAL,CAASP,MAAT,EAAiBC,GAAjB;;AAEA,YAAID,OAAOQ,UAAX,EAAuB;AACnBR,mBAAOQ,UAAP,CAAkBP,GAAlB;AACH;AACJ;;AAED,WAAOA,GAAP;AACH","file":"init.js","sourcesContent":["import defs from './defs';\n\nlet objectId = 0;\n\n// this is common function which associates an object with its Matreshka definition\nexport default function initMK(object) {\n    let def = defs.get(object);\n    if (!def) {\n        def = {\n            // a property name of \"events\" object is an event name\n            // and a value is an array of event handlers\n            events: {\n                /* example: {\n                    callback: function,\n                    ctx: object,\n                    context: object2,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n            },\n            // \"props\" contains special information about properties (getters, setters etc)\n            props: {\n                /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                }*/\n            },\n            id: objectId\n        };\n\n        objectId += 1;\n\n        defs.set(object, def);\n\n        if (object._afterInit) {\n            object._afterInit(def);\n        }\n    }\n\n    return def;\n}\n"]}