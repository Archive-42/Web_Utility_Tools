{"version":3,"sources":["../../../src/_dom/mq/on.js"],"names":["splitBySpaceReg","splitByDotReg","randomID","Math","random","toString","replace","is","node","selector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","call","delegateHandler","evt","handler","scopeSelector","splittedSelector","split","matching","i","length","sel","setAttribute","target","removeAttribute","on","namesStr","names","delegate","uniqueDelegateHandler","name","namespace","j","nodeID","b$","data","nodeIndex","events","allEvents","exist","k","event","push","addEventListener"],"mappings":"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","file":"on.js","sourcesContent":["import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n    return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n    const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n    const splittedSelector = selector.split(',');\n\n    let matching = '';\n\n    for (let i = 0; i < splittedSelector.length; i++) {\n        const sel = splittedSelector[i];\n        matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n    }\n\n\n    this.setAttribute(randomID, randomID);\n\n    if (is(evt.target, matching)) {\n        handler.call(this, evt);\n    }\n\n    this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n    const names = namesStr.split(splitBySpaceReg);\n    let delegate;\n\n    if (typeof selector === 'function') {\n        handler = selector; // eslint-disable-line no-param-reassign\n        selector = null; // eslint-disable-line no-param-reassign\n    }\n\n    if (selector) {\n        delegate = function uniqueDelegateHandler(evt) {\n            delegateHandler.call(this, evt, selector, handler);\n        };\n    }\n\n    for (let i = 0; i < names.length; i++) {\n        const [name, namespace] = names[i].split(splitByDotReg);\n\n        for (let j = 0; j < this.length; j++) {\n            const node = this[j];\n            const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n            const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n            let exist = false;\n\n            for (let k = 0; k < events.length; k++) {\n                const event = events[k];\n\n                if (handler === event.handler && (!selector || selector === event.selector)) {\n                    exist = true;\n                    break;\n                }\n            }\n\n            if (!exist) {\n                events.push({\n                    delegate,\n                    handler,\n                    namespace,\n                    selector,\n                    nodeID,\n                    name\n                });\n\n                node.addEventListener(name, delegate || handler, false);\n            }\n        }\n    }\n\n    return this;\n}\n"]}