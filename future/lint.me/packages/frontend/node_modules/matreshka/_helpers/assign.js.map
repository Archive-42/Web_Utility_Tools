{"version":3,"sources":["../../src/_helpers/assign.js"],"names":["assign","Object","target","undefined","TypeError","output","index","arguments","length","source","nextKey","nextValue"],"mappings":";;AAAA;AACA;AACA,IAAMA,SAASC,OAAOD,MAAP,IAAiB,SAASA,MAAT,CAAgBE,MAAhB,EAAwB;AACpD;AACA,QAAIA,WAAWC,SAAX,IAAwBD,WAAW,IAAvC,EAA6C;AACzC,cAAM,IAAIE,SAAJ,CAAc,4CAAd,CAAN;AACH;;AAED,QAAMC,SAASJ,OAAOC,MAAP,CAAf;;AAEA,SAAK,IAAII,QAAQ,CAAjB,EAAoBA,QAAQC,UAAUC,MAAtC,EAA8CF,OAA9C,EAAuD;AACnD,YAAMG,SAASF,UAAUD,KAAV,CAAf;AACA,YAAIG,WAAWN,SAAX,IAAwBM,WAAW,IAAvC,EAA6C;AAAA,+BAC7BA,MAD6B,wCACTC,OADS,EACpBC,SADoB,sBACTD,OADS,cACpBC,SADoB,WACTD,OADS,mBACG;AACxCL,uBAAOK,OAAP,IAAkBC,SAAlB;AACH;AACJ;AACJ;;AAED,WAAON,MAAP;AACH,CAlBD;;iBAoBeL,M","file":"assign.js","sourcesContent":["// Object.assign polyfyll\n/* istanbul ignore next */\nconst assign = Object.assign || function assign(target) {\n    /* istanbul ignore next */\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    const output = Object(target);\n\n    for (let index = 1; index < arguments.length; index++) {\n        const source = arguments[index];\n        if (source !== undefined && source !== null) {\n            nofn.forOwn(source, (nextValue, nextKey) => {\n                output[nextKey] = nextValue;\n            });\n        }\n    }\n\n    return output;\n};\n\nexport default assign;\n"]}