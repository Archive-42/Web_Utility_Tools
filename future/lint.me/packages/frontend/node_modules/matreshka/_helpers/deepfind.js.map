{"version":3,"sources":["../../src/_helpers/deepfind.js"],"names":["deepFind","obj","givenPath","paths","split","current","i","length","undefined"],"mappings":";;AAAA;AACA;iBACwBA,Q;AAAT,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,SAAvB,EAAkC;AAC7C,QAAMC,QAAQ,OAAOD,SAAP,KAAqB,QAArB,GAAgCA,UAAUE,KAAV,CAAgB,GAAhB,CAAhC,GAAuDF,SAArE;AACA,QAAIG,UAAUJ,GAAd;;AAEA,SAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkC,EAAED,CAApC,EAAuC;AACnC,YAAI,OAAOD,QAAQF,MAAMG,CAAN,CAAR,CAAP,KAA6B,WAAjC,EAA8C;AAC1C,mBAAOE,SAAP;AACH;;AAEDH,kBAAUA,QAAQF,MAAMG,CAAN,CAAR,CAAV;AACH;;AAED,WAAOD,OAAP;AACH","file":"deepfind.js","sourcesContent":["// gets value of a property in nested object\n// eg \"d\" from a.b.c.d\nexport default function deepFind(obj, givenPath) {\n    const paths = typeof givenPath === 'string' ? givenPath.split('.') : givenPath;\n    let current = obj;\n\n    for (let i = 0; i < paths.length; ++i) {\n        if (typeof current[paths[i]] === 'undefined') {\n            return undefined;\n        }\n\n        current = current[paths[i]];\n    }\n\n    return current;\n}\n"]}