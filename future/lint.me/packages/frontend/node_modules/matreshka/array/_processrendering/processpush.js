'use strict';

var renderItemNode = require('./renderitemnode');

var triggerOne = require('../../trigger/_triggerone');

var checkAlreadyRendered = require('./checkalreadyrendered');

// this function renders inserted items if possible when push method is called
module.exports = processPush;
function processPush(_ref) {
    var self = _ref.self,
        selfDef = _ref.selfDef,
        eventOptions = _ref.eventOptions,
        container = _ref.container;
    var added = eventOptions.added,
        silent = eventOptions.silent;

    for (var _target = added, _index = 0, item, _l = _target.length; item = _target[_index], _index < _l; _index++) {
        if (item && typeof item === 'object') {
            // if a node of an item is already rendered then throw an error
            checkAlreadyRendered({
                item: item,
                selfDef: selfDef
            });

            // render

            var _renderItemNode = renderItemNode({
                selfDef: selfDef,
                self: self,
                item: item,
                eventOptions: eventOptions
            }),
                node = _renderItemNode.node,
                itemEventOptions = _renderItemNode.itemEventOptions;

            if (node) {
                container.appendChild(node);
                if (!silent) {
                    triggerOne(item, 'afterrender', itemEventOptions);
                }
            }
        }
    }
}
//# sourceMappingURL=processpush.js.map