{"version":3,"sources":["../../../src/array/_processrendering/processsort.js"],"names":["processSort","self","selfDef","container","item","node","getAlreadyRendered","appendChild"],"mappings":";;iCAA+B,sB;;AAE/B;iBACwBA,W;AAAT,SAASA,WAAT,OAKZ;AAAA,QAJCC,IAID,QAJCA,IAID;AAAA,QAHCC,OAGD,QAHCA,OAGD;AAAA,QADCC,SACD,QADCA,SACD;AACC;;AADD,uBAEcF,IAFd,cAEqBG,IAFrB,uBAEqBA,IAFrB,2CAE8B;AACzB,YAAIA,QAAQ,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAClC,gBAAMC,OAAOC,mBAAmB;AAC5BF,0BAD4B;AAE5BF;AAF4B,aAAnB,CAAb;;AAKA,gBAAIG,IAAJ,EAAU;AACNF,0BAAUI,WAAV,CAAsBF,IAAtB;AACH;AACJ;AACJ;AACJ","file":"processsort.js","sourcesContent":["import getAlreadyRendered from './getalreadyrendered';\n\n// this function gets called when array is sorted (via sort, orderBy or reverse)\nexport default function processSort({\n    self,\n    selfDef,\n    // eventOptions,\n    container\n}) {\n    // just re-insert rendered nodes in new order\n    nofn.forEach(self, (item) => {\n        if (item && typeof item === 'object') {\n            const node = getAlreadyRendered({\n                item,\n                selfDef\n            });\n\n            if (node) {\n                container.appendChild(node);\n            }\n        }\n    });\n}\n"]}