{"version":3,"sources":["../../../src/array/_processrendering/processunshift.js"],"names":["processUnshift","self","selfDef","eventOptions","container","added","silent","i","length","item","checkAlreadyRendered","renderItemNode","node","itemEventOptions","firstChild","insertBefore","appendChild","triggerOne"],"mappings":";;6BAA2B,kB;;yBACJ,2B;;mCACU,wB;;AAEjC;iBACwBA,c;AAAT,SAASA,cAAT,OAKZ;AAAA,QAJCC,IAID,QAJCA,IAID;AAAA,QAHCC,OAGD,QAHCA,OAGD;AAAA,QAFCC,YAED,QAFCA,YAED;AAAA,QADCC,SACD,QADCA,SACD;AAAA,QACSC,KADT,GAC2BF,YAD3B,CACSE,KADT;AAAA,QACgBC,MADhB,GAC2BH,YAD3B,CACgBG,MADhB;;AAGC;;AACA,SAAK,IAAIC,IAAIF,MAAMG,MAAN,GAAe,CAA5B,EAA+BD,IAAI,CAAnC,EAAsCA,GAAtC,EAA2C;AACvC,YAAME,OAAOJ,MAAME,CAAN,CAAb;AACA,YAAIE,QAAQ,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAClC;AACAC,iCAAqB;AACjBD,0BADiB;AAEjBP;AAFiB,aAArB;;AAFkC,kCAOCS,eAAe;AAC9CT,gCAD8C;AAE9CD,0BAF8C;AAG9CQ,0BAH8C;AAI9CN;AAJ8C,aAAf,CAPD;AAAA,gBAO1BS,IAP0B,mBAO1BA,IAP0B;AAAA,gBAOpBC,gBAPoB,mBAOpBA,gBAPoB;;AAclC,gBAAID,IAAJ,EAAU;AACN,oBAAIR,UAAUU,UAAd,EAA0B;AACtBV,8BAAUW,YAAV,CAAuBH,IAAvB,EAA6BR,UAAUU,UAAvC;AACH,iBAFD,MAEO;AACHV,8BAAUY,WAAV,CAAsBJ,IAAtB;AACH;;AAED,oBAAI,CAACN,MAAL,EAAa;AACTW,+BAAWR,IAAX,EAAiB,aAAjB,EAAgCI,gBAAhC;AACH;AACJ;AACJ;AACJ;AACJ","file":"processunshift.js","sourcesContent":["import renderItemNode from './renderitemnode';\nimport triggerOne from '../../trigger/_triggerone';\nimport checkAlreadyRendered from './checkalreadyrendered';\n\n// this function renders inserted items if possible when unshift or push method is called\nexport default function processUnshift({\n    self,\n    selfDef,\n    eventOptions,\n    container\n}) {\n    const { added, silent } = eventOptions;\n\n    // iterate over all added items in opposite order\n    for (let i = added.length - 1; i + 1; i--) {\n        const item = added[i];\n        if (item && typeof item === 'object') {\n            // if a node of an item is already rendered then throw an error\n            checkAlreadyRendered({\n                item,\n                selfDef\n            });\n\n            const { node, itemEventOptions } = renderItemNode({\n                selfDef,\n                self,\n                item,\n                eventOptions\n            });\n\n            if (node) {\n                if (container.firstChild) {\n                    container.insertBefore(node, container.firstChild);\n                } else {\n                    container.appendChild(node);\n                }\n\n                if (!silent) {\n                    triggerOne(item, 'afterrender', itemEventOptions);\n                }\n            }\n        }\n    }\n}\n"]}