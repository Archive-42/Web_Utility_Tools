{"version":3,"sources":["../../../src/array/_pseudonativemethods/createaddingmethod.js"],"names":["createAddingMethod","name","hasOptions","pseudoNativeMethod","initMK","itemMediator","argsLength","arguments","length","args","Array","givenEventOptions","useMediator","skipItemMediator","isPush","i","arg","index","eventOptions","method","self","added","removed","reportModified"],"mappings":";;qBAAmB,kB;;6BACQ,oB;;AAE3B;iBACwBA,kB;AAAT,SAASA,kBAAT,CAA4BC,IAA5B,EAAkCC,UAAlC,EAA8C;AACzD,WAAO,SAASC,kBAAT,GAA8B;AAAA,sBACRC,OAAO,IAAP,CADQ;AAAA,YACzBC,YADyB,WACzBA,YADyB;AAEjC;;;AACA,YAAMC,aAAaC,UAAUC,MAAV,GAAmB,CAACN,UAAvC;AACA,YAAMO,OAAOC,MAAMJ,UAAN,CAAb;AACA,YAAMK,oBAAoBT,aAAaK,UAAUA,UAAUC,MAAV,GAAmB,CAA7B,CAAb,GAA+C,IAAzE;AACA,YAAMI,cAAc,OAAOP,YAAP,KAAwB,UAAxB,KACZ,CAACM,iBAAD,IAAsB,CAACA,kBAAkBE,gBAD7B,CAApB;AAEA,YAAMC,SAASb,SAAS,MAAxB;AARiC,YAS3BO,MAT2B,GAShB,IATgB,CAS3BA,MAT2B;;AAWjC;;AACA,YAAI,CAACF,UAAL,EAAiB;AACb,mBAAOE,MAAP;AACH;;AAED;AACA,aAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIT,UAApB,EAAgCS,GAAhC,EAAqC;AACjC,gBAAMC,MAAMT,UAAUQ,CAAV,CAAZ;AACA,gBAAIH,WAAJ,EAAiB;AACb,oBAAMK,QAAQH,SAASC,IAAIP,MAAb,GAAsBO,CAApC;AACAN,qBAAKM,CAAL,IAAUV,aAAaW,GAAb,EAAkBC,KAAlB,CAAV;AACH,aAHD,MAGO;AACHR,qBAAKM,CAAL,IAAUC,GAAV;AACH;AACJ;;AAED,YAAIF,MAAJ,EAAY;AACR;AACA,iBAAK,IAAIC,KAAI,CAAb,EAAgBA,KAAIT,UAApB,EAAgCS,IAAhC,EAAqC;AACjC,qBAAKP,SAASO,EAAd,IAAmBN,KAAKM,EAAL,CAAnB;AACH;AACJ,SALD,MAKO;AACH;AACA,iBAAK,IAAIA,MAAIP,SAAS,CAAtB,EAAyBO,OAAK,CAA9B,EAAiCA,KAAjC,EAAsC;AAClC,qBAAKT,aAAaS,GAAlB,IAAuB,KAAKA,GAAL,CAAvB;AACH;AACD;AACA,iBAAK,IAAIA,MAAI,CAAb,EAAgBA,MAAIT,UAApB,EAAgCS,KAAhC,EAAqC;AACjC,qBAAKA,GAAL,IAAUN,KAAKM,GAAL,CAAV;AACH;AACJ;;AAED;AACAP,kBAAUF,UAAV;AACA,aAAKE,MAAL,GAAcA,MAAd;;AAEA,YAAMU,eAAe;AACjBC,oBAAQlB,IADS;AAEjBmB,kBAAM,IAFW;AAGjBC,mBAAOZ,IAHU;AAIjBa,qBAAS;AAJQ,SAArB;;AAOA;AACA,YAAIpB,UAAJ,EAAgB;AACZ,gBAAIS,qBAAqB,OAAOA,iBAAP,KAA6B,QAAtD,EAAgE;AAAA,8BAChDO,YADgD;;AAAA,oCAClCP,iBADkC;AAAA;AAAA;AAAA;AAE/D;AACJ;;AAEDY,uBAAe,IAAf,EAAqBL,YAArB;;AAEA,eAAOV,MAAP;AACH,KAhED;AAiEH","file":"createaddingmethod.js","sourcesContent":["import initMK from '../../_core/init';\nimport reportModified from '../_reportmodified';\n\n// creates methods: push, unshift, push_, unshift_\nexport default function createAddingMethod(name, hasOptions) {\n    return function pseudoNativeMethod() {\n        const { itemMediator } = initMK(this);\n        // +hasOptions is converted to 0 or 1 depending on its value (false/true)\n        const argsLength = arguments.length - +hasOptions;\n        const args = Array(argsLength);\n        const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n        const useMediator = typeof itemMediator === 'function'\n            && (!givenEventOptions || !givenEventOptions.skipItemMediator);\n        const isPush = name === 'push';\n        let { length } = this;\n\n        // if no arguments are passed\n        if (!argsLength) {\n            return length;\n        }\n\n        // convert arguments to array and call item mediator on every item if it's possible\n        for (let i = 0; i < argsLength; i++) {\n            const arg = arguments[i];\n            if (useMediator) {\n                const index = isPush ? i + length : i;\n                args[i] = itemMediator(arg, index);\n            } else {\n                args[i] = arg;\n            }\n        }\n\n        if (isPush) {\n            // insert new items to the end of array\n            for (let i = 0; i < argsLength; i++) {\n                this[length + i] = args[i];\n            }\n        } else {\n            // move current items to new indexes\n            for (let i = length - 1; i >= 0; i--) {\n                this[argsLength + i] = this[i];\n            }\n            // insert new items to the begin of array\n            for (let i = 0; i < argsLength; i++) {\n                this[i] = args[i];\n            }\n        }\n\n        // update length\n        length += argsLength;\n        this.length = length;\n\n        const eventOptions = {\n            method: name,\n            self: this,\n            added: args,\n            removed: []\n        };\n\n        // extend event options by custom event options if they are given\n        if (hasOptions) {\n            if (givenEventOptions && typeof givenEventOptions === 'object') {\n                nofn.assign(eventOptions, givenEventOptions);\n            }\n        }\n\n        reportModified(this, eventOptions);\n\n        return length;\n    };\n}\n"]}