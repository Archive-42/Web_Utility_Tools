{"version":3,"sources":["../../../src/array/_pseudonativemethods/createfill.js"],"names":["createFill","hasOptions","fill","value","originalFill","Array","prototype","matreshkaError","method","argsLength","arguments","length","args","givenEventOptions","i","apply","eventOptions","self","added","removed","reportModified"],"mappings":";;oBAAkB,sB;;6BACS,oB;;6BACA,+B;;iBAEHA,U;AAAT,SAASA,UAAT,CAAoBC,UAApB,EAAgC;AAC3C,WAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACxB,YAAMC,eAAeC,MAAMC,SAAN,CAAgBJ,IAArC;;AAEA;AACA,YAAI,OAAOE,YAAP,KAAwB,UAA5B,EAAwC;AACpC,kBAAMG,eAAe,0BAAf,EAA2C,EAAEC,QAAQ,MAAV,EAA3C,CAAN;AACH;AACD;AACA,YAAMC,aAAaC,UAAUC,MAAV,GAAmB,CAACV,UAAvC;AACA,YAAMW,OAAOP,MAAMI,UAAN,CAAb;AACA,YAAMI,oBAAoBZ,aAAaS,UAAUA,UAAUC,MAAV,GAAmB,CAA7B,CAAb,GAA+C,IAAzE;;AAEA,aAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIL,UAApB,EAAgCK,GAAhC,EAAqC;AACjCF,iBAAKE,CAAL,IAAUJ,UAAUI,CAAV,CAAV;AACH;;AAEDC,cAAMX,YAAN,EAAoB,IAApB,EAA0BQ,IAA1B;;AAEA,YAAMI,eAAe;AACjBR,oBAAQ,MADS;AAEjBS,kBAAM,IAFW;AAGjBC,mBAAO,CAACf,KAAD,CAHU;AAIjBgB,qBAAS;AAJQ,SAArB;;AAOA;AACA,YAAIlB,UAAJ,EAAgB;AACZ,gBAAIY,qBAAqB,OAAOA,iBAAP,KAA6B,QAAtD,EAAgE;AAAA,8BAChDG,YADgD;;AAAA,oCAClCH,iBADkC;AAAA;AAAA;AAAA;AAE/D;AACJ;;AAEDO,uBAAe,IAAf,EAAqBJ,YAArB;;AAEA,eAAO,IAAP;AACH,KAnCD;AAoCH","file":"createfill.js","sourcesContent":["import apply from '../../_helpers/apply';\nimport reportModified from '../_reportmodified';\nimport matreshkaError from '../../_helpers/matreshkaerror';\n\nexport default function createFill(hasOptions) {\n    return function fill(value) {\n        const originalFill = Array.prototype.fill;\n\n        /* istanbul ignore if  */\n        if (typeof originalFill !== 'function') {\n            throw matreshkaError('array:nonexistent_method', { method: 'fill' });\n        }\n        // +hasOptions is converted to 0 or 1 depending on its value (false/true)\n        const argsLength = arguments.length - +hasOptions;\n        const args = Array(argsLength);\n        const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n\n        for (let i = 0; i < argsLength; i++) {\n            args[i] = arguments[i];\n        }\n\n        apply(originalFill, this, args);\n\n        const eventOptions = {\n            method: 'fill',\n            self: this,\n            added: [value],\n            removed: []\n        };\n\n        // extend event options by custom event options if they are given\n        if (hasOptions) {\n            if (givenEventOptions && typeof givenEventOptions === 'object') {\n                nofn.assign(eventOptions, givenEventOptions);\n            }\n        }\n\n        reportModified(this, eventOptions);\n\n        return this;\n    };\n}\n"]}