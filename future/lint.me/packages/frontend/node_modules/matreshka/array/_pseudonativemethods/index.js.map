{"version":3,"sources":["../../../src/array/_pseudonativemethods/index.js"],"names":["splitBySpaceReg","methods","concat","keys","values","entries","split","forEach","name","createPseudoNativeMethod"],"mappings":";;uCAAqC,4B;;qBAClB,U;;mBACF,Q;;qBACE,U;;sBACC,W;;AAEpB,IAAMA,kBAAkB,KAAxB;AACA,IAAMC,UAAU,EAAEC,cAAF,EAAUC,UAAV,EAAgBC,cAAhB,EAAwBC,gBAAxB,EAAhB;;AAEA,sKAEKC,KAFL,CAEWN,eAFX,EAE4BO,OAF5B,CAEoC,UAACC,IAAD,EAAU;AACtCP,YAAQO,IAAR,IAAgBC,yBAAyBD,IAAzB,CAAhB;AACH,CAJL;;AAMA,6DACKF,KADL,CACWN,eADX,EAC4BO,OAD5B,CACoC,UAACC,IAAD,EAAU;AACtCP,YAAWO,IAAX,UAAsBC,yBAAyBD,IAAzB,EAA+B,IAA/B,CAAtB;AACH,CAHL;;iBAKeP,O","file":"index.js","sourcesContent":["import createPseudoNativeMethod from './createpseudonativemethod';\nimport concat from './concat';\nimport keys from './keys';\nimport values from './values';\nimport entries from './entries';\n\nconst splitBySpaceReg = /\\s+/;\nconst methods = { concat, keys, values, entries };\n\n`push pop unshift shift sort reverse splice map filter slice every some reduce reduceRight\nforEach join indexOf lastIndexOf copyWithin fill includes find findIndex`\n    .split(splitBySpaceReg).forEach((name) => {\n        methods[name] = createPseudoNativeMethod(name);\n    });\n\n'push pop unshift shift sort reverse splice copyWithin fill'\n    .split(splitBySpaceReg).forEach((name) => {\n        methods[`${name}_`] = createPseudoNativeMethod(name, true);\n    });\n\nexport default methods;\n"]}