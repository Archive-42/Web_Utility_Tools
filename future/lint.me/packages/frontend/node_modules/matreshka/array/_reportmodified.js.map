{"version":3,"sources":["../../src/array/_reportmodified.js"],"names":["reportModified","self","eventOptions","added","removed","silent","method","dontRender","addedLength","length","removedLength","modified","defs","get","events","renderIfPossible","asteriskAddEvtName","asteriskRemoveEvtName","triggerOne","add","addone","i","addedItem","remove","removeone","removedItem","modify","processRendering"],"mappings":";;mBAAiB,e;;yBACM,wB;;+BACM,qB;;AAE7B;iBACwBA,c;AAAT,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,YAA9B,EAA4C;AAAA,QAEnDC,KAFmD,GAOnDD,YAPmD,CAEnDC,KAFmD;AAAA,QAGnDC,OAHmD,GAOnDF,YAPmD,CAGnDE,OAHmD;AAAA,QAInDC,MAJmD,GAOnDH,YAPmD,CAInDG,MAJmD;AAAA,QAKnDC,MALmD,GAOnDJ,YAPmD,CAKnDI,MALmD;AAAA,QAMnDC,UANmD,GAOnDL,YAPmD,CAMnDK,UANmD;;AAQvD,QAAMC,cAAcL,MAAMM,MAA1B;AACA,QAAMC,gBAAgBN,QAAQK,MAA9B;AACA,QAAME,WAAWH,eAAeE,aAAf,IAAgCJ,WAAW,MAA3C,IAAqDA,WAAW,SAAjF;;AAVuD,oBAWpCM,KAAKC,GAAL,CAASZ,IAAT,CAXoC;AAAA,QAW/Ca,MAX+C,aAW/CA,MAX+C;;AAAA,gCAYnBb,IAZmB,CAY/Cc,gBAZ+C;AAAA,QAY/CA,gBAZ+C,yCAY5B,IAZ4B;;AAavD,QAAMC,qBAAqB,eAA3B;AACA,QAAMC,wBAAwB,kBAA9B;;AAEA;AACA;AACA,QAAIT,eAAeM,OAAOE,kBAAP,CAAnB,EAA+C;AAC3CE,mBAAWjB,IAAX,EAAiBe,kBAAjB,EAAqCd,YAArC;AACH;;AAED;AACA;AACA,QAAIQ,iBAAiBI,OAAOG,qBAAP,CAArB,EAAoD;AAChDC,mBAAWjB,IAAX,EAAiBgB,qBAAjB,EAAwCf,YAAxC;AACH;;AAED,QAAI,CAACG,MAAL,EAAa;AACT;AACA,YAAIS,OAAOR,MAAP,CAAJ,EAAoB;AAChBY,uBAAWjB,IAAX,EAAiBK,MAAjB,EAAyBJ,YAAzB;AACH;;AAED;AACA,YAAIM,WAAJ,EAAiB;AACb,gBAAIM,OAAOK,GAAX,EAAgB;AACZD,2BAAWjB,IAAX,EAAiB,KAAjB,EAAwBC,YAAxB;AACH;;AAED,gBAAIY,OAAOM,MAAX,EAAmB;AACf,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIb,WAApB,EAAiCa,GAAjC,EAAsC;AAClCH,+BAAWjB,IAAX,EAAiB,QAAjB,EAA2B;AACvBA,kCADuB;AAEvBqB,mCAAWnB,MAAMkB,CAAN;AAFY,qBAA3B;AAIH;AACJ;AACJ;;AAED;AACA,YAAIX,aAAJ,EAAmB;AACf,gBAAII,OAAOS,MAAX,EAAmB;AACfL,2BAAWjB,IAAX,EAAiB,QAAjB,EAA2BC,YAA3B;AACH;;AAED,gBAAIY,OAAOU,SAAX,EAAsB;AAClB,qBAAK,IAAIH,KAAI,CAAb,EAAgBA,KAAIX,aAApB,EAAmCW,IAAnC,EAAwC;AACpCH,+BAAWjB,IAAX,EAAiB,WAAjB,EAA8B;AAC1BA,kCAD0B;AAE1BwB,qCAAarB,QAAQiB,EAAR;AAFa,qBAA9B;AAIH;AACJ;AACJ;;AAED;AACA,YAAIP,OAAOY,MAAX,EAAmB;AACfR,uBAAWjB,IAAX,EAAiB,QAAjB,EAA2BC,YAA3B;AACH;AACJ;;AAED;AACA,QAAIS,YAAY,CAACJ,UAAb,IAA2BQ,gBAA/B,EAAiD;AAC7CY,yBAAiB;AACb1B,sBADa;AAEbC;AAFa,SAAjB;AAIH;AACJ","file":"_reportmodified.js","sourcesContent":["import defs from '../_core/defs';\nimport triggerOne from '../trigger/_triggerone';\nimport processRendering from './_processrendering';\n\n// fires events and triggers rendering logic\nexport default function reportModified(self, eventOptions) {\n    const {\n        added,\n        removed,\n        silent,\n        method,\n        dontRender\n    } = eventOptions;\n    const addedLength = added.length;\n    const removedLength = removed.length;\n    const modified = addedLength || removedLength || method === 'sort' || method === 'reverse';\n    const { events } = defs.get(self);\n    const { renderIfPossible = true } = self;\n    const asteriskAddEvtName = '_asterisk:add';\n    const asteriskRemoveEvtName = '_asterisk:remove';\n\n    // if something is added and an array has delegated \"asterisk\" events\n    // then attatch delegated event handlers to newly added items\n    if (addedLength && events[asteriskAddEvtName]) {\n        triggerOne(self, asteriskAddEvtName, eventOptions);\n    }\n\n    // if something is removed and an array has delegated \"asterisk\" events\n    // then remove delegated event handlers from removed items\n    if (removedLength && events[asteriskRemoveEvtName]) {\n        triggerOne(self, asteriskRemoveEvtName, eventOptions);\n    }\n\n    if (!silent) {\n        // fire additional event name (like \"push\")\n        if (events[method]) {\n            triggerOne(self, method, eventOptions);\n        }\n\n        // if something is added then fire add and addone events\n        if (addedLength) {\n            if (events.add) {\n                triggerOne(self, 'add', eventOptions);\n            }\n\n            if (events.addone) {\n                for (let i = 0; i < addedLength; i++) {\n                    triggerOne(self, 'addone', {\n                        self,\n                        addedItem: added[i]\n                    });\n                }\n            }\n        }\n\n        // if something is removed then fire add and addone events\n        if (removedLength) {\n            if (events.remove) {\n                triggerOne(self, 'remove', eventOptions);\n            }\n\n            if (events.removeone) {\n                for (let i = 0; i < removedLength; i++) {\n                    triggerOne(self, 'removeone', {\n                        self,\n                        removedItem: removed[i]\n                    });\n                }\n            }\n        }\n\n        // modify event says that something is added or removed\n        if (events.modify) {\n            triggerOne(self, 'modify', eventOptions);\n        }\n    }\n\n    // trigger rendering logic if possible\n    if (modified && !dontRender && renderIfPossible) {\n        processRendering({\n            self,\n            eventOptions\n        });\n    }\n}\n"]}