{"version":3,"sources":["../../src/array/from.js"],"names":["from","arrayLike","mapFn","thisArg","ParentClass","require","result","length","arrayFrom","Array","newItems","i","call","cheapRecreate"],"mappings":";;4BAA0B,kB;;AAE1B;iBACwBA,I;AAAT,SAASA,IAAT,CAAcC,SAAd,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;AACpD;AACA;AACA,QAAMC,cAAc,OAAO,IAAP,KAAgB,UAAhB,GAA6B,IAA7B,GAAoCC,QAAQ,IAAR,CAAxD;;AAEA,QAAMC,SAAS,IAAIF,WAAJ,EAAf;AACA,QAAMG,SAASN,UAAUM,MAAzB;AACA,QAAMC,YAAYC,MAAMT,IAAxB;AACA,QAAIU,iBAAJ;;AAEA;AACA,QAAI,OAAOF,SAAP,KAAqB,UAAzB,EAAqC;AACjC;AACAE,mBAAWF,UAAUP,SAAV,EAAqBC,KAArB,EAA4BC,OAA5B,CAAX;AACH,KAHD,MAGO;AACH;AACA;AACAO,mBAAWD,MAAMF,MAAN,CAAX;;AAEA,aAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIJ,MAApB,EAA4BI,GAA5B,EAAiC;AAC7B,gBAAI,OAAOT,KAAP,KAAiB,UAArB,EAAiC;AAC7BQ,yBAASC,CAAT,IAAcT,MAAMU,IAAN,CAAWT,OAAX,EAAoBF,UAAUU,CAAV,CAApB,EAAkCA,CAAlC,EAAqCV,SAArC,CAAd;AACH,aAFD,MAEO;AACHS,yBAASC,CAAT,IAAcV,UAAUU,CAAV,CAAd;AACH;AACJ;AACJ;;AAED,WAAOE,cAAcP,MAAd,EAAsBI,QAAtB,CAAP;AACH","file":"from.js","sourcesContent":["import cheapRecreate from './_cheaprecreate';\n\n// creates a new Matreshka.Array instance from an array-like or iterable object\nexport default function from(arrayLike, mapFn, thisArg) {\n    // allow to inherit this method by child classes\n    // require('./') fixes circular ref issue\n    const ParentClass = typeof this === 'function' ? this : require('./');\n\n    const result = new ParentClass();\n    const length = arrayLike.length;\n    const arrayFrom = Array.from;\n    let newItems;\n\n    /* istanbul ignore else */\n    if (typeof arrayFrom === 'function') {\n        // if Array.from exist, let it do all the job (work with iterable objects etc)\n        newItems = arrayFrom(arrayLike, mapFn, thisArg);\n    } else {\n        // convert array-like object for older browsers\n        // @IE\n        newItems = Array(length);\n\n        for (let i = 0; i < length; i++) {\n            if (typeof mapFn === 'function') {\n                newItems[i] = mapFn.call(thisArg, arrayLike[i], i, arrayLike);\n            } else {\n                newItems[i] = arrayLike[i];\n            }\n        }\n    }\n\n    return cheapRecreate(result, newItems);\n}\n"]}