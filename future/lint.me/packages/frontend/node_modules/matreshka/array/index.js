'use strict';

var Class = require('../class');

var Matreshka = require('../matreshka');

var instanceMembers = require('./_prototype');

var matreshkaError = require('../_helpers/matreshkaerror');

var initMK = require('../_core/init');

var staticMembers = require('./_staticmembers');

instanceMembers.extends = Matreshka;

instanceMembers.constructor = function MatreshkaArray(length) {
    if (!(this instanceof MatreshkaArray)) {
        throw matreshkaError('common:call_class');
    }

    initMK(this);

    // repeat the same logic as for native Array
    if (arguments.length === 1 && typeof length === 'number') {
        this.length = length;
    } else if (arguments.length) {
        this.recreate(arguments, {
            silent: true,
            dontRender: true
        });
    }

    // return is used to make possible to chain super() calls
    return this;
};

var MatreshkaArray = Class(instanceMembers, staticMembers);

module.exports = MatreshkaArray;
//# sourceMappingURL=index.js.map