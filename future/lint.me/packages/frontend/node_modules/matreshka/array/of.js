'use strict';

var cheapRecreate = require('./_cheaprecreate');

// creates a new Matreshka.Array instance with a variable number of arguments,
// regardless of number or type of the arguments
module.exports = of;
function of() {
    var _arguments = arguments;

    // allow to inherit this method by child classes
    // require('./') fixes circular ref issue
    var ParentClass = typeof this === 'function' ? this : require('./');

    var result = new ParentClass();
    var newItems = Array(arguments.length);

    for (var _target = arguments, index = 0, item, _l = _target.length; item = _target[index], index < _l; index++) {
        newItems[index] = _arguments[index];
    }

    return cheapRecreate(result, newItems);
}
//# sourceMappingURL=of.js.map