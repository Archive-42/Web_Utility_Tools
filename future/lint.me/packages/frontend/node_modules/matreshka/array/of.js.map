{"version":3,"sources":["../../src/array/of.js"],"names":["of","ParentClass","require","result","newItems","Array","arguments","length","index","item","cheapRecreate"],"mappings":";;4BAA0B,kB;;AAE1B;AACA;iBACwBA,E;AAAT,SAASA,EAAT,GAAc;AAAA;;AACzB;AACA;AACA,QAAMC,cAAc,OAAO,IAAP,KAAgB,UAAhB,GAA6B,IAA7B,GAAoCC,QAAQ,IAAR,CAAxD;;AAEA,QAAMC,SAAS,IAAIF,WAAJ,EAAf;AACA,QAAMG,WAAWC,MAAMC,UAAUC,MAAhB,CAAjB;;AANyB,uBAQZD,SARY,EAQME,KARN,MAQAC,IARA,uBAQAA,IARA,WAQMD,KARN,GAQMA,KARN,OAQMA,KARN,IAQgB;AACrCJ,iBAASI,KAAT,IAAkB,WAAUA,KAAV,CAAlB;AACH;;AAED,WAAOE,cAAcP,MAAd,EAAsBC,QAAtB,CAAP;AACH","file":"of.js","sourcesContent":["import cheapRecreate from './_cheaprecreate';\n\n// creates a new Matreshka.Array instance with a variable number of arguments,\n// regardless of number or type of the arguments\nexport default function of() {\n    // allow to inherit this method by child classes\n    // require('./') fixes circular ref issue\n    const ParentClass = typeof this === 'function' ? this : require('./');\n\n    const result = new ParentClass();\n    const newItems = Array(arguments.length);\n\n    nofn.forEach(arguments, (item, index) => {\n        newItems[index] = arguments[index];\n    });\n\n    return cheapRecreate(result, newItems);\n}\n"]}