{"version":3,"sources":["../../src/array/pull.js"],"names":["shift","arr","index","i","length","pullByValue","value","undefined","pullByIndex","pull","toRemove","eventOptions","typeofToRemove","removed","matreshkaError","method","self","added","reportModified"],"mappings":";;6BAA2B,mB;;6BACA,4B;;AAE3B;AACA,SAASA,KAAT,CAAeC,GAAf,EAAoBC,KAApB,EAA2B;AACvB,SAAK,IAAIC,IAAID,KAAb,EAAoBC,IAAIF,IAAIG,MAA5B,EAAoCD,GAApC,EAAyC;AACrCF,YAAIE,CAAJ,IAASF,IAAIE,IAAI,CAAR,CAAT;AACH;AACD,WAAOF,IAAIA,IAAIG,MAAJ,GAAa,CAAjB,CAAP;AACAH,QAAIG,MAAJ,IAAc,CAAd;AACH;;AAED;AACA;AACA,SAASC,WAAT,CAAqBJ,GAArB,EAA0BK,KAA1B,EAAiC;AAC7B,SAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAIF,IAAIG,MAAxB,EAAgCD,GAAhC,EAAqC;AACjC,YAAIF,IAAIE,CAAJ,MAAWG,KAAf,EAAsB;AAClBN,kBAAMC,GAAN,EAAWE,CAAX;AACA,mBAAOG,KAAP;AACH;AACJ;;AAED,WAAOC,SAAP;AACH;;AAED;AACA;AACA,SAASC,WAAT,CAAqBP,GAArB,EAA0BC,KAA1B,EAAiC;AAC7B,QAAIA,QAAQD,IAAIG,MAAhB,EAAwB;AACpB,YAAME,QAAQL,IAAIC,KAAJ,CAAd;AACAF,cAAMC,GAAN,EAAWC,KAAX;AACA,eAAOI,KAAP;AACH;;AAED,WAAOC,SAAP;AACH;;AAED;iBACwBE,I;AAAT,SAASA,IAAT,CAAcC,QAAd,EAA2C;AAAA,QAAnBC,YAAmB,uEAAJ,EAAI;;AACtD,QAAMC,iBAAiB,OAAOF,QAA9B;AACA,QAAIG,gBAAJ;;AAEA,QAAIH,YAAYE,mBAAmB,QAAnC,EAA6C;AACzCC,kBAAUR,YAAY,IAAZ,EAAkBK,QAAlB,CAAV;AACH,KAFD,MAEO,IAAIE,mBAAmB,QAAvB,EAAiC;AACpCC,kBAAUL,YAAY,IAAZ,EAAkBE,QAAlB,CAAV;AACH,KAFM,MAEA;AACH,cAAMI,eAAe,qBAAf,EAAsC,EAAEJ,kBAAF,EAAtC,CAAN;AACH;;AAED,QAAI,OAAOG,OAAP,KAAmB,WAAvB,EAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAE5BE,MAF4B,GAEpB;AAFoB,gBAG5BC,IAH4B,GAGtB;AAHsB,gBAI5BC,KAJ4B,GAIrB;AAJqB,gBAK5BJ,OAL4B,GAKnB,CAACA,OAAD;;AALmB,uBAMzBF,YANyB;AAAA;AAAA;AAAA;;AAChCO,uBAAe,IAAf;AAOH;;AAED,WAAOL,OAAP;AACH","file":"pull.js","sourcesContent":["import reportModified from './_reportmodified';\nimport matreshkaError from '../_helpers/matreshkaerror';\n\n// removes array item by given index\nfunction shift(arr, index) {\n    for (let i = index; i < arr.length; i++) {\n        arr[i] = arr[i + 1];\n    }\n    delete arr[arr.length - 1];\n    arr.length -= 1;\n}\n\n// finds array item that equals to given value and removes it\n// returns removed value\nfunction pullByValue(arr, value) {\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === value) {\n            shift(arr, i);\n            return value;\n        }\n    }\n\n    return undefined;\n}\n\n// removes array item by given index if the index is not over array length\n// returns removed value\nfunction pullByIndex(arr, index) {\n    if (index < arr.length) {\n        const value = arr[index];\n        shift(arr, index);\n        return value;\n    }\n\n    return undefined;\n}\n\n// removes an array item by index (if number is given) or by value (if object is given)\nexport default function pull(toRemove, eventOptions = {}) {\n    const typeofToRemove = typeof toRemove;\n    let removed;\n\n    if (toRemove && typeofToRemove === 'object') {\n        removed = pullByValue(this, toRemove);\n    } else if (typeofToRemove === 'number') {\n        removed = pullByIndex(this, toRemove);\n    } else {\n        throw matreshkaError('pull:to_remove_type', { toRemove });\n    }\n\n    if (typeof removed !== 'undefined') {\n        reportModified(this, {\n            method: 'pull',\n            self: this,\n            added: [],\n            removed: [removed],\n            ...eventOptions\n        });\n    }\n\n    return removed;\n}\n"]}