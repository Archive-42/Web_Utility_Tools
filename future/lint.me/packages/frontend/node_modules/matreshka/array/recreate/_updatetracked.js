'use strict';

var updateObject = require('./_updateobject');

// the function gets called to update new items passed to recreate method when trackBy is present
// TODO: Throw an error when two or more items of one array has the same value of trackBy
module.exports = updateTracked;
function updateTracked(_ref) {
    var givenNewItems = _ref.givenNewItems,
        arr = _ref.arr,
        trackBy = _ref.trackBy;

    var newLength = givenNewItems.length;
    var oldLength = arr.length;
    var newItems = Array(newLength);

    if (trackBy === '$index') {
        // simply update items with the same index
        for (var i = 0; i < newLength; i++) {
            var item = arr[i];
            var newItem = givenNewItems[i];

            if (item && typeof item === 'object' && newItem && typeof newItem === 'object') {
                newItems[i] = updateObject(item, newItem);
            } else {
                newItems[i] = newItem;
            }
        }
    } else {
        var trackMap = {};

        // fill trackMap object where keys are values of trackBy and values are corresponding items
        for (var _i = 0; _i < oldLength; _i++) {
            var _item = arr[_i];

            if (_item && typeof _item === 'object') {
                if (trackBy in _item) {
                    trackMap[_item[trackBy]] = _item;
                }
            }
        }

        for (var _i2 = 0; _i2 < newLength; _i2++) {
            var _newItem = givenNewItems[_i2];

            if (_newItem && typeof _newItem === 'object') {
                var _item2 = arr[_i2];

                if (_item2 && typeof _item2 === 'object' && _newItem[trackBy] in trackMap) {
                    // if an item exists at trackMap then update it
                    newItems[_i2] = updateObject(trackMap[_newItem[trackBy]], _newItem);
                } else {
                    // if not then use new value as is
                    newItems[_i2] = _newItem;
                }
            } else {
                // newItem is not an object
                newItems[_i2] = _newItem;
            }
        }
    }

    return newItems;
}
//# sourceMappingURL=_updatetracked.js.map