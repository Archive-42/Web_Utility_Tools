{"version":3,"sources":["../../src/binders/_classlist.js"],"names":["add","remove","contains","window","document","createElement","classList","node","name","re","RegExp","test","className","replace","toggle","switcher"],"mappings":";;AAAA;;AAEA,IAAIA,YAAJ;AACA,IAAIC,eAAJ;AACA,IAAIC,iBAAJ,C,CAAc;;AAEd;AACA,IAAIC,OAAOC,QAAP,CAAgBC,aAAhB,CAA8B,KAA9B,EAAqCC,SAAzC,EAAoD;AAChDN,UAAM,UAACO,IAAD,EAAOC,IAAP;AAAA,eAAgBD,KAAKD,SAAL,CAAeN,GAAf,CAAmBQ,IAAnB,CAAhB;AAAA,KAAN;AACAP,aAAS,UAACM,IAAD,EAAOC,IAAP;AAAA,eAAgBD,KAAKD,SAAL,CAAeL,MAAf,CAAsBO,IAAtB,CAAhB;AAAA,KAAT;AACAN,eAAW,UAACK,IAAD,EAAOC,IAAP;AAAA,eAAgBD,KAAKD,SAAL,CAAeJ,QAAf,CAAwBM,IAAxB,CAAhB;AAAA,KAAX;AACH,CAJD,MAIO;AACHR,UAAM,UAACO,IAAD,EAAOC,IAAP,EAAgB;AAClB,YAAMC,KAAK,IAAIC,MAAJ,aAAqBF,IAArB,cAAoC,GAApC,CAAX;AACA,YAAI,CAACC,GAAGE,IAAH,CAAQJ,KAAKK,SAAb,CAAL,EAA8B;AAC1BL,iBAAKK,SAAL,GAAiB,CAAGL,KAAKK,SAAR,SAAqBJ,IAArB,EACZK,OADY,CACJ,MADI,EACI,GADJ,EAEZA,OAFY,CAEJ,UAFI,EAEQ,EAFR,CAAjB;AAGH;AACJ,KAPD;;AASAZ,aAAS,UAACM,IAAD,EAAOC,IAAP,EAAgB;AACrB,YAAMC,KAAK,IAAIC,MAAJ,aAAqBF,IAArB,cAAoC,GAApC,CAAX;AACAD,aAAKK,SAAL,GAAiBL,KAAKK,SAAL,CACZC,OADY,CACJJ,EADI,EACA,IADA,EAEZI,OAFY,CAEJ,MAFI,EAEI,GAFJ,EAGZA,OAHY,CAGJ,UAHI,EAGQ,EAHR,CAAjB;AAIH,KAND;;AAQAX,eAAW,UAACK,IAAD,EAAOC,IAAP;AAAA,eAAgB,IAAIE,MAAJ,aAAqBF,IAArB,cAAoCG,IAApC,CAAyCJ,KAAKK,SAA9C,CAAhB;AAAA,KAAX;AACH;;AAED,IAAME,SAAS,UAACP,IAAD,EAAOC,IAAP,EAAaO,QAAb,EAA0B;AACrC,QAAIA,QAAJ,EAAc;AACVf,YAAIO,IAAJ,EAAUC,IAAV;AACH,KAFD,MAEO;AACHP,eAAOM,IAAP,EAAaC,IAAb;AACH;AACJ,CAND;;QASIM,M,GAAAA,M;QACAZ,Q,GAAAA,Q","file":"_classlist.js","sourcesContent":["// @IE9\n\nlet add;\nlet remove;\nlet contains; // eslint-disable-line import/no-mutable-exports\n\n/* istanbul ignore else */\nif (window.document.createElement('div').classList) {\n    add = (node, name) => node.classList.add(name);\n    remove = (node, name) => node.classList.remove(name);\n    contains = (node, name) => node.classList.contains(name);\n} else {\n    add = (node, name) => {\n        const re = new RegExp(`(^|\\\\s)${name}(\\\\s|$)`, 'g');\n        if (!re.test(node.className)) {\n            node.className = `${node.className} ${name}`\n                .replace(/\\s+/g, ' ')\n                .replace(/(^ | $)/g, '');\n        }\n    };\n\n    remove = (node, name) => {\n        const re = new RegExp(`(^|\\\\s)${name}(\\\\s|$)`, 'g');\n        node.className = node.className\n            .replace(re, '$1')\n            .replace(/\\s+/g, ' ')\n            .replace(/(^ | $)/g, '');\n    };\n\n    contains = (node, name) => new RegExp(`(\\\\s|^)${name}(\\\\s|$)`).test(node.className);\n}\n\nconst toggle = (node, name, switcher) => {\n    if (switcher) {\n        add(node, name);\n    } else {\n        remove(node, name);\n    }\n};\n\nexport {\n    toggle,\n    contains\n};\n"]}