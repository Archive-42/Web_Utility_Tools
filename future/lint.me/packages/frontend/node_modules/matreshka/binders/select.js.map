{"version":3,"sources":["../../src/binders/select.js"],"names":["select","multiple","on","getValue","options","result","i","length","selected","push","value","setValue","givenValue","indexOf"],"mappings":";;AAAA;iBACwBA,M;AAAT,SAASA,MAAT,CAAgBC,QAAhB,EAA0B;AACrC,QAAIA,QAAJ,EAAc;AACV,eAAO;AACHC,gBAAI,QADD;AAEHC,oBAFG,cAEQ;AAAA,oBACCC,OADD,GACa,IADb,CACCA,OADD;;AAEP,oBAAMC,SAAS,EAAf;;AAEA,qBAAK,IAAIC,IAAI,CAAb,EAAgBF,QAAQG,MAAR,GAAiBD,CAAjC,EAAoCA,GAApC,EAAyC;AACrC,wBAAIF,QAAQE,CAAR,EAAWE,QAAf,EAAyB;AACrBH,+BAAOI,IAAP,CAAYL,QAAQE,CAAR,EAAWI,KAAvB;AACH;AACJ;;AAED,uBAAOL,MAAP;AACH,aAbE;AAcHM,oBAdG,YAcMC,UAdN,EAckB;AAAA,oBACTR,OADS,GACG,IADH,CACTA,OADS;;AAEjB,oBAAMM,QAAQ,OAAOE,UAAP,KAAsB,QAAtB,GAAiC,CAACA,UAAD,CAAjC,GAAgDA,UAA9D;AACA,qBAAK,IAAIN,IAAIF,QAAQG,MAAR,GAAiB,CAA9B,EAAiCD,KAAK,CAAtC,EAAyCA,GAAzC,EAA8C;AAC1CF,4BAAQE,CAAR,EAAWE,QAAX,GAAsB,CAACE,MAAMG,OAAN,CAAcT,QAAQE,CAAR,EAAWI,KAAzB,CAAvB;AACH;AACJ;AApBE,SAAP;AAsBH;;AAED,WAAO;AACHR,YAAI,QADD;AAEHC,gBAFG,cAEQ;AACP,mBAAO,KAAKO,KAAZ;AACH,SAJE;AAKHC,gBALG,YAKMD,KALN,EAKa;AACZ,iBAAKA,KAAL,GAAaA,KAAb;;AAEA,gBAAI,CAACA,KAAL,EAAY;AAAA,oBACAN,OADA,GACY,IADZ,CACAA,OADA;;AAER,qBAAK,IAAIE,IAAIF,QAAQG,MAAR,GAAiB,CAA9B,EAAiCD,KAAK,CAAtC,EAAyCA,GAAzC,EAA8C;AAC1C,wBAAI,CAACF,QAAQE,CAAR,EAAWI,KAAhB,EAAuB;AACnBN,gCAAQE,CAAR,EAAWE,QAAX,GAAsB,IAAtB;AACA;AACH;AACJ;AACJ;AACJ;AAjBE,KAAP;AAmBH","file":"select.js","sourcesContent":["// returns a binder for select element\nexport default function select(multiple) {\n    if (multiple) {\n        return {\n            on: 'change',\n            getValue() {\n                const { options } = this;\n                const result = [];\n\n                for (let i = 0; options.length > i; i++) {\n                    if (options[i].selected) {\n                        result.push(options[i].value);\n                    }\n                }\n\n                return result;\n            },\n            setValue(givenValue) {\n                const { options } = this;\n                const value = typeof givenValue === 'string' ? [givenValue] : givenValue;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    options[i].selected = ~value.indexOf(options[i].value);\n                }\n            }\n        };\n    }\n\n    return {\n        on: 'change',\n        getValue() {\n            return this.value;\n        },\n        setValue(value) {\n            this.value = value;\n\n            if (!value) {\n                const { options } = this;\n                for (let i = options.length - 1; i >= 0; i--) {\n                    if (!options[i].value) {\n                        options[i].selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n    };\n}\n"]}