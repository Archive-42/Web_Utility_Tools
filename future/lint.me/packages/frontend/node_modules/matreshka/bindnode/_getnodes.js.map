{"version":3,"sources":["../../src/bindnode/_getnodes.js"],"names":["htmlReg","customSelectorReg","getNodes","object","selector","nodes","test","selectNodes","dom","$"],"mappings":";;0BAAwB,gB;;kBACR,S;;AAEhB,IAAMA,UAAU,GAAhB;AACA,IAAMC,oBAAoB,4BAA1B;;AAEA;AACA;AACA;iBACwBC,Q;AAAT,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,QAA1B,EAAoC;AAC/C,QAAIC,cAAJ;;AAEA,QACI,OAAOD,QAAP,KAAoB,QAApB,IACG,CAACJ,QAAQM,IAAR,CAAaF,QAAb,CADJ,IAEGH,kBAAkBK,IAAlB,CAAuBF,QAAvB,CAHP,EAIE;AACEC,gBAAQE,YAAYJ,MAAZ,EAAoBC,QAApB,CAAR;AACH,KAND,MAMO;AACHC,gBAAQG,IAAIC,CAAJ,CAAML,QAAN,CAAR;AACH;;AAED,WAAOC,KAAP;AACH","file":"_getnodes.js","sourcesContent":["import selectNodes from './_selectnodes';\nimport dom from '../_dom';\n\nconst htmlReg = /</;\nconst customSelectorReg = /:sandbox|:bound\\(([^(]*)\\)/;\n\n// the function works just like DOM library accepting any kind of arg\n// (HTML string, Node, NodeList etc) bu allows to pass custom selector\n// eg :bound(KEY) and :sandbox\nexport default function getNodes(object, selector) {\n    let nodes;\n\n    if (\n        typeof selector === 'string'\n        && !htmlReg.test(selector)\n        && customSelectorReg.test(selector)\n    ) {\n        nodes = selectNodes(object, selector);\n    } else {\n        nodes = dom.$(selector);\n    }\n\n    return nodes;\n}\n"]}