{"version":3,"sources":["../../src/calc/_addsource.js"],"names":["addSource","calcHandler","allSources","sourceKey","sourceObject","eventOptions","exactKey","isDelegated","matreshkaError","deepPath","split","length","addTreeListener","addListener","push"],"mappings":";;0BAAwB,oB;;8BACI,wB;;6BACD,4B;;AAE3B;iBACwBA,S;AAAT,SAASA,SAAT,OAMZ;AAAA,QALCC,WAKD,QALCA,WAKD;AAAA,QAJCC,UAID,QAJCA,UAID;AAAA,QAHCC,SAGD,QAHCA,SAGD;AAAA,QAFCC,YAED,QAFCA,YAED;AAAA,QADCC,YACD,QADCA,YACD;AAAA,gCAC4BA,YAD5B,CACOC,QADP;AAAA,QACOA,QADP,yCACkB,KADlB;;AAEC,QAAIC,cAAc,KAAlB;;AAEA;AACA,QAAI,OAAOJ,SAAP,KAAqB,QAAzB,EAAmC;AAC/B,cAAMK,eAAe,sBAAf,EAAuC,EAAEL,oBAAF,EAAvC,CAAN;AACH;;AAED;AACA,QAAI,CAACC,YAAD,IAAiB,OAAOA,YAAP,KAAwB,QAA7C,EAAuD;AACnD,cAAMI,eAAe,yBAAf,EAA0C,EAAEJ,0BAAF,EAA1C,CAAN;AACH;;AAED,QAAI,CAACE,QAAL,EAAe;AACX,YAAMG,WAAWN,UAAUO,KAAV,CAAgB,GAAhB,CAAjB;;AAEA;AACA,YAAID,SAASE,MAAT,GAAkB,CAAtB,EAAyB;AACrBJ,0BAAc,IAAd;AACA;AACA;AACAK,4BAAgBR,YAAhB,EAA8BK,QAA9B,EAAwCR,WAAxC;AACH,SALD,MAKO;AACHK,uBAAW,IAAX;AACH;AACJ;;AAGD,QAAIA,QAAJ,EAAc;AACV;AACAO,oBAAYT,YAAZ,oBAA0CD,SAA1C,EAAuDF,WAAvD;AACH;;AAEDC,eAAWY,IAAX,CAAgB;AACZX,4BADY;AAEZC,kCAFY;AAGZG;AAHY,KAAhB;AAKH","file":"_addsource.js","sourcesContent":["import addListener from '../on/_addlistener';\nimport addTreeListener from '../on/_addtreelistener';\nimport matreshkaError from '../_helpers/matreshkaerror';\n\n// adds a source to a source list and adds needed event listener to a it\nexport default function addSource({\n    calcHandler,\n    allSources,\n    sourceKey,\n    sourceObject,\n    eventOptions\n}) {\n    let { exactKey = false } = eventOptions;\n    let isDelegated = false;\n\n    // source key must be a string\n    if (typeof sourceKey !== 'string') {\n        throw matreshkaError('calc:source_key_type', { sourceKey });\n    }\n\n    // source object must be an object\n    if (!sourceObject || typeof sourceObject !== 'object') {\n        throw matreshkaError('calc:source_object_type', { sourceObject });\n    }\n\n    if (!exactKey) {\n        const deepPath = sourceKey.split('.');\n\n        // if something like a.b.c is used as a key\n        if (deepPath.length > 1) {\n            isDelegated = true;\n            // TODO: Avoid collisions with bindings by using another event name\n            // ... instead of _change:tree:xxx\n            addTreeListener(sourceObject, deepPath, calcHandler);\n        } else {\n            exactKey = true;\n        }\n    }\n\n\n    if (exactKey) {\n        // normal handler\n        addListener(sourceObject, `_change:deps:${sourceKey}`, calcHandler);\n    }\n\n    allSources.push({\n        sourceKey,\n        sourceObject,\n        isDelegated\n    });\n}\n"]}