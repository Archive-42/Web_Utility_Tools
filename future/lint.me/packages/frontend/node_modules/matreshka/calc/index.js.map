{"version":3,"sources":["../../src/calc/index.js"],"names":["calc","object","target","sources","givenHandler","eventOptions","isMatreshka","checkObjectType","Object","itemTarget","itemSource","source","itemHandler","handler","itemEventOptions","event","commonEventOptions","mergedEventOptions","matreshkaError","def","initMK","setOnInit","debounceCalcOnInit","debounceCalc","debounceCalcDelay","isTargetPropertyHidden","defaultHandler","value","allSources","syncCalcHandler","createCalcHandler","debouncedCalcHandler","calcHandler","debounce","defineProp","Array","addSource","sourceKey","sourceObject","key","sourceKeyItem"],"mappings":"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","file":"index.js","sourcesContent":["import initMK from '../_core/init';\nimport checkObjectType from '../_helpers/checkobjecttype';\nimport matreshkaError from '../_helpers/matreshkaerror';\nimport debounce from '../_helpers/debounce';\nimport addSource from './_addsource';\nimport createCalcHandler from './_createcalchandler';\nimport defineProp from '../_core/defineprop';\n\n// defines a property which is dependend on other properties\nexport default function calc(object, target, sources, givenHandler, eventOptions) {\n    if (typeof this === 'object' && this.isMatreshka) {\n        // when context is Matreshka instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        eventOptions = givenHandler;\n        givenHandler = sources;\n        sources = target;\n        target = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'calc');\n    }\n\n    if (target instanceof Object) {\n        /*\n         * accept an object\n         * this.calc({target: { source, handler, event } }, commonEventOptions);\n         */\n        nofn.forOwn(target, ({\n            source: itemSource,\n            handler: itemHandler,\n            event: itemEventOptions\n        }, itemTarget) => {\n            const commonEventOptions = sources;\n            const mergedEventOptions = {};\n\n            if (commonEventOptions) {\n                // extend event object by \"global\" event\n                nofn.assign(mergedEventOptions, commonEventOptions);\n            }\n\n            if (itemEventOptions) {\n                // extend event object by \"local\" event (\"event\" key of an object)\n                nofn.assign(mergedEventOptions, itemEventOptions);\n            }\n\n            calc(object, itemTarget, itemSource, itemHandler, mergedEventOptions);\n        });\n\n        return object;\n    }\n\n    if (typeof target !== 'string') {\n        throw matreshkaError('calc:target_type', { target });\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n    const def = initMK(object);\n    const {\n        setOnInit = true,\n        debounceCalcOnInit = false,\n        debounceCalc = true,\n        debounceCalcDelay = 0,\n        // the next option is used to hide a property for internal use (eg in bindings parser)\n        // hidden property means no accessors\n        isTargetPropertyHidden = false\n    } = eventOptions;\n    const defaultHandler = value => value;\n    const handler = givenHandler || defaultHandler;\n    const allSources = [];\n    const syncCalcHandler = createCalcHandler({\n        object,\n        eventOptions,\n        allSources,\n        target,\n        def,\n        handler\n    });\n\n    let debouncedCalcHandler;\n    let calcHandler;\n\n    if (debounceCalcOnInit || debounceCalc) {\n        debouncedCalcHandler = debounce(syncCalcHandler, debounceCalcDelay);\n    }\n\n    defineProp(object, target, isTargetPropertyHidden);\n\n    if (!(sources instanceof Array)) {\n        sources = [sources]; // eslint-disable-line no-param-reassign\n    }\n\n    if (debounceCalc) {\n        calcHandler = debouncedCalcHandler;\n    } else {\n        calcHandler = syncCalcHandler;\n    }\n\n    nofn.forEach(sources, (source) => {\n        if (typeof source === 'string') {\n            // source object is current object\n            addSource({\n                calcHandler,\n                allSources,\n                sourceKey: source,\n                sourceObject: object,\n                eventOptions\n            });\n        } else {\n            // source object is external object\n            if (!source || typeof source !== 'object') {\n                throw matreshkaError('calc:source_type', { source });\n            }\n\n            const sourceKey = source.key;\n            const sourceObject = source.object;\n            if (sourceKey instanceof Array) {\n                // many keys are passed\n                nofn.forEach(sourceKey, (sourceKeyItem) => {\n                    addSource({\n                        calcHandler,\n                        allSources,\n                        sourceKey: sourceKeyItem,\n                        sourceObject,\n                        eventOptions\n                    });\n                });\n            } else {\n                // one key is passed\n                addSource({\n                    calcHandler,\n                    allSources,\n                    sourceKey,\n                    sourceObject,\n                    eventOptions\n                });\n            }\n        }\n    });\n\n    if (setOnInit) {\n        if (debounceCalcOnInit) {\n            debouncedCalcHandler();\n        } else {\n            syncCalcHandler();\n        }\n    }\n\n    return object;\n}\n"]}