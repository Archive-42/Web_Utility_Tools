'use strict';

var initMK = require('../_core/init');

var defineProp = require('../_core/defineprop');

var matreshkaError = require('../_helpers/matreshkaerror');

var triggerOne = require('../trigger/_triggerone');

// adds keys to a list of data keys
module.exports = addDataKeys;
function addDataKeys(givenKeys) {
    var _this = this;

    var _initMK = initMK(this),
        keys = _initMK.keys;

    var newKeys = void 0;

    // accept an array keys or a list of args
    if (givenKeys instanceof Array) {
        newKeys = givenKeys;
    } else {
        newKeys = arguments;
    }

    for (var _target = newKeys, _index = 0, key, _l = _target.length; key = _target[_index], _index < _l; _index++) {
        if (typeof key !== 'string') {
            throw matreshkaError('adddatakeys:key_type', { key: key });
        }

        // if key is not in a list of keys
        if (!(key in keys)) {
            // define descriptors for this property
            var _defineProp = defineProp(_this, key),
                value = _defineProp.value;

            var eventOptions = { key: key, value: value };

            // add a key to the list of keys
            keys[key] = true;

            // trigger events which say that data is changed
            triggerOne(_this, 'set', eventOptions);
            triggerOne(_this, 'modify', eventOptions);
        }
    }

    return this;
}
//# sourceMappingURL=adddatakeys.js.map