'use strict';

var defs = require('../_core/defs');

var triggerOne = require('../trigger/_triggerone');

var matreshkaError = require('../_helpers/matreshkaerror');

// removes given keys from a list of data keys
module.exports = removeDataKeys;
function removeDataKeys(givenKeys) {
    var _this = this;

    var def = defs.get(this);

    /* istanbul ignore if */
    if (!def) {
        return this;
    }

    var keys = def.keys;

    var removedKeys = void 0;

    // accept an array keys or a list of args
    if (givenKeys instanceof Array) {
        removedKeys = givenKeys;
    } else {
        removedKeys = arguments;
    }

    for (var _target = removedKeys, _index = 0, key, _l = _target.length; key = _target[_index], _index < _l; _index++) {
        if (typeof key !== 'string') {
            throw matreshkaError('removedatakeys:key_type', { key: key });
        }

        if (key in keys) {
            var eventOptions = {
                key: key,
                value: _this[key]
            };

            delete keys[key];

            // fire "modify" and "remove" events
            triggerOne(_this, 'modify', eventOptions);
            triggerOne(_this, 'remove', eventOptions);
        }
    }

    return this;
}
//# sourceMappingURL=removedatakeys.js.map