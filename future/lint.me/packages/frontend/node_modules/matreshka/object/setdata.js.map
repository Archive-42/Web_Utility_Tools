{"version":3,"sources":["../../src/object/setdata.js"],"names":["getNotListedKeys","inObject","fromObject","result","key","_","push","setData","value","eventOptions","initMK","keys","replaceData","objKey","objVal","notListedKeys","length","removeDataKeys","defineProp","set"],"mappings":";;qBAAmB,e;;yBACI,qB;;kBACP,Q;;AAEhB;AACA,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,UAApC,EAAgD;AAC5C,QAAMC,SAAS,EAAf;;AAD4C,uBAEhCF,QAFgC,wCAElBG,GAFkB,EAErBC,CAFqB,sBAElBD,GAFkB,cAErBC,CAFqB,WAElBD,GAFkB,mBAEV;AAC9B,YAAI,EAAEA,OAAOF,UAAT,CAAJ,EAA0B;AACtBC,mBAAOG,IAAP,CAAYF,GAAZ;AACH;AACJ;;AAED,WAAOD,MAAP;AACH;;AAED;iBACwBI,O;AAAT,SAASA,OAAT,CAAiBH,GAAjB,EAAsBI,KAAtB,EAA6BC,YAA7B,EAA2C;AAAA;;AACtD;AACA,QAAI,CAACL,GAAL,EAAU;AACN,eAAO,IAAP;AACH;;AAJqD,kBAMrCM,OAAO,IAAP,CANqC;AAAA,QAM9CC,IAN8C,WAM9CA,IAN8C;;AAQtD;;;AACA,QAAI,OAAOP,GAAP,KAAe,QAAnB,EAA6B;AAAA;AACzBK,2BAAeD,SAAS,EAAxB,CADyB,CACG;;AADH,gCAGDC,YAHC;AAAA,gBAGjBG,WAHiB,iBAGjBA,WAHiB;;AAKzB;;AALyB,gCAMbR,GANa,2CAMCS,MAND,EAMPC,MANO,wBAMCD,MAND,gBAMPC,MANO,YAMCD,MAND,sBAMY;AACjC;AACA,oBAAID,WAAJ,EAAiB;AACb,wBAAMG,gBAAgBf,iBAAiBW,IAAjB,EAAuBP,GAAvB,CAAtB;;AAEA,wBAAIW,cAAcC,MAAlB,EAA0B;AACtB,8BAAKC,cAAL,CAAoBF,aAApB;AACH;AACJ;;AAED;AACAG,kCAAiBL,MAAjB;;AAEA;AACAF,qBAAKE,MAAL,IAAe,CAAf;;AAEA;AACAM,2BAAUN,MAAV,EAAkBC,MAAlB,EAA0BL,YAA1B;AACH;;AAED;AAAA;AAAA;AA1ByB;;AAAA;AA2B5B;;AAEDA,mBAAeA,gBAAgB,EAA/B,CAtCsD,CAsCnB;;AAtCmB,yBAwC9BA,YAxC8B;AAAA,QAwC9CG,WAxC8C,kBAwC9CA,WAxC8C;;AA0CtD;;AACA,QAAIA,WAAJ,EAAiB;AAAA;;AACb,YAAMG,gBAAgBf,iBAAiBW,IAAjB,6CAA0BP,GAA1B,IAAgC,IAAhC,qBAAtB;;AAEA,YAAIW,cAAcC,MAAlB,EAA0B;AACtB,iBAAKC,cAAL,CAAoBF,aAApB;AACH;AACJ;;AAED;AACAG,eAAW,IAAX,EAAiBd,GAAjB;;AAEA;AACAO,SAAKP,GAAL,IAAY,CAAZ;;AAEA;AACA,WAAOe,IAAI,IAAJ,EAAUf,GAAV,EAAeI,KAAf,EAAsBC,YAAtB,CAAP;AACH","file":"setdata.js","sourcesContent":["import initMK from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport set from '../set';\n\n// returns an array of keys listed at inObject but not listed at fromObject\nfunction getNotListedKeys(inObject, fromObject) {\n    const result = [];\n    nofn.forOwn(inObject, (_, key) => {\n        if (!(key in fromObject)) {\n            result.push(key);\n        }\n    });\n\n    return result;\n}\n\n// changes property value and adds given key to a list of data keys\nexport default function setData(key, value, eventOptions) {\n    // if no key or falsy key is given\n    if (!key) {\n        return this;\n    }\n\n    const { keys } = initMK(this);\n\n    // allow to pass key-value object\n    if (typeof key === 'object') {\n        eventOptions = value || {}; // eslint-disable-line no-param-reassign\n\n        const { replaceData } = eventOptions;\n\n        // do not call setData recursivally for better performance\n        nofn.forOwn(key, (objVal, objKey) => {\n            // remove data keys not listed at key-value object\n            if (replaceData) {\n                const notListedKeys = getNotListedKeys(keys, key);\n\n                if (notListedKeys.length) {\n                    this.removeDataKeys(notListedKeys);\n                }\n            }\n\n            // define descriptors for given property\n            defineProp(this, objKey);\n\n            // add a key to a list of keys\n            keys[objKey] = 1;\n\n            // do other things with set method\n            set(this, objKey, objVal, eventOptions);\n        });\n\n        return this;\n    }\n\n    eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n\n    const { replaceData } = eventOptions;\n\n    // remove all data keys except given key\n    if (replaceData) {\n        const notListedKeys = getNotListedKeys(keys, { [key]: true });\n\n        if (notListedKeys.length) {\n            this.removeDataKeys(notListedKeys);\n        }\n    }\n\n    // define descriptors for given property\n    defineProp(this, key);\n\n    // add a key to a list of keys\n    keys[key] = 1;\n\n    // do other things with set method\n    return set(this, key, value, eventOptions);\n}\n"]}