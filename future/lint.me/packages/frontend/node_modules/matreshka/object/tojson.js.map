{"version":3,"sources":["../../src/object/tojson.js"],"names":["toJSON","recursive","initMK","keys","result","key","_","value"],"mappings":";;qBAAmB,e;;AAEnB;iBACwBA,M;AAAT,SAASA,MAAT,GAAkC;AAAA;;AAAA,QAAlBC,SAAkB,uEAAN,IAAM;;AAAA,kBAC5BC,OAAO,IAAP,CAD4B;AAAA,QACrCC,IADqC,WACrCA,IADqC;;AAE7C,QAAMC,SAAS,EAAf;;AAF6C,uBAIjCD,IAJiC,wCAIvBE,GAJuB,EAI1BC,CAJ0B,sBAIvBD,GAJuB,cAI1BC,CAJ0B,WAIvBD,GAJuB,mBAIf;AAC1B,YAAME,QAAQ,MAAKF,GAAL,CAAd;AACA;AACA,YAAIJ,aAAaM,KAAb,IAAsB,OAAOA,MAAMP,MAAb,KAAwB,UAAlD,EAA8D;AAC1DI,mBAAOC,GAAP,IAAcE,MAAMP,MAAN,CAAa,IAAb,CAAd;AACH,SAFD,MAEO;AACHI,mBAAOC,GAAP,IAAcE,KAAd;AACH;AACJ;;AAED,WAAOH,MAAP;AACH","file":"tojson.js","sourcesContent":["import initMK from '../_core/init';\n\n// converts Matreshka.Object instance to ordinary object\nexport default function toJSON(recursive = true) {\n    const { keys } = initMK(this);\n    const result = {};\n\n    nofn.forOwn(keys, (_, key) => {\n        const value = this[key];\n        // when recursive is true and when value has toJSON method then call it recusively\n        if (recursive && value && typeof value.toJSON === 'function') {\n            result[key] = value.toJSON(true);\n        } else {\n            result[key] = value;\n        }\n    });\n\n    return result;\n}\n"]}