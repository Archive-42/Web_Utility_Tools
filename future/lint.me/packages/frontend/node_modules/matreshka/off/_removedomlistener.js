'use strict';

var defs = require('../_core/defs');

var removeListener = require('./_removelistener');

var dom = require('../_dom');

// removes dom listener from nodes bound to given key
module.exports = removeDomListener;
function removeDomListener(object, key, eventName, selector, callback, context, info) {
    var def = defs.get(object);

    if (!def) {
        return object;
    }

    var props = def.props;

    var propDef = props[key];

    if (!propDef) {
        return object;
    }

    var bindings = propDef.bindings;


    if (bindings) {
        (function () {
            // collect bound nodes and remove DOM event listener
            var nodes = Array(bindings.length);
            var eventNamespace = def.id + key;

            for (var _target = bindings, index = 0, binding, _l = _target.length; binding = _target[index], index < _l; index++) {
                nodes[index] = binding.node;
            }

            dom.$(nodes).off(eventName + '.' + eventNamespace, selector, callback);
        })();
    }

    // remove bind and unbind listeners from given key
    removeListener(object, 'bind:' + key, callback, context, info);
    removeListener(object, 'unbind:' + key, callback, context, info);

    return object;
}
//# sourceMappingURL=_removedomlistener.js.map