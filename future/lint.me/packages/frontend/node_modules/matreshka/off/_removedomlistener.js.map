{"version":3,"sources":["../../src/off/_removedomlistener.js"],"names":["removeDomListener","object","key","eventName","selector","callback","context","info","def","defs","get","props","propDef","bindings","nodes","Array","length","eventNamespace","id","index","binding","node","dom","$","off","removeListener"],"mappings":";;mBAAiB,e;;6BACU,mB;;kBACX,S;;AAEhB;iBACwBA,iB;AAAT,SAASA,iBAAT,CACXC,MADW,EAEXC,GAFW,EAGXC,SAHW,EAIXC,QAJW,EAKXC,QALW,EAMXC,OANW,EAOXC,IAPW,EAQb;AACE,QAAMC,MAAMC,KAAKC,GAAL,CAAST,MAAT,CAAZ;;AAEA,QAAI,CAACO,GAAL,EAAU;AACN,eAAOP,MAAP;AACH;;AALH,QAOUU,KAPV,GAOoBH,GAPpB,CAOUG,KAPV;;AAQE,QAAMC,UAAUD,MAAMT,GAAN,CAAhB;;AAEA,QAAI,CAACU,OAAL,EAAc;AACV,eAAOX,MAAP;AACH;;AAZH,QAcUY,QAdV,GAcuBD,OAdvB,CAcUC,QAdV;;;AAgBE,QAAIA,QAAJ,EAAc;AAAA;AACV;AACA,gBAAMC,QAAQC,MAAMF,SAASG,MAAf,CAAd;AACA,gBAAMC,iBAAiBT,IAAIU,EAAJ,GAAShB,GAAhC;;AAHU,+BAKGW,QALH,EAKuBM,KALvB,MAKcC,OALd,uBAKcA,OALd,WAKuBD,KALvB,GAKuBA,KALvB,OAKuBA,KALvB,IAKiC;AACvCL,sBAAMK,KAAN,IAAeC,QAAQC,IAAvB;AACH;;AAEDC,gBAAIC,CAAJ,CAAMT,KAAN,EAAaU,GAAb,CAAoBrB,SAApB,SAAiCc,cAAjC,EAAmDb,QAAnD,EAA6DC,QAA7D;AATU;AAUb;;AAED;AACAoB,mBAAexB,MAAf,YAA+BC,GAA/B,EAAsCG,QAAtC,EAAgDC,OAAhD,EAAyDC,IAAzD;AACAkB,mBAAexB,MAAf,cAAiCC,GAAjC,EAAwCG,QAAxC,EAAkDC,OAAlD,EAA2DC,IAA3D;;AAEA,WAAON,MAAP;AACH","file":"_removedomlistener.js","sourcesContent":["import defs from '../_core/defs';\nimport removeListener from './_removelistener';\nimport dom from '../_dom';\n\n// removes dom listener from nodes bound to given key\nexport default function removeDomListener(\n    object,\n    key,\n    eventName,\n    selector,\n    callback,\n    context,\n    info\n) {\n    const def = defs.get(object);\n\n    if (!def) {\n        return object;\n    }\n\n    const { props } = def;\n    const propDef = props[key];\n\n    if (!propDef) {\n        return object;\n    }\n\n    const { bindings } = propDef;\n\n    if (bindings) {\n        // collect bound nodes and remove DOM event listener\n        const nodes = Array(bindings.length);\n        const eventNamespace = def.id + key;\n\n        nofn.forEach(bindings, (binding, index) => {\n            nodes[index] = binding.node;\n        });\n\n        dom.$(nodes).off(`${eventName}.${eventNamespace}`, selector, callback);\n    }\n\n    // remove bind and unbind listeners from given key\n    removeListener(object, `bind:${key}`, callback, context, info);\n    removeListener(object, `unbind:${key}`, callback, context, info);\n\n    return object;\n}\n"]}