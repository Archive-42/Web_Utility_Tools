'use strict';

var apply = require('../_helpers/apply');

// returns DOM event handler
module.exports = createDomEventHandler;
function createDomEventHandler(_ref) {
    var key = _ref.key,
        object = _ref.object,
        callback = _ref.callback,
        context = _ref.context;

    return function domEventHandler(domEvent) {
        var originalEvent = domEvent.originalEvent || domEvent;
        // matreshkaTriggerArgs are created when DOM event is triggered by trigger method
        var triggerArgs = originalEvent.matreshkaTriggerArgs;
        var which = domEvent.which,
            target = domEvent.target,
            ctrlKey = domEvent.ctrlKey,
            altKey = domEvent.altKey;


        if (triggerArgs) {
            // if args are passed to trigger method then pass them to an event handler
            apply(callback, context, triggerArgs);
        } else {
            // use the following object as an arg for event handler
            callback.call(context, {
                self: object,
                node: this,
                preventDefault: function () {
                    return domEvent.preventDefault();
                },
                stopPropagation: function () {
                    return domEvent.stopPropagation();
                },
                key: key,
                domEvent: domEvent,
                originalEvent: originalEvent,
                which: which,
                target: target,
                ctrlKey: ctrlKey,
                altKey: altKey
            });
        }
    };
}
//# sourceMappingURL=_createdomeventhandler.js.map