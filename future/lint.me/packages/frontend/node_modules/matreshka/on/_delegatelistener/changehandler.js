'use strict';

var undelegateListener = require('../../off/_undelegatelistener');

var triggerOne = require('../../trigger/_triggerone');

// the function is called when some part of a path is changed
// it delegates event listener for new branch of an object and undelegates it for old one
// used for non-asterisk events
module.exports = changeHandler;
function changeHandler(_ref) {
    var previousValue = _ref.previousValue,
        value = _ref.value;

    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : triggerOne.latestEvent.info.delegatedData,
        path = _ref2.path,
        name = _ref2.name,
        callback = _ref2.callback,
        context = _ref2.context,
        info = _ref2.info;

    if (value && typeof value === 'object') {
        var delegateListener = require('./'); // fixing circular ref

        delegateListener(value, path, name, callback, context, info);
    }

    if (previousValue && typeof previousValue === 'object') {
        undelegateListener(previousValue, path, name, callback, context, info);
    }
}
//# sourceMappingURL=changehandler.js.map