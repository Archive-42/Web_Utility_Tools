'use strict';

var triggerOne = require('../../trigger/_triggerone');

var defs = require('../../_core/defs');

// the function is called when data property is changed in Matreshka.Object
// it delegates asterisk listener for new value
module.exports = objectSetHandler;
function objectSetHandler(_ref) {
    var key = _ref.key;

    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : triggerOne.latestEvent.info.delegatedData,
        path = _ref2.path,
        name = _ref2.name,
        callback = _ref2.callback,
        context = _ref2.context,
        info = _ref2.info,
        object = _ref2.object;

    if (key) {
        var item = object[key];

        if (item && typeof item === 'object') {
            var def = defs.get(object);
            if (key in def.keys) {
                var delegateListener = require('./'); // fixing circular ref

                delegateListener(item, path, name, callback, context, info);
            }
        }
    }
}
//# sourceMappingURL=objectsethandler.js.map