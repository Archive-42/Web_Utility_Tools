'use strict';

var on = require('./on');

var checkObjectType = require('./_helpers/checkobjecttype');

var debounce = require('./_helpers/debounce');

// adds debounced event listener
module.exports = onDebounce;
function onDebounce(object, names, givenCallback, givenDelay, triggerOnInit, context) {
    if (typeof this === 'object' && this.isMatreshka) {
        // when context is Matreshka instance, use this as an object and shift other args
        /* eslint-disable no-param-reassign */
        context = triggerOnInit;
        triggerOnInit = givenDelay;
        givenDelay = givenCallback;
        givenCallback = names;
        names = object;
        object = this;
        /* eslint-enable no-param-reassign */
    } else {
        // throw error when object type is wrong
        checkObjectType(object, 'onDebounce');
    }

    var isNamesVarArray = names instanceof Array;

    // allow to pass name-handler object
    if (names && typeof names === 'object' && !isNamesVarArray) {
        for (var _target = names, _keys = Object.keys(_target), _i = 0, namesObjName, namesObjCallback, _l = _keys.length; (namesObjName = _keys[_i], namesObjCallback = _target[namesObjName]), _i < _l; _i++) {
            onDebounce(object, namesObjName, namesObjCallback, givenCallback, givenDelay, triggerOnInit)
        }

        return object;
    }

    var delay = typeof givenDelay === 'number' ? givenDelay : 0;

    var callback = debounce(givenCallback, delay);

    // allow to remove event listener py passing original callback to "off"
    callback._callback = givenCallback;

    return on(object, names, callback, triggerOnInit, context);
}
//# sourceMappingURL=ondebounce.js.map