{"version":3,"sources":["../src/ondebounce.js"],"names":["onDebounce","object","names","givenCallback","givenDelay","triggerOnInit","context","isMatreshka","checkObjectType","isNamesVarArray","Array","namesObjName","namesObjCallback","delay","callback","debounce","_callback","on"],"mappings":";;iBAAe,M;;8BACa,4B;;uBACP,qB;;AAErB;iBACwBA,U;AAAT,SAASA,UAAT,CACXC,MADW,EAEXC,KAFW,EAGXC,aAHW,EAIXC,UAJW,EAKXC,aALW,EAMXC,OANW,EAOb;AACE,QAAI,OAAO,IAAP,KAAgB,QAAhB,IAA4B,KAAKC,WAArC,EAAkD;AAC9C;AACA;AACAD,kBAAUD,aAAV;AACAA,wBAAgBD,UAAhB;AACAA,qBAAaD,aAAb;AACAA,wBAAgBD,KAAhB;AACAA,gBAAQD,MAAR;AACAA,iBAAS,IAAT;AACA;AACH,KAVD,MAUO;AACH;AACAO,wBAAgBP,MAAhB,EAAwB,YAAxB;AACH;;AAED,QAAMQ,kBAAkBP,iBAAiBQ,KAAzC;;AAEA;AACA,QAAIR,SAAS,OAAOA,KAAP,KAAiB,QAA1B,IAAsC,CAACO,eAA3C,EAA4D;AAAA,2BAC5CP,KAD4C,wCAClBS,YADkB,EACpCC,gBADoC,sBAClBD,YADkB,cACpCC,gBADoC,WAClBD,YADkB;AACDX,uBACnDC,MADmD,EAEnDU,YAFmD,EAGnDC,gBAHmD,EAInDT,aAJmD,EAKnDC,UALmD,EAMnDC,aANmD;AADC;;AAUxD,eAAOJ,MAAP;AACH;;AAED,QAAMY,QAAQ,OAAOT,UAAP,KAAsB,QAAtB,GAAiCA,UAAjC,GAA8C,CAA5D;;AAEA,QAAMU,WAAWC,SAASZ,aAAT,EAAwBU,KAAxB,CAAjB;;AAEA;AACAC,aAASE,SAAT,GAAqBb,aAArB;;AAEA,WAAOc,GAAGhB,MAAH,EAAWC,KAAX,EAAkBY,QAAlB,EAA4BT,aAA5B,EAA2CC,OAA3C,CAAP;AACH","file":"ondebounce.js","sourcesContent":["import on from './on';\nimport checkObjectType from './_helpers/checkobjecttype';\nimport debounce from './_helpers/debounce';\n\n// adds debounced event listener\nexport default function onDebounce(\n    object,\n    names,\n    givenCallback,\n    givenDelay,\n    triggerOnInit,\n    context\n) {\n    if (typeof this === 'object' && this.isMatreshka) {\n        // when context is Matreshka instance, use this as an object and shift other args\n        /* eslint-disable no-param-reassign */\n        context = triggerOnInit;\n        triggerOnInit = givenDelay;\n        givenDelay = givenCallback;\n        givenCallback = names;\n        names = object;\n        object = this;\n        /* eslint-enable no-param-reassign */\n    } else {\n        // throw error when object type is wrong\n        checkObjectType(object, 'onDebounce');\n    }\n\n    const isNamesVarArray = names instanceof Array;\n\n    // allow to pass name-handler object\n    if (names && typeof names === 'object' && !isNamesVarArray) {\n        nofn.forOwn(names, (namesObjCallback, namesObjName) => onDebounce(\n            object,\n            namesObjName,\n            namesObjCallback,\n            givenCallback,\n            givenDelay,\n            triggerOnInit\n        ));\n\n        return object;\n    }\n\n    const delay = typeof givenDelay === 'number' ? givenDelay : 0;\n\n    const callback = debounce(givenCallback, delay);\n\n    // allow to remove event listener py passing original callback to \"off\"\n    callback._callback = givenCallback;\n\n    return on(object, names, callback, triggerOnInit, context);\n}\n"]}