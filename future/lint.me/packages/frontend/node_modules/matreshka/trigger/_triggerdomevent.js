'use strict';

var triggerOneDOMEvent = require('./_triggeronedomevent');

var defs = require('../_core/defs');

// triggers DOM event on bound nodes
module.exports = triggerDOMEvent;
function triggerDOMEvent(object, key, eventName, selector, triggerArgs) {
    var def = defs.get(object);

    if (!def) {
        return;
    }

    var props = def.props;

    var propDef = props[key];

    if (!propDef) {
        return;
    }

    var bindings = propDef.bindings;


    if (!bindings) {
        return;
    }

    for (var _target2 = bindings, _index2 = 0, _ref, _l2 = _target2.length; _ref = _target2[_index2], _index2 < _l2; _index2++) {
        var node = _ref.node;

        if (selector) {
            // if selector is given trigger an event on all node descendants
            var descendants = node.querySelectorAll(selector);

            for (var _target = descendants, _index = 0, descendant, _l = _target.length; descendant = _target[_index], _index < _l; _index++) {
                triggerOneDOMEvent({
                    node: descendant,
                    eventName: eventName,
                    triggerArgs: triggerArgs
                });
            }
        } else {
            // trigger an event for single node
            triggerOneDOMEvent({
                node: node,
                eventName: eventName,
                triggerArgs: triggerArgs
            });
        }
    }

    return;
}
//# sourceMappingURL=_triggerdomevent.js.map