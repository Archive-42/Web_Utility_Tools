{"version":3,"sources":["../../src/_core/init.js"],"names":["objectId","initSeemple","object","def","defs","get","events","props","id","set","_afterInit"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAIA,QAAQ,GAAG,CAAf,C,CAEA;;AACe,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC1C,MAAIC,GAAG,GAAGC,iBAAKC,GAAL,CAASH,MAAT,CAAV;;AACA,MAAI,CAACC,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAG;AACJ;AACA;AACAG,MAAAA,MAAM,EAAE;AACN;;;;;;;AADM,OAHJ;AAYJ;AACAC,MAAAA,KAAK,EAAE;AACL;;;;;;;;;;;AADK,OAbH;AA0BJC,MAAAA,EAAE,EAAER;AA1BA,KAAN;AA6BAA,IAAAA,QAAQ,IAAI,CAAZ;;AAEAI,qBAAKK,GAAL,CAASP,MAAT,EAAiBC,GAAjB;;AAEA,QAAID,MAAM,CAACQ,UAAX,EAAuB;AACrBR,MAAAA,MAAM,CAACQ,UAAP,CAAkBP,GAAlB;AACD;AACF;;AAED,SAAOA,GAAP;AACD","sourcesContent":["import defs from './defs';\n\nlet objectId = 0;\n\n// this is common function which associates an object with its Seemple definition\nexport default function initSeemple(object) {\n  let def = defs.get(object);\n  if (!def) {\n    def = {\n      // a property name of \"events\" object is an event name\n      // and a value is an array of event handlers\n      events: {\n        /* example: {\n                    callback: function,\n                    ctx: object,\n                    context: object2,\n                    name: \"example\",\n                    info: { ...extra data for an event... }\n                } */\n      },\n      // \"props\" contains special information about properties (getters, setters etc)\n      props: {\n        /* example: {\n                    value: object[key],\n                    mediator: null,\n                    bindings: [{\n                        node,\n                        binder,\n                        nodeHandler,\n                        objectHandler,\n                        ...other required info\n                    }]\n                } */\n      },\n      id: objectId\n    };\n\n    objectId += 1;\n\n    defs.set(object, def);\n\n    if (object._afterInit) {\n      object._afterInit(def);\n    }\n  }\n\n  return def;\n}\n"],"file":"init.js"}