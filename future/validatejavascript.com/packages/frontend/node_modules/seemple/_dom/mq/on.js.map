{"version":3,"sources":["../../../src/_dom/mq/on.js"],"names":["splitBySpaceReg","splitByDotReg","randomID","Math","random","toString","replace","is","node","selector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","call","delegateHandler","evt","handler","scopeSelector","splittedSelector","split","matching","i","length","sel","setAttribute","target","removeAttribute","on","namesStr","names","delegate","uniqueDelegateHandler","name","namespace","j","nodeID","b$","data","nodeIndex","events","allEvents","exist","k","event","push","addEventListener"],"mappings":"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","sourcesContent":["import data from './_data';\n\nconst splitBySpaceReg = /\\s+/;\nconst splitByDotReg = /\\.(.+)/;\nconst randomID = `${Math.random().toString().replace('0.', 'x')}y`; // x12345y\n\n// checks an element against a selector\nfunction is(node, selector) {\n  return (node.matches\n            || node.webkitMatchesSelector\n            || node.mozMatchesSelector\n            || node.msMatchesSelector\n            || node.oMatchesSelector).call(node, selector);\n}\n\n// the function is used when a selector is given\nfunction delegateHandler(evt, selector, handler) {\n  const scopeSelector = `[${randomID}=\"${randomID}\"] `;\n  const splittedSelector = selector.split(',');\n\n  let matching = '';\n\n  for (let i = 0; i < splittedSelector.length; i++) {\n    const sel = splittedSelector[i];\n    matching += `${i === 0 ? '' : ','}${scopeSelector}${sel},${scopeSelector}${sel} *`;\n  }\n\n\n  this.setAttribute(randomID, randomID);\n\n  if (is(evt.target, matching)) {\n    handler.call(this, evt);\n  }\n\n  this.removeAttribute(randomID);\n}\n\n// adds event listener to a set of elemnts\nexport default function on(namesStr, selector, handler) {\n  const names = namesStr.split(splitBySpaceReg);\n  let delegate;\n\n  if (typeof selector === 'function') {\n    handler = selector; // eslint-disable-line no-param-reassign\n    selector = null; // eslint-disable-line no-param-reassign\n  }\n\n  if (selector) {\n    delegate = function uniqueDelegateHandler(evt) {\n      delegateHandler.call(this, evt, selector, handler);\n    };\n  }\n\n  for (let i = 0; i < names.length; i++) {\n    const [name, namespace] = names[i].split(splitByDotReg);\n\n    for (let j = 0; j < this.length; j++) {\n      const node = this[j];\n      const nodeID = node.b$ = node.b$ || ++data.nodeIndex; // eslint-disable-line no-plusplus\n      const events = data.allEvents[name + nodeID] = data.allEvents[name + nodeID] || [];\n\n      let exist = false;\n\n      for (let k = 0; k < events.length; k++) {\n        const event = events[k];\n\n        if (handler === event.handler && (!selector || selector === event.selector)) {\n          exist = true;\n          break;\n        }\n      }\n\n      if (!exist) {\n        events.push({\n          delegate,\n          handler,\n          namespace,\n          selector,\n          nodeID,\n          name\n        });\n\n        node.addEventListener(name, delegate || handler, false);\n      }\n    }\n  }\n\n  return this;\n}\n"],"file":"on.js"}