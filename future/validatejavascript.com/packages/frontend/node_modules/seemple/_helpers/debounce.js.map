{"version":3,"sources":["../../src/_helpers/debounce.js"],"names":["debounce","func","givenDelay","thisArg","timeout","delay","debounced","args","arguments","callContext","clearTimeout","setTimeout"],"mappings":";;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AAEe,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6C;AAC1D,MAAIC,OAAJ;AACA,MAAIC,KAAJ;;AACA,MAAI,OAAOH,UAAP,KAAsB,QAA1B,EAAoC;AAClCC,IAAAA,OAAO,GAAGD,UAAV,CADkC,CACZ;;AACtBG,IAAAA,KAAK,GAAG,CAAR;AACD,GAHD,MAGO;AACLA,IAAAA,KAAK,GAAGH,UAAU,IAAI,CAAtB;AACD;;AAED,SAAO,SAASI,SAAT,GAAqB;AAC1B,QAAMC,IAAI,GAAGC,SAAb;AACA,QAAMC,WAAW,GAAGN,OAAO,IAAI,IAA/B;AAEAO,IAAAA,YAAY,CAACN,OAAD,CAAZ;AAEAA,IAAAA,OAAO,GAAGO,UAAU,CAAC;AAAA,aAAM,uBAAMV,IAAN,EAAYQ,WAAZ,EAAyBF,IAAzB,CAAN;AAAA,KAAD,EAAuCF,KAAvC,CAApB;AACD,GAPD;AAQD","sourcesContent":["import apply from './apply';\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds.\n// (c) https://davidwalsh.name/javascript-debounce-function\n\nexport default function debounce(func, givenDelay, thisArg) {\n  let timeout;\n  let delay;\n  if (typeof givenDelay !== 'number') {\n    thisArg = givenDelay; // eslint-disable-line no-param-reassign\n    delay = 0;\n  } else {\n    delay = givenDelay || 0;\n  }\n\n  return function debounced() {\n    const args = arguments;\n    const callContext = thisArg || this;\n\n    clearTimeout(timeout);\n\n    timeout = setTimeout(() => apply(func, callContext, args), delay);\n  };\n}\n"],"file":"debounce.js"}