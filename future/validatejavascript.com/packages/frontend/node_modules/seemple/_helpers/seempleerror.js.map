{"version":3,"sources":["../../src/_helpers/seempleerror.js"],"names":["bindingErrorPrefix","calcErrorPrefix","eventsErrorPrefix","arrayErrorPrefix","getType","variable","getTypeError","variableName","expectedType","errors","object","method","key","node","selectorInfo","$nodes","missing","target","sourceKey","sourceObject","source","Model","length","selector","toRemove","names","seempleError","data","getError","Error"],"mappings":"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","sourcesContent":["/* eslint-disable prefer-template, max-len */\nconst bindingErrorPrefix = 'Binding error:';\nconst calcErrorPrefix = 'Calc error:';\nconst eventsErrorPrefix = 'Events error:';\nconst arrayErrorPrefix = 'Seemple.Array error:';\n\nconst getType = (variable) => {\n  if (variable === null) {\n    return 'null';\n  }\n\n  return typeof variable;\n};\nconst getTypeError = (variable, variableName, expectedType) => `${variableName} must have type \"${expectedType}\" but got \"${getType(variable)}\" instead.`;\n\nconst errors = {\n  'common:object_type': ({ object, method }) => `Error in ${method}: `\n        + getTypeError(object, 'object', 'object'),\n  'common:call_class': () => 'Cannot call a class as a function',\n  'common:use_magic_props': () => '\"sandbox\" key (for all objects) and \"container\" key (for Seemple.Array instances)'\n        + ' are reserved for service use and cannot be used as usual properties',\n\n  'binding:node_missing': ({ key, node }) => {\n    const selectorInfo = typeof node === 'string' ? ` (given selector is \"${node}\")` : '';\n    return `${bindingErrorPrefix} node is missing for key \"${key}\"${selectorInfo}.`;\n  },\n  'binding:falsy_key': () => `${bindingErrorPrefix} \"key\" arg cannot be falsy`,\n  'binding:instance_nodes_missing': ({ $nodes }) => {\n    const missing = !$nodes ? '$nodes' : 'nodes';\n    return `${bindingErrorPrefix} \"${missing}\" property of Seemple instance is missing.`\n            + ' It must be an object and must not be reassigned.';\n  },\n  'binding:magic_props_nodes_length': () => `${bindingErrorPrefix} \"sandbox\" key (for all objects) and \"container\" key`\n        + ' (for Seemple.Array instances) cannot have more than one bound node',\n\n  'calc:target_type': ({ target }) => `${calcErrorPrefix} ${getTypeError(target, 'target key', 'string')}`,\n  'calc:source_key_type': ({ sourceKey }) => `${calcErrorPrefix} ${getTypeError(sourceKey, 'source key', 'string')}`,\n  'calc:source_object_type': ({ sourceObject }) => `${calcErrorPrefix} ${getTypeError(sourceObject, 'source object', 'object')}`,\n  'calc:source_type': ({ source }) => `${calcErrorPrefix} ${getTypeError(source, 'source', 'object')}`,\n\n  'array:model_type': ({ Model }) => `${arrayErrorPrefix} ${getTypeError(Model, 'Model', 'function')}`,\n  'array:add_render_twice': () => `${arrayErrorPrefix} one rendered object was inserted twice.`,\n  'array:rendered_number_nodes': ({ length }) => `${arrayErrorPrefix} renderer returned ${length} nodes instead of one.`\n        + ` ${length > 0 ? 'To fix this wrap these nodes by single node.' : ''}`,\n  'array:renderer_node_missing': ({ selector }) => `${arrayErrorPrefix} renderer node is missing (given selector is \"${selector}\")`,\n  'array:nonexistent_method': ({ method }) => `${arrayErrorPrefix} Array.prototype.${method} doesn't exist.`\n            + ' You need to include a polyfill for it (e. g. babel-node)',\n  'array:method_compat_renderer': ({ method }) => `${arrayErrorPrefix} Not possible to render when ${method} method is called`,\n\n  'pull:to_remove_type': ({ toRemove }) => `Error in pull: ${getTypeError(toRemove, 'toRemove', 'number')}`,\n\n  'restore:no_nodes': () => `${arrayErrorPrefix} cannot find any container to restore an instance using \"restore\" method`,\n\n  'trigger:names_type': ({ names }) => `${eventsErrorPrefix} ${getTypeError(names, 'event name', 'string')}`,\n\n  'on:names_type': ({ names }) => errors['trigger:names_type']({ names }),\n\n  'removedatakeys:key_type': ({ key }) => `Error in removeDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n  'adddatakeys:key_type': ({ key }) => `Error in addDataKeys: ${getTypeError(key, 'key', 'string')}`,\n\n  'remove:key_type': ({ key }) => `Error in remove: ${getTypeError(key, 'key', 'string')}`,\n\n  'mediate:key_type': ({ key }) => `Error in mediate: ${getTypeError(key, 'key', 'string')}`\n};\n\nexport default function seempleError(key, data) {\n  const getError = errors[key];\n  if (!getError) {\n    throw Error(`Unknown error \"${key}\". Please report about this on Github.`);\n  }\n\n  return new Error(getError(data));\n}\n"],"file":"seempleerror.js"}