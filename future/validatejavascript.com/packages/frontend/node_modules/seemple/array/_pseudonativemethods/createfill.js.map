{"version":3,"sources":["../../../src/array/_pseudonativemethods/createfill.js"],"names":["createFill","hasOptions","fill","value","originalFill","Array","prototype","method","argsLength","arguments","length","args","givenEventOptions","i","eventOptions","self","added","removed"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEe,SAASA,UAAT,CAAoBC,UAApB,EAAgC;AAC7C,SAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAC1B,QAAMC,YAAY,GAAGC,KAAK,CAACC,SAAN,CAAgBJ,IAArC;AAEA;;AACA,QAAI,OAAOE,YAAP,KAAwB,UAA5B,EAAwC;AACtC,YAAM,8BAAa,0BAAb,EAAyC;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAzC,CAAN;AACD,KANyB,CAO1B;;;AACA,QAAMC,UAAU,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAACT,UAAvC;AACA,QAAMU,IAAI,GAAGN,KAAK,CAACG,UAAD,CAAlB;AACA,QAAMI,iBAAiB,GAAGX,UAAU,GAAGQ,SAAS,CAACA,SAAS,CAACC,MAAV,GAAmB,CAApB,CAAZ,GAAqC,IAAzE;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,EAAjC,EAAqC;AACnCF,MAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUJ,SAAS,CAACI,CAAD,CAAnB;AACD;;AAED,2BAAMT,YAAN,EAAoB,IAApB,EAA0BO,IAA1B;AAEA,QAAMG,YAAY,GAAG;AACnBP,MAAAA,MAAM,EAAE,MADW;AAEnBQ,MAAAA,IAAI,EAAE,IAFa;AAGnBC,MAAAA,KAAK,EAAE,CAACb,KAAD,CAHY;AAInBc,MAAAA,OAAO,EAAE;AAJU,KAArB,CAlB0B,CAyB1B;;AACA,QAAIhB,UAAJ,EAAgB;AACd,UAAIW,iBAAiB,IAAI,yBAAOA,iBAAP,MAA6B,QAAtD,EAAgE;AAC9D,gCAAOE,YAAP,EAAqBF,iBAArB;AACD;AACF;;AAED,oCAAe,IAAf,EAAqBE,YAArB;AAEA,WAAO,IAAP;AACD,GAnCD;AAoCD","sourcesContent":["import apply from '../../_helpers/apply';\nimport reportModified from '../_reportmodified';\nimport seempleError from '../../_helpers/seempleerror';\nimport assign from '../../_helpers/assign';\n\nexport default function createFill(hasOptions) {\n  return function fill(value) {\n    const originalFill = Array.prototype.fill;\n\n    /* istanbul ignore if  */\n    if (typeof originalFill !== 'function') {\n      throw seempleError('array:nonexistent_method', { method: 'fill' });\n    }\n    // +hasOptions is converted to 0 or 1 depending on its value (false/true)\n    const argsLength = arguments.length - +hasOptions;\n    const args = Array(argsLength);\n    const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n\n    for (let i = 0; i < argsLength; i++) {\n      args[i] = arguments[i];\n    }\n\n    apply(originalFill, this, args);\n\n    const eventOptions = {\n      method: 'fill',\n      self: this,\n      added: [value],\n      removed: []\n    };\n\n    // extend event options by custom event options if they are given\n    if (hasOptions) {\n      if (givenEventOptions && typeof givenEventOptions === 'object') {\n        assign(eventOptions, givenEventOptions);\n      }\n    }\n\n    reportModified(this, eventOptions);\n\n    return this;\n  };\n}\n"],"file":"createfill.js"}