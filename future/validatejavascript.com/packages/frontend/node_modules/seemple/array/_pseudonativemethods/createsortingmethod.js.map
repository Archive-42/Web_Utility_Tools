{"version":3,"sources":["../../../src/array/_pseudonativemethods/createsortingmethod.js"],"names":["createSortingMethod","name","hasOptions","pseudoNativeMethod","sortCallback","length","givenEventOptions","arguments","method","Array","prototype","eventOptions","self","added","removed","call"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACe,SAASA,mBAAT,CAA6BC,IAA7B,EAAmCC,UAAnC,EAA+C;AAC5D,SAAO,SAASC,kBAAT,CAA4BC,YAA5B,EAA0C;AAC/C,QAAI,KAAKC,MAAL,GAAc,CAAlB,EAAqB,OAAO,IAAP;AACrB,0BAAY,IAAZ;AAEA,QAAMC,iBAAiB,GAAGJ,UAAU,GAAGK,SAAS,CAACA,SAAS,CAACF,MAAV,GAAmB,CAApB,CAAZ,GAAqC,IAAzE;AACA,QAAMG,MAAM,GAAGC,KAAK,CAACC,SAAN,CAAgBT,IAAhB,CAAf;AAEA,QAAMU,YAAY,GAAG;AACnBH,MAAAA,MAAM,EAAEP,IADW;AAEnBW,MAAAA,IAAI,EAAE,IAFa;AAGnBC,MAAAA,KAAK,EAAE,EAHY;AAInBC,MAAAA,OAAO,EAAE;AAJU,KAArB,CAP+C,CAc/C;;AACA,QAAIb,IAAI,KAAK,MAAT,IAAmB,OAAOG,YAAP,KAAwB,UAA/C,EAA2D;AACzDI,MAAAA,MAAM,CAACO,IAAP,CAAY,IAAZ,EAAkBX,YAAlB;AACD,KAFD,MAEO;AACLI,MAAAA,MAAM,CAACO,IAAP,CAAY,IAAZ;AACD,KAnB8C,CAqB/C;;;AACA,QAAIb,UAAJ,EAAgB;AACd,UAAII,iBAAiB,IAAI,yBAAOA,iBAAP,MAA6B,QAAtD,EAAgE;AAC9D,gCAAOK,YAAP,EAAqBL,iBAArB;AACD;AACF;;AAED,oCAAe,IAAf,EAAqBK,YAArB;AAEA,WAAO,IAAP;AACD,GA/BD;AAgCD","sourcesContent":["import initSeemple from '../../_core/init';\nimport reportModified from '../_reportmodified';\nimport assign from '../../_helpers/assign';\n\n// creates sorting method and returns it (sort, reverse, sort_, reverse_)\nexport default function createSortingMethod(name, hasOptions) {\n  return function pseudoNativeMethod(sortCallback) {\n    if (this.length < 2) return this;\n    initSeemple(this);\n\n    const givenEventOptions = hasOptions ? arguments[arguments.length - 1] : null;\n    const method = Array.prototype[name];\n\n    const eventOptions = {\n      method: name,\n      self: this,\n      added: [],\n      removed: []\n    };\n\n    // call original method\n    if (name === 'sort' && typeof sortCallback === 'function') {\n      method.call(this, sortCallback);\n    } else {\n      method.call(this);\n    }\n\n    // extend event options by custom event options if they are given\n    if (hasOptions) {\n      if (givenEventOptions && typeof givenEventOptions === 'object') {\n        assign(eventOptions, givenEventOptions);\n      }\n    }\n\n    reportModified(this, eventOptions);\n\n    return this;\n  };\n}\n"],"file":"createsortingmethod.js"}