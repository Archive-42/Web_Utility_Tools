"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = from;

var _cheaprecreate = _interopRequireDefault(require("./_cheaprecreate"));

// creates a new Seemple.Array instance from an array-like or iterable object
function from(arrayLike, mapFn, thisArg) {
  // allow to inherit this method by child classes
  // require('./') fixes circular ref issue
  var ParentClass = typeof this === 'function' ? this : require('./')["default"];
  var result = new ParentClass();
  var length = arrayLike.length;
  var arrayFrom = Array.from;
  var newItems;
  /* istanbul ignore else */

  if (typeof arrayFrom === 'function') {
    // if Array.from exist, let it do all the job (work with iterable objects etc)
    newItems = arrayFrom(arrayLike, mapFn, thisArg);
  } else {
    // convert array-like object for older browsers
    // @IE
    newItems = Array(length);

    for (var i = 0; i < length; i++) {
      if (typeof mapFn === 'function') {
        newItems[i] = mapFn.call(thisArg, arrayLike[i], i, arrayLike);
      } else {
        newItems[i] = arrayLike[i];
      }
    }
  }

  return (0, _cheaprecreate["default"])(result, newItems);
}
//# sourceMappingURL=from.js.map