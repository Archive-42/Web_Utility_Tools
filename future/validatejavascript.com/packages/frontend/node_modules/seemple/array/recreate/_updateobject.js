"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = updateObject;

var _forown = _interopRequireDefault(require("../../_helpers/forown"));

// updates one single object by new data
// for Seemple.Array instance call recreate method
// for Seemple.Object instance call setData method
// for other objects just extend them by properties of data parameter
function updateObject(instance, data) {
  if (instance.isSeempleArray) {
    instance.recreate(data);
  } else if (instance.isSeempleObject) {
    // QUESTION: Is it OK to just extend but not replace instance data?
    instance.setData(data);
  } else {
    (0, _forown["default"])(data, function (value, key) {
      instance[key] = value;
    });
  }

  return instance;
}
//# sourceMappingURL=_updateobject.js.map