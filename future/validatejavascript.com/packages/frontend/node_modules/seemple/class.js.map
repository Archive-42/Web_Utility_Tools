{"version":3,"sources":["../src/class.js"],"names":["staticNamesProperty","Symbol","getOwnPropertySymbols","Object","hasOwnProperty","prototype","Class","staticProps","Constructor","call","constructor","EmptyConstructor","Parent","proto","create","parentStaticNames","undefined","symbols","symbol","staticNames","_","name","value","key"],"mappings":"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","sourcesContent":["import forEach from './_helpers/foreach';\nimport forOwn from './_helpers/forown';\nimport assign from './_helpers/assign';\n\n// static methods and properties of classes will be hidden under Symbol('staticNames')\nconst staticNamesProperty = typeof Symbol === 'function' ? Symbol('staticNames') : '__staticNames';\nconst { getOwnPropertySymbols } = Object;\nconst { hasOwnProperty } = Object.prototype;\n\nexport default function Class(prototype, staticProps) {\n  const Constructor = hasOwnProperty.call(prototype, 'constructor')\n    ? prototype.constructor\n    : function EmptyConstructor() {};\n    // extends is kept for backward compatibility\n  const Parent = prototype.extends;\n  // inherit proto from class parent or empty object\n  const proto = Object.create(Parent ? Parent.prototype : {});\n  const parentStaticNames = Parent ? Parent[staticNamesProperty] : undefined;\n\n  assign(proto, prototype);\n\n  // allow to pass symbols as prototype properties\n  if (getOwnPropertySymbols) {\n    const symbols = getOwnPropertySymbols(prototype);\n    forEach(symbols, (symbol) => {\n      proto[symbol] = prototype[symbol];\n    });\n  }\n\n  // inherit staric properties of a parent\n  if (typeof parentStaticNames === 'object') {\n    const staticNames = Constructor[staticNamesProperty] || {};\n    Constructor[staticNamesProperty] = staticNames;\n\n    forOwn(parentStaticNames, (_, name) => {\n      Constructor[name] = Parent[name];\n      staticNames[name] = true;\n    });\n\n    // inherit static properties of a parent when their keys are symbols\n    if (getOwnPropertySymbols) {\n      const symbols = getOwnPropertySymbols(parentStaticNames);\n      forEach(symbols, (symbol) => {\n        Constructor[symbol] = Parent[symbol];\n        staticNames[symbol] = true;\n      });\n    }\n  }\n\n  // extend Constructor with passed static properties\n  if (typeof staticProps === 'object') {\n    const staticNames = Constructor[staticNamesProperty] || {};\n    Constructor[staticNamesProperty] = staticNames;\n\n    forOwn(staticProps, (value, key) => {\n      Constructor[key] = value;\n      staticNames[key] = true;\n    });\n\n    // extend Constructor with passed static properties if their keys are symbols\n    if (getOwnPropertySymbols) {\n      const symbols = getOwnPropertySymbols(staticProps);\n      forEach(symbols, (symbol) => {\n        Constructor[symbol] = staticProps[symbol];\n        staticNames[symbol] = true;\n      });\n    }\n  }\n\n  Constructor.prototype = proto;\n\n  // if new Class({}) is called return its instance\n  if (this instanceof Class) {\n    return new Constructor();\n  }\n\n  return Constructor;\n}\n"],"file":"class.js"}