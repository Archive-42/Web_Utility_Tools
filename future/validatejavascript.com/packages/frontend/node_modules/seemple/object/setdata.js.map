{"version":3,"sources":["../../src/object/setdata.js"],"names":["getNotListedKeys","inObject","fromObject","result","_","key","push","setData","value","eventOptions","keys","replaceData","objVal","objKey","notListedKeys","length","removeDataKeys"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,UAApC,EAAgD;AAC9C,MAAMC,MAAM,GAAG,EAAf;AACA,0BAAOF,QAAP,EAAiB,UAACG,CAAD,EAAIC,GAAJ,EAAY;AAC3B,QAAI,EAAEA,GAAG,IAAIH,UAAT,CAAJ,EAA0B;AACxBC,MAAAA,MAAM,CAACG,IAAP,CAAYD,GAAZ;AACD;AACF,GAJD;AAMA,SAAOF,MAAP;AACD,C,CAED;;;AACe,SAASI,OAAT,CAAiBF,GAAjB,EAAsBG,KAAtB,EAA6BC,YAA7B,EAA2C;AAAA;;AACxD;AACA,MAAI,CAACJ,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AAJuD,qBAMvC,sBAAY,IAAZ,CANuC;AAAA,MAMhDK,IANgD,gBAMhDA,IANgD,EAQxD;;;AACA,MAAI,yBAAOL,GAAP,MAAe,QAAnB,EAA6B;AAC3BI,IAAAA,YAAY,GAAGD,KAAK,IAAI,EAAxB,CAD2B,CACC;;AADD,wBAGHC,YAHG;AAAA,QAGnBE,YAHmB,iBAGnBA,WAHmB,EAK3B;;AACA,4BAAON,GAAP,EAAY,UAACO,MAAD,EAASC,MAAT,EAAoB;AAC9B;AACA,UAAIF,YAAJ,EAAiB;AACf,YAAMG,aAAa,GAAGd,gBAAgB,CAACU,IAAD,EAAOL,GAAP,CAAtC;;AAEA,YAAIS,aAAa,CAACC,MAAlB,EAA0B;AACxB,UAAA,KAAI,CAACC,cAAL,CAAoBF,aAApB;AACD;AACF,OAR6B,CAU9B;;;AACA,kCAAW,KAAX,EAAiBD,MAAjB,EAX8B,CAa9B;;AACAH,MAAAA,IAAI,CAACG,MAAD,CAAJ,GAAe,CAAf,CAd8B,CAgB9B;;AACA,2BAAI,KAAJ,EAAUA,MAAV,EAAkBD,MAAlB,EAA0BH,YAA1B;AACD,KAlBD;AAoBA,WAAO,IAAP;AACD;;AAEDA,EAAAA,YAAY,GAAGA,YAAY,IAAI,EAA/B,CAtCwD,CAsCrB;;AAtCqB,uBAwChCA,YAxCgC;AAAA,MAwChDE,WAxCgD,kBAwChDA,WAxCgD,EA0CxD;;AACA,MAAIA,WAAJ,EAAiB;AACf,QAAMG,aAAa,GAAGd,gBAAgB,CAACU,IAAD,uCAAUL,GAAV,EAAgB,IAAhB,EAAtC;;AAEA,QAAIS,aAAa,CAACC,MAAlB,EAA0B;AACxB,WAAKC,cAAL,CAAoBF,aAApB;AACD;AACF,GAjDuD,CAmDxD;;;AACA,8BAAW,IAAX,EAAiBT,GAAjB,EApDwD,CAsDxD;;AACAK,EAAAA,IAAI,CAACL,GAAD,CAAJ,GAAY,CAAZ,CAvDwD,CAyDxD;;AACA,SAAO,qBAAI,IAAJ,EAAUA,GAAV,EAAeG,KAAf,EAAsBC,YAAtB,CAAP;AACD","sourcesContent":["import initSeemple from '../_core/init';\nimport defineProp from '../_core/defineprop';\nimport forOwn from '../_helpers/forown';\nimport set from '../set';\n\n// returns an array of keys listed at inObject but not listed at fromObject\nfunction getNotListedKeys(inObject, fromObject) {\n  const result = [];\n  forOwn(inObject, (_, key) => {\n    if (!(key in fromObject)) {\n      result.push(key);\n    }\n  });\n\n  return result;\n}\n\n// changes property value and adds given key to a list of data keys\nexport default function setData(key, value, eventOptions) {\n  // if no key or falsy key is given\n  if (!key) {\n    return this;\n  }\n\n  const { keys } = initSeemple(this);\n\n  // allow to pass key-value object\n  if (typeof key === 'object') {\n    eventOptions = value || {}; // eslint-disable-line no-param-reassign\n\n    const { replaceData } = eventOptions;\n\n    // do not call setData recursivally for better performance\n    forOwn(key, (objVal, objKey) => {\n      // remove data keys not listed at key-value object\n      if (replaceData) {\n        const notListedKeys = getNotListedKeys(keys, key);\n\n        if (notListedKeys.length) {\n          this.removeDataKeys(notListedKeys);\n        }\n      }\n\n      // define descriptors for given property\n      defineProp(this, objKey);\n\n      // add a key to a list of keys\n      keys[objKey] = 1;\n\n      // do other things with set method\n      set(this, objKey, objVal, eventOptions);\n    });\n\n    return this;\n  }\n\n  eventOptions = eventOptions || {}; // eslint-disable-line no-param-reassign\n\n  const { replaceData } = eventOptions;\n\n  // remove all data keys except given key\n  if (replaceData) {\n    const notListedKeys = getNotListedKeys(keys, { [key]: true });\n\n    if (notListedKeys.length) {\n      this.removeDataKeys(notListedKeys);\n    }\n  }\n\n  // define descriptors for given property\n  defineProp(this, key);\n\n  // add a key to a list of keys\n  keys[key] = 1;\n\n  // do other things with set method\n  return set(this, key, value, eventOptions);\n}\n"],"file":"setdata.js"}