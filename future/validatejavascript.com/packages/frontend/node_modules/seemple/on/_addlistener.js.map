{"version":3,"sources":["../../src/on/_addlistener.js"],"names":["propModEventReg","addListener","object","name","callback","context","info","allEvents","events","ctx","event","skipChecks","domEventExecResult","domEventReg","exec","eventName","key","selector","addDomListener","require","i","length","existingEvent","argCallback","_callback","eventCallback","push","test","replace"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA,IAAMA,eAAe,GAAG,+GAAxB,C,CAEA;AACA;;AACe,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,OAA7C,EAAiE;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AAAA,qBAChD,sBAAYJ,MAAZ,CADgD;AAAA,MAC9DK,SAD8D,gBACtEC,MADsE;;AAE9E,MAAMC,GAAG,GAAGJ,OAAO,IAAIH,MAAvB;AACA,MAAMM,MAAM,GAAGD,SAAS,CAACJ,IAAD,CAAxB;AACA,MAAMO,KAAK,GAAG;AACZN,IAAAA,QAAQ,EAARA,QADY;AACFC,IAAAA,OAAO,EAAPA,OADE;AACOI,IAAAA,GAAG,EAAHA,GADP;AACYN,IAAAA,IAAI,EAAJA,IADZ;AACkBG,IAAAA,IAAI,EAAJA;AADlB,GAAd,CAJ8E,CAO5E;;AAP4E,yBAQ/CA,IAR+C,CAQtEK,UARsE;AAAA,MAQtEA,UARsE,iCAQzD,KARyD;;AAU9E,MAAI,CAACA,UAAL,EAAiB;AACf,QAAMC,kBAAkB,GAAGC,2BAAYC,IAAZ,CAAiBX,IAAjB,CAA3B;;AAEA,QAAIS,kBAAJ,EAAwB;AAAA,gEAC2BA,kBAD3B;AAAA,UACbG,SADa;AAAA;AAAA,UACFC,GADE,qCACI,SADJ;AAAA,UACeC,QADf,2BAEtB;;;AACA,UAAMC,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAAP,WAAvB;;AAEAD,MAAAA,cAAc,CAAChB,MAAD,EAASc,GAAT,EAAcD,SAAd,EAAyBE,QAAzB,EAAmCb,QAAnC,EAA6CC,OAA7C,EAAsDC,IAAtD,CAAd;AAEA,aAAO,IAAP;AACD;AACF,GAtB6E,CAwB9E;;;AACA,MAAIE,MAAJ,EAAY;AACV,QAAI,CAACG,UAAL,EAAiB;AACf;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,CAACa,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,YAAME,aAAa,GAAGd,MAAM,CAACY,CAAD,CAA5B;AACA,YAAMG,WAAW,GAAInB,QAAQ,IAAIA,QAAQ,CAACoB,SAAtB,IAAoCpB,QAAxD;AACA,YAAMqB,aAAa,GAAGH,aAAa,CAAClB,QAAd,CAAuBoB,SAAvB,IAAoCF,aAAa,CAAClB,QAAxE;;AACA,YAAImB,WAAW,KAAKE,aAAhB,IAAiCH,aAAa,CAACjB,OAAd,KAA0BA,OAA/D,EAAwE;AACtE,iBAAO,KAAP;AACD;AACF;AACF,KAXS,CAaV;;;AACAG,IAAAA,MAAM,CAACkB,IAAP,CAAYhB,KAAZ;AACD,GAfD,MAeO;AACL;AACAH,IAAAA,SAAS,CAACJ,IAAD,CAAT,GAAkB,CAACO,KAAD,CAAlB;AACD;;AAED,MAAIV,eAAe,CAAC2B,IAAhB,CAAqBxB,IAArB,CAAJ,EAAgC;AAC9B;AACA,gCAAWD,MAAX,EAAmBC,IAAI,CAACyB,OAAL,CAAa5B,eAAb,EAA8B,EAA9B,CAAnB;AACD,GAhD6E,CAkD9E;;;AACA,MAAI,CAACW,UAAD,IAAeR,IAAI,CAAC,CAAD,CAAJ,KAAY,GAA/B,EAAoC;AAClC,gCAAWD,MAAX,qBAA+BC,IAA/B,GAAuCO,KAAvC;AACA,gCAAWR,MAAX,EAAmB,UAAnB,EAA+BQ,KAA/B;AACD,GAtD6E,CAwD9E;;;AACA,SAAO,IAAP;AACD","sourcesContent":["import initSeemple from '../_core/init';\nimport triggerOne from '../trigger/_triggerone';\nimport defineProp from '../_core/defineprop';\nimport domEventReg from './_domeventregexp';\n\n// property modifier event regexp\nconst propModEventReg = /^_change:deps:|^_change:bindings:|^_change:delegated:|^_change:common:|^_change:tree:|^change:|^beforechange:/;\n\n// adds simple event listener\n// used as core of event engine\nexport default function addListener(object, name, callback, context, info = {}) {\n  const { events: allEvents } = initSeemple(object);\n  const ctx = context || object;\n  const events = allEvents[name];\n  const event = {\n    callback, context, ctx, name, info\n  };\n    // skipChecks is used by internal methods for better performance\n  const { skipChecks = false } = info;\n\n  if (!skipChecks) {\n    const domEventExecResult = domEventReg.exec(name);\n\n    if (domEventExecResult) {\n      const [, eventName, key = 'sandbox', selector] = domEventExecResult;\n      // fixing circular reference issue\n      const addDomListener = require('./_adddomlistener').default;\n\n      addDomListener(object, key, eventName, selector, callback, context, info);\n\n      return true;\n    }\n  }\n\n  // if there are events with the same name\n  if (events) {\n    if (!skipChecks) {\n      // if there are events with the same data, return false\n      for (let i = 0; i < events.length; i++) {\n        const existingEvent = events[i];\n        const argCallback = (callback && callback._callback) || callback;\n        const eventCallback = existingEvent.callback._callback || existingEvent.callback;\n        if (argCallback === eventCallback && existingEvent.context === context) {\n          return false;\n        }\n      }\n    }\n\n    // if the event isn't found add it to the event list\n    events.push(event);\n  } else {\n    // if there are no events with the same name, create an array with only  one event\n    allEvents[name] = [event];\n  }\n\n  if (propModEventReg.test(name)) {\n    // define needed accessors for KEY\n    defineProp(object, name.replace(propModEventReg, ''));\n  }\n\n  // names prefixed by underscore mean \"private\" events\n  if (!skipChecks && name[0] !== '_') {\n    triggerOne(object, `addevent:${name}`, event);\n    triggerOne(object, 'addevent', event);\n  }\n\n  // if event is added successfully return true\n  return true;\n}\n"],"file":"_addlistener.js"}