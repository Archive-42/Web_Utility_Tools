{"version":3,"sources":["../../src/on/_createdomeventhandler.js"],"names":["createDomEventHandler","key","object","callback","context","domEventHandler","domEvent","originalEvent","triggerArgs","seempleTriggerArgs","which","target","ctrlKey","altKey","call","self","node","preventDefault","stopPropagation"],"mappings":";;;;;;;;;AAAA;;AACA;AACe,SAASA,qBAAT,OAKZ;AAAA,MAJDC,GAIC,QAJDA,GAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,OACC,QADDA,OACC;AACD,SAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACxC,QAAMC,aAAa,GAAGD,QAAQ,CAACC,aAAT,IAA0BD,QAAhD,CADwC,CAExC;;AACA,QAAME,WAAW,GAAGD,aAAa,CAACE,kBAAlC;AAHwC,QAKtCC,KALsC,GAMpCJ,QANoC,CAKtCI,KALsC;AAAA,QAK/BC,MAL+B,GAMpCL,QANoC,CAK/BK,MAL+B;AAAA,QAKvBC,OALuB,GAMpCN,QANoC,CAKvBM,OALuB;AAAA,QAKdC,MALc,GAMpCP,QANoC,CAKdO,MALc;;AAQxC,QAAIL,WAAJ,EAAiB;AACf;AACA,6BAAML,QAAN,EAAgBC,OAAhB,EAAyBI,WAAzB;AACD,KAHD,MAGO;AACL;AACAL,MAAAA,QAAQ,CAACW,IAAT,CAAcV,OAAd,EAAuB;AACrBW,QAAAA,IAAI,EAAEb,MADe;AAErBc,QAAAA,IAAI,EAAE,IAFe;AAGrBC,QAAAA,cAAc,EAAE;AAAA,iBAAMX,QAAQ,CAACW,cAAT,EAAN;AAAA,SAHK;AAIrBC,QAAAA,eAAe,EAAE;AAAA,iBAAMZ,QAAQ,CAACY,eAAT,EAAN;AAAA,SAJI;AAKrBjB,QAAAA,GAAG,EAAHA,GALqB;AAMrBK,QAAAA,QAAQ,EAARA,QANqB;AAOrBC,QAAAA,aAAa,EAAbA,aAPqB;AAQrBG,QAAAA,KAAK,EAALA,KARqB;AASrBC,QAAAA,MAAM,EAANA,MATqB;AAUrBC,QAAAA,OAAO,EAAPA,OAVqB;AAWrBC,QAAAA,MAAM,EAANA;AAXqB,OAAvB;AAaD;AACF,GA3BD;AA4BD","sourcesContent":["import apply from '../_helpers/apply';\n// returns DOM event handler\nexport default function createDomEventHandler({\n  key,\n  object,\n  callback,\n  context\n}) {\n  return function domEventHandler(domEvent) {\n    const originalEvent = domEvent.originalEvent || domEvent;\n    // seempleTriggerArgs are created when DOM event is triggered by trigger method\n    const triggerArgs = originalEvent.seempleTriggerArgs;\n    const {\n      which, target, ctrlKey, altKey\n    } = domEvent;\n\n    if (triggerArgs) {\n      // if args are passed to trigger method then pass them to an event handler\n      apply(callback, context, triggerArgs);\n    } else {\n      // use the following object as an arg for event handler\n      callback.call(context, {\n        self: object,\n        node: this,\n        preventDefault: () => domEvent.preventDefault(),\n        stopPropagation: () => domEvent.stopPropagation(),\n        key,\n        domEvent,\n        originalEvent,\n        which,\n        target,\n        ctrlKey,\n        altKey\n      });\n    }\n  };\n}\n"],"file":"_createdomeventhandler.js"}